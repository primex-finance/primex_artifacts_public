{
  "address": "0xbE6fC8F7EdE207f14FF29B8B2CD2560C5eCBE721",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Buying",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "RateChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_allowedTokens",
          "type": "address[]"
        }
      ],
      "name": "addAllowedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "acceptable",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_investmentAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_buyForToken",
          "type": "address"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "buyers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxSaleAmount",
          "type": "uint256"
        }
      ],
      "name": "changeMaxSaleAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_salePrice",
          "type": "uint256"
        }
      ],
      "name": "changeSalePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_saleStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_saleEnd",
          "type": "uint256"
        }
      ],
      "name": "changeTimestamps",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "completeTokenSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cursor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_count",
          "type": "uint256"
        }
      ],
      "name": "getAllBuyersWithBalances",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "_buyers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_balances",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_newCursor",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBuyersLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_saleStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_saleEnd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_salePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxSaleAmount",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_allowedTokens",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSaleAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_removedTokens",
          "type": "address[]"
        }
      ],
      "name": "removeAllowedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "retrieveToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleEnd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "salePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "tokenMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "multiplier",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "userBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x14ed553cf761c4a056d106bbe4648a60ebccf0a457cd06af46b91c3eda54c985",
  "receipt": {
    "to": null,
    "from": "0xC110b6e93a51ACF1f3DEd19c754789E7A2304F07",
    "contractAddress": "0xbE6fC8F7EdE207f14FF29B8B2CD2560C5eCBE721",
    "transactionIndex": 5,
    "gasUsed": "3540798",
    "logsBloom": "0x
    "blockHash": "0x715df87f89fc692e2dac0533d3c59555b566873144d08126dd848c24e8ec36bc",
    "transactionHash": "0x14ed553cf761c4a056d106bbe4648a60ebccf0a457cd06af46b91c3eda54c985",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 298858646,
        "transactionHash": "0x14ed553cf761c4a056d106bbe4648a60ebccf0a457cd06af46b91c3eda54c985",
        "address": "0xbE6fC8F7EdE207f14FF29B8B2CD2560C5eCBE721",
        "topics": [
          "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000000ff",
        "logIndex": 13,
        "blockHash": "0x715df87f89fc692e2dac0533d3c59555b566873144d08126dd848c24e8ec36bc"
      }
    ],
    "blockNumber": 298858646,
    "cumulativeGasUsed": "4571042",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "9d77c1b9c8a4cca5b0ac54c224496186",
  "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Buying\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"RateChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_allowedTokens\",\"type\":\"address[]\"}],\"name\":\"addAllowedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"allowedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"acceptable\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_investmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_buyForToken\",\"type\":\"address\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"buyers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxSaleAmount\",\"type\":\"uint256\"}],\"name\":\"changeMaxSaleAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_salePrice\",\"type\":\"uint256\"}],\"name\":\"changeSalePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_saleStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_saleEnd\",\"type\":\"uint256\"}],\"name\":\"changeTimestamps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"completeTokenSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cursor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_count\",\"type\":\"uint256\"}],\"name\":\"getAllBuyersWithBalances\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_buyers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_newCursor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBuyersLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_saleStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_saleEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_salePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSaleAmount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_allowedTokens\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSaleAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_removedTokens\",\"type\":\"address[]\"}],\"name\":\"removeAllowedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"retrieveToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"salePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tokenMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"addAllowedTokens(address[])\":{\"params\":{\"_allowedTokens\":\"the array of allowed tokens\"}},\"buy(uint256,address)\":{\"params\":{\"_buyForToken\":\"For what token the pmx will be purchased\",\"_investmentAmount\":\"the amount in usdt/usdc for which the pmx will be bought\"}},\"changeMaxSaleAmount(uint256)\":{\"params\":{\"_maxSaleAmount\":\"the maximum amount of the PMX that can be sold\"}},\"changeSalePrice(uint256)\":{\"params\":{\"_salePrice\":\"The new sale rate in WAD format to be set.\"}},\"changeTimestamps(uint256,uint256)\":{\"params\":{\"_saleEnd\":\"the timestamp at which the token sale will end\",\"_saleStart\":\"the timestamp at which the token sale will begin\"}},\"initialize(uint256,uint256,uint256,uint256,address[])\":{\"details\":\"This function should only be called once during the initial setup of the contract.\",\"params\":{\"_allowedTokens\":\"Array of tokens that can be used to buy pmx\",\"_maxSaleAmount\":\"the maximum amount of the PMX that can be sold\",\"_saleEnd\":\"the timestamp at which the token sale will end\",\"_salePrice\":\"the sale price in WAD\",\"_saleStart\":\"the timestamp at which the token sale will begin\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeAllowedTokens(address[])\":{\"params\":{\"_removedTokens\":\"the array of removed tokens\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"retrieveToken(address,address)\":{\"params\":{\"_receiver\":\"The address that will receive the retrieved tokens\",\"_tokenAddr\":\"Address of the ERC20 token to retrieve\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAllowedTokens(address[])\":{\"notice\":\"Adds the new allowed tokens Only callable by the owner\"},\"buy(uint256,address)\":{\"notice\":\"buys some pmx amount and writes it to the sender's balance\"},\"changeMaxSaleAmount(uint256)\":{\"notice\":\"Sets the new max sale amount; Only callable by the owner\"},\"changeSalePrice(uint256)\":{\"notice\":\"Sets the new sale rate Only callable by the owner\"},\"changeTimestamps(uint256,uint256)\":{\"notice\":\"Sets the new sale timestamps Only callable by the owner\"},\"completeTokenSale()\":{\"notice\":\"Sets the saleEnd to zero, thereby stopping the token sale\"},\"initialize(uint256,uint256,uint256,uint256,address[])\":{\"notice\":\"Initializes the TokenSaleRegister contract.\"},\"removeAllowedTokens(address[])\":{\"notice\":\"Removes the tokens from the allowedTokens map Only callable by the owner\"},\"retrieveToken(address,address)\":{\"notice\":\"Used to recover non-PMX ERC20 tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenSaleRegister.sol\":\"TokenSaleRegister\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/EIP20NonStandardInterface.sol\":{\"content\":\"// Copyright 2020 Compound Labs, Inc.\\n// SPDX-License-Identifier: BSD-3-Clause\\n\\npragma solidity ^0.8.10;\\n\\n/**\\n * @title EIP20NonStandardInterface\\n * @dev Version of ERC20 with no return values for `transfer` and `transferFrom`\\n *  See https://medium.com/coinmonks/missing-return-value-bug-at-least-130-tokens-affected-d67bf08521ca\\n */\\ninterface EIP20NonStandardInterface {\\n    /**\\n     * @notice Get the total number of tokens in circulation\\n     * @return The supply of tokens\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @notice Gets the balance of the specified address\\n     * @param owner The address from which the balance will be retrieved\\n     * @return balance The balance\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    ///\\n    /// !!!!!!!!!!!!!!\\n    /// !!! NOTICE !!! `transfer` does not return a value, in violation of the ERC-20 specification\\n    /// !!!!!!!!!!!!!!\\n    ///\\n\\n    /**\\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\\n     * @param dst The address of the destination account\\n     * @param amount The number of tokens to transfer\\n     */\\n    function transfer(address dst, uint256 amount) external;\\n\\n    ///\\n    /// !!!!!!!!!!!!!!\\n    /// !!! NOTICE !!! `transferFrom` does not return a value, in violation of the ERC-20 specification\\n    /// !!!!!!!!!!!!!!\\n    ///\\n\\n    /**\\n     * @notice Transfer `amount` tokens from `src` to `dst`\\n     * @param src The address of the source account\\n     * @param dst The address of the destination account\\n     * @param amount The number of tokens to transfer\\n     */\\n    function transferFrom(address src, address dst, uint256 amount) external;\\n\\n    ///\\n    /// !!!!!!!!!!!!!!\\n    /// !!! NOTICE !!! `approve` does not return a value, in violation of the ERC-20 specification\\n    /// !!!!!!!!!!!!!!\\n    ///\\n\\n    /**\\n     * @notice Approve `spender` to transfer up to `amount` from `src`\\n     * @dev This will overwrite the approval amount for `spender`\\n     *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\\n     * @param spender The address of the account which may transfer tokens\\n     * @param amount The number of tokens that are approved\\n     */\\n    function approve(address spender, uint256 amount) external;\\n\\n    /**\\n     * @notice Get the current allowance from `owner` for `spender`\\n     * @param owner The address of the account which owns the tokens to be spent\\n     * @param spender The address of the account which may transfer tokens\\n     * @return remaining The number of tokens allowed to be spent\\n     */\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256 remaining);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 amount\\n    );\\n}\\n\",\"keccak256\":\"0xe2d918cb2c28985fc38039cbcf706d223e17d4a0c42685336c3b7499ec4ef447\",\"license\":\"BSD-3-Clause\"},\"contracts/TokenSaleRegister.sol\":{\"content\":\"// (c) 2024 Primex.finance\\n// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.26;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {EIP20NonStandardInterface} from \\\"./EIP20NonStandardInterface.sol\\\";\\nimport {IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport {IAccessControl} from \\\"@openzeppelin/contracts/access/IAccessControl.sol\\\";\\nimport {OwnableUpgradeable} from \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport {TokenTransfersLibrary} from \\\"./TokenTransfersLibrary.sol\\\";\\n\\nabstract contract TokenSaleRegisterStorage is OwnableUpgradeable {\\n    /// @dev the timestamp at which the token sale will begin\\n    uint256 public saleStart;\\n    /// @dev the timestamp at which the token sale will end\\n    uint256 public saleEnd;\\n    /// @dev the sale price in WAD\\n    uint256 public salePrice;\\n    /// @dev the maximum amount of the PMX that can be sold\\n    uint256 public maxSaleAmount;\\n    /// @dev How many tokens have been sold so far\\n    uint256 public totalSold;\\n\\n    mapping(address user => uint256 balance) public userBalances;\\n    mapping(address token => bool acceptable) public allowedTokens;\\n    mapping(address token => uint256 multiplier) public tokenMultiplier;\\n    address[] public buyers;\\n}\\n\\ncontract TokenSaleRegister is TokenSaleRegisterStorage {\\n    event Buying(address indexed buyer, uint256 amount);\\n    event RateChanged(uint256 rate);\\n\\n    uint256 constant WAD = 10 ** 18;\\n\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    /**\\n     * @notice  Initializes the TokenSaleRegister contract.\\n     * @dev This function should only be called once during the initial setup of the contract.\\n     * @param _saleStart the timestamp at which the token sale will begin\\n     * @param _saleEnd the timestamp at which the token sale will end\\n     * @param _salePrice the sale price in WAD\\n     * @param _maxSaleAmount the maximum amount of the PMX that can be sold\\n     * @param _allowedTokens Array of tokens that can be used to buy pmx\\n     */\\n    function initialize(\\n        uint256 _saleStart,\\n        uint256 _saleEnd,\\n        uint256 _salePrice,\\n        uint256 _maxSaleAmount,\\n        address[] calldata _allowedTokens\\n    ) external initializer {\\n        require(_salePrice > 0, \\\"TokenSaleRegister: zero sale price\\\");\\n        require(\\n            _saleStart >= block.timestamp,\\n            \\\"TokenSaleRegister: incorrect token sale timestamps\\\"\\n        );\\n        salePrice = _salePrice;\\n        maxSaleAmount = _maxSaleAmount;\\n        _setTimestamps(_saleStart, _saleEnd);\\n        for (uint256 i; i < _allowedTokens.length; i++) {\\n            allowedTokens[_allowedTokens[i]] = true;\\n            tokenMultiplier[_allowedTokens[i]] =\\n                10 ** (18 - IERC20Metadata(_allowedTokens[i]).decimals());\\n        }\\n        __Ownable_init();\\n    }\\n\\n    /**\\n     * @notice Sets the new sale rate\\n     * Only callable by the owner\\n     * @param _salePrice The new sale rate in WAD format to be set.\\n     */\\n\\n    function changeSalePrice(uint256 _salePrice) external onlyOwner {\\n        require(_salePrice > 0, \\\"TokenSaleRegister: zero sale price\\\");\\n        salePrice = _salePrice;\\n        emit RateChanged(_salePrice);\\n    }\\n\\n    /**\\n     * @notice Sets the new sale timestamps\\n     * Only callable by the owner\\n     * @param _saleStart the timestamp at which the token sale will begin\\n     * @param _saleEnd the timestamp at which the token sale will end\\n     */\\n    function changeTimestamps(\\n        uint256 _saleStart,\\n        uint256 _saleEnd\\n    ) external onlyOwner {\\n        _setTimestamps(_saleStart, _saleEnd);\\n    }\\n\\n    /**\\n     * @notice Sets the new max sale amount;\\n     * Only callable by the owner\\n     * @param _maxSaleAmount the maximum amount of the PMX that can be sold\\n     */\\n    function changeMaxSaleAmount(uint256 _maxSaleAmount) external onlyOwner {\\n        maxSaleAmount = _maxSaleAmount;\\n    }\\n\\n    /**\\n     * @notice Adds the new allowed tokens\\n     * Only callable by the owner\\n     * @param _allowedTokens the array of allowed tokens\\n     */\\n    function addAllowedTokens(\\n        address[] calldata _allowedTokens\\n    ) external onlyOwner {\\n        for (uint256 i; i < _allowedTokens.length; i++) {\\n            allowedTokens[_allowedTokens[i]] = true;\\n            tokenMultiplier[_allowedTokens[i]] =\\n                10 ** (18 - IERC20Metadata(_allowedTokens[i]).decimals());\\n        }\\n    }\\n    /**\\n     * @notice Removes the tokens from the allowedTokens map\\n     * Only callable by the owner\\n     * @param _removedTokens the array of removed tokens\\n     */\\n    function removeAllowedTokens(\\n        address[] calldata _removedTokens\\n    ) external onlyOwner {\\n        for (uint256 i; i < _removedTokens.length; i++) {\\n            allowedTokens[_removedTokens[i]] = false;\\n        }\\n    }\\n\\n    /**\\n     * @notice buys some pmx amount and writes it to the sender's balance\\n     * @param _investmentAmount the amount in usdt/usdc for which the pmx will be bought\\n     * @param _buyForToken For what token the pmx will be purchased\\n     */\\n    function buy(uint256 _investmentAmount, address _buyForToken) external {\\n        require(\\n            block.timestamp >= saleStart,\\n            \\\"TokenSaleRegister: token sale has not started yet\\\"\\n        );\\n        require(\\n            block.timestamp <= saleEnd,\\n            \\\"TokenSaleRegister: token sale has already ended\\\"\\n        );\\n        require(\\n            allowedTokens[_buyForToken],\\n            \\\"TokenSaleRegister: token is not allowed\\\"\\n        );\\n        uint256 adjInvestment = _investmentAmount *\\n            tokenMultiplier[_buyForToken];\\n        uint256 pmxAmount = (adjInvestment * WAD) / salePrice;\\n        require(\\n            totalSold + pmxAmount <= maxSaleAmount,\\n            \\\"TokenSaleRegister: max sale amount reached\\\"\\n        );\\n        require(pmxAmount > 0, \\\"TokenSaleRegister: zero pmx amount\\\");\\n        totalSold += pmxAmount;\\n        if (userBalances[msg.sender] == 0) buyers.push(msg.sender);\\n        userBalances[msg.sender] += pmxAmount;\\n        TokenTransfersLibrary.doTransferIn(\\n            _buyForToken,\\n            msg.sender,\\n            _investmentAmount\\n        );\\n\\n        emit Buying(msg.sender, pmxAmount);\\n    }\\n\\n    /**\\n     * @notice Used to recover non-PMX ERC20 tokens\\n     * @param _tokenAddr Address of the ERC20 token to retrieve\\n     * @param _receiver The address that will receive the retrieved tokens\\n     */\\n    function retrieveToken(\\n        address _tokenAddr,\\n        address _receiver\\n    ) external onlyOwner {\\n        TokenTransfersLibrary.doTransferOut(\\n            _tokenAddr,\\n            _receiver,\\n            IERC20(_tokenAddr).balanceOf(address(this))\\n        );\\n    }\\n    /**\\n     * @notice Sets the saleEnd to zero, thereby stopping the token sale\\n     */\\n    function completeTokenSale() external onlyOwner {\\n        saleEnd = 0;\\n    }\\n\\n    function getBuyersLength() public view returns (uint256) {\\n        return buyers.length;\\n    }\\n\\n    function getAllBuyersWithBalances(\\n        uint256 _cursor,\\n        uint256 _count\\n    )\\n        external\\n        view\\n        returns (\\n            address[] memory _buyers,\\n            uint256[] memory _balances,\\n            uint256 _newCursor\\n        )\\n    {\\n        uint256 buyersLength = getBuyersLength();\\n        if (_cursor >= buyersLength) {\\n            return (new address[](0), new uint256[](0), 0);\\n        }\\n        if (_cursor + _count >= buyersLength) {\\n            _count = buyersLength - _cursor;\\n        } else {\\n            _newCursor = _cursor + _count;\\n        }\\n\\n        _buyers = new address[](_count);\\n        _balances = new uint256[](_count);\\n        for (uint256 i; i < _count; i++) {\\n            _buyers[i] = buyers[_cursor + i];\\n            _balances[i] = userBalances[_buyers[i]];\\n        }\\n        return (_buyers, _balances, _newCursor);\\n    }\\n\\n    function _setTimestamps(uint256 _saleStart, uint256 _saleEnd) internal {\\n        require(\\n            _saleEnd > _saleStart,\\n            \\\"TokenSaleRegister: incorrect token sale timestamps\\\"\\n        );\\n        saleStart = _saleStart;\\n        saleEnd = _saleEnd;\\n    }\\n}\\n\",\"keccak256\":\"0x20b3839edd3cf94e38c3ed0c8442197338ff3c12cd173957989cb858094dcd70\",\"license\":\"BUSL-1.1\"},\"contracts/TokenTransfersLibrary.sol\":{\"content\":\"// (c) 2024 Primex.finance\\n// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.26;\\nimport {EIP20NonStandardInterface} from \\\"./EIP20NonStandardInterface.sol\\\";\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nlibrary TokenTransfersLibrary {\\n    function doTransferIn(\\n        address token,\\n        address from,\\n        uint256 amount\\n    ) public returns (uint256) {\\n        return doTransferFromTo(token, from, address(this), amount);\\n    }\\n\\n    function doTransferFromTo(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public returns (uint256) {\\n        uint256 balanceBefore = IERC20(token).balanceOf(to);\\n        // The returned value is checked in the assembly code below.\\n        // Arbitrary `from` should be checked at a higher level. The library function cannot be called by the user.\\n        // slither-disable-next-line unchecked-transfer arbitrary-send-erc20\\n        EIP20NonStandardInterface(token).transferFrom(from, to, amount);\\n\\n        bool success;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly (\\\"memory-safe\\\") {\\n            switch returndatasize()\\n            case 0 {\\n                // This is a non-standard ERC-20\\n                success := not(0) // set success to true\\n            }\\n            case 32 {\\n                // This is a compliant ERC-20\\n                returndatacopy(0, 0, 32)\\n                success := mload(0) // Set `success = returndata` of external call\\n            }\\n            default {\\n                // This is an excessively non-compliant ERC-20, revert.\\n                revert(0, 0)\\n            }\\n        }\\n        require(success, \\\"TOKEN_TRANSFER_IN_FAILED\\\");\\n\\n        // Calculate the amount that was *actually* transferred\\n        uint256 balanceAfter = IERC20(token).balanceOf(to);\\n        require(balanceAfter >= balanceBefore, \\\"TOKEN_TRANSFER_IN_OVERFLOW\\\");\\n\\n        return balanceAfter - balanceBefore; // underflow already checked above, just subtract\\n    }\\n\\n    function doTransferOut(address token, address to, uint256 amount) public {\\n        // The returned value is checked in the assembly code below.\\n        // slither-disable-next-line unchecked-transfer\\n        EIP20NonStandardInterface(token).transfer(to, amount);\\n\\n        bool success;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly (\\\"memory-safe\\\") {\\n            switch returndatasize()\\n            case 0 {\\n                // This is a non-standard ERC-20\\n                success := not(0) // set success to true\\n            }\\n            case 32 {\\n                // This is a complaint ERC-20\\n                returndatacopy(0, 0, 32)\\n                success := mload(0) // Set `success = returndata` of external call\\n            }\\n            default {\\n                // This is an excessively non-compliant ERC-20, revert.\\n                revert(0, 0)\\n            }\\n        }\\n        require(success, \\\"TOKEN_TRANSFER_OUT_FAILED\\\");\\n    }\\n\\n    function doTransferOutETH(address to, uint256 value) internal {\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"NATIVE_TOKEN_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x0b58c1b02e9afd319203416dfee8db65d8115d0e267abbeb214ba2f475996d61\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b506016601a565b60d7565b600054610100900460ff161560855760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161460d5576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b611619806100e66000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063931415d6116100c3578063c5c2dc8b1161007c578063c5c2dc8b1461029c578063d95913b0146102af578063e744092e146102c2578063f2aa8218146102f5578063f2fde38b14610308578063f51f96dd1461031b57600080fd5b8063931415d61461022d5780639db963751461024f578063ab0bcc4114610257578063b2dc23c314610260578063b562089614610280578063c10b93581461029357600080fd5b8063392617671161011557806339261767146101be578063715018a6146101d15780637deb6025146101d95780638cf39d5f146101ec5780638da5cb5b146101ff5780639106d7ba1461022457600080fd5b806311226c341461015257806319a2ca441461016757806326224c64146101835780632961320c146101a357806330be0545146101b6575b600080fd5b6101656101603660046110b8565b610324565b005b61017060685481565b6040519081526020015b60405180910390f35b6101706101913660046110f6565b606a6020526000908152604090205481565b6101656101b1366004611118565b61033a565b606d54610170565b6101656101cc366004611197565b610433565b6101656106ef565b6101656101e7366004611201565b610703565b6101656101fa366004611224565b610ac1565b6033546001600160a01b03165b6040516001600160a01b03909116815260200161017a565b61017060695481565b61024061023b3660046110b8565b610b36565b60405161017a93929190611266565b610165610d0e565b61017060655481565b61017061026e3660046110f6565b606c6020526000908152604090205481565b61016561028e3660046112f9565b610d1d565b61017060665481565b6101656102aa366004611224565b610d80565b6101656102bd3660046112f9565b610ed3565b6102e56102d03660046110f6565b606b6020526000908152604090205460ff1681565b604051901515815260200161017a565b61020c6103033660046112f9565b610ee0565b6101656103163660046110f6565b610f0a565b61017060675481565b61032c610f83565b6103368282610fdd565b5050565b610342610f83565b6040516370a0823160e01b815230600482015273DE74ae223994a744e025DA8033370321B2d227C79063c66c253690849084906001600160a01b038316906370a0823190602401602060405180830381865afa1580156103a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ca9190611312565b6040516001600160e01b031960e086901b1681526001600160a01b039384166004820152929091166024830152604482015260640160006040518083038186803b15801561041757600080fd5b505af415801561042b573d6000803e3d6000fd5b505050505050565b600054610100900460ff16158080156104535750600054600160ff909116105b8061046d5750303b15801561046d575060005460ff166001145b6104d55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156104f8576000805461ff0019166101001790555b600085116105185760405162461bcd60e51b81526004016104cc9061132b565b428710156105385760405162461bcd60e51b81526004016104cc9061136d565b6067859055606884905561054c8787610fdd565b60005b82811015610697576001606b600086868581811061056f5761056f6113bf565b905060200201602081019061058491906110f6565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558383828181106105be576105be6113bf565b90506020020160208101906105d391906110f6565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610610573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063491906113d5565b61063f90601261140e565b61064a90600a611514565b606c6000868685818110610660576106606113bf565b905060200201602081019061067591906110f6565b6001600160a01b0316815260208101919091526040016000205560010161054f565b506106a0611007565b80156106e6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6106f7610f83565b6107016000611036565b565b60655442101561076f5760405162461bcd60e51b815260206004820152603160248201527f546f6b656e53616c6552656769737465723a20746f6b656e2073616c652068616044820152701cc81b9bdd081cdd185c9d1959081e595d607a1b60648201526084016104cc565b6066544211156107d95760405162461bcd60e51b815260206004820152602f60248201527f546f6b656e53616c6552656769737465723a20746f6b656e2073616c6520686160448201526e1cc8185b1c9958591e48195b991959608a1b60648201526084016104cc565b6001600160a01b0381166000908152606b602052604090205460ff166108515760405162461bcd60e51b815260206004820152602760248201527f546f6b656e53616c6552656769737465723a20746f6b656e206973206e6f7420604482015266185b1b1bddd95960ca1b60648201526084016104cc565b6001600160a01b0381166000908152606c60205260408120546108749084611523565b90506000606754670de0b6b3a76400008361088f9190611523565b610899919061153a565b9050606854816069546108ac919061155c565b111561090d5760405162461bcd60e51b815260206004820152602a60248201527f546f6b656e53616c6552656769737465723a206d61782073616c6520616d6f756044820152691b9d081c995858da195960b21b60648201526084016104cc565b600081116109685760405162461bcd60e51b815260206004820152602260248201527f546f6b656e53616c6552656769737465723a207a65726f20706d7820616d6f756044820152611b9d60f21b60648201526084016104cc565b806069600082825461097a919061155c565b9091555050336000908152606a602052604081205490036109d857606d80546001810182556000919091527f5006b838207c6a9ae9b84d68f467dd4bb5c305fbfb6b04eab8faaabeec1e18d80180546001600160a01b031916331790555b336000908152606a6020526040812080548392906109f790849061155c565b909155505060405163c37f7f7f60e01b81526001600160a01b03841660048201523360248201526044810185905273DE74ae223994a744e025DA8033370321B2d227C79063c37f7f7f90606401602060405180830381865af4158015610a61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a859190611312565b5060405181815233907f840df612bc9052dfa7ac2e14fc52368ca7749154d9132b7601f59d329f787fd69060200160405180910390a250505050565b610ac9610f83565b60005b81811015610b31576000606b6000858585818110610aec57610aec6113bf565b9050602002016020810190610b0191906110f6565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600101610acc565b505050565b606080600080610b45606d5490565b9050808610610b7157505060408051600080825260208201818152828401909352909350909150610d07565b80610b7c868861155c565b10610b9257610b8b8682611585565b9450610b9f565b610b9c858761155c565b91505b8467ffffffffffffffff811115610bb857610bb861156f565b604051908082528060200260200182016040528015610be1578160200160208202803683370190505b5093508467ffffffffffffffff811115610bfd57610bfd61156f565b604051908082528060200260200182016040528015610c26578160200160208202803683370190505b50925060005b85811015610d0457606d610c40828961155c565b81548110610c5057610c506113bf565b9060005260206000200160009054906101000a90046001600160a01b0316858281518110610c8057610c806113bf565b60200260200101906001600160a01b031690816001600160a01b031681525050606a6000868381518110610cb657610cb66113bf565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054848281518110610cf157610cf16113bf565b6020908102919091010152600101610c2c565b50505b9250925092565b610d16610f83565b6000606655565b610d25610f83565b60008111610d455760405162461bcd60e51b81526004016104cc9061132b565b60678190556040518181527f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109060200160405180910390a150565b610d88610f83565b60005b81811015610b31576001606b6000858585818110610dab57610dab6113bf565b9050602002016020810190610dc091906110f6565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055828282818110610dfa57610dfa6113bf565b9050602002016020810190610e0f91906110f6565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7091906113d5565b610e7b90601261140e565b610e8690600a611514565b606c6000858585818110610e9c57610e9c6113bf565b9050602002016020810190610eb191906110f6565b6001600160a01b03168152602081019190915260400160002055600101610d8b565b610edb610f83565b606855565b606d8181548110610ef057600080fd5b6000918252602090912001546001600160a01b0316905081565b610f12610f83565b6001600160a01b038116610f775760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104cc565b610f8081611036565b50565b6033546001600160a01b031633146107015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104cc565b818111610ffc5760405162461bcd60e51b81526004016104cc9061136d565b606591909155606655565b600054610100900460ff1661102e5760405162461bcd60e51b81526004016104cc90611598565b610701611088565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166110af5760405162461bcd60e51b81526004016104cc90611598565b61070133611036565b600080604083850312156110cb57600080fd5b50508035926020909101359150565b80356001600160a01b03811681146110f157600080fd5b919050565b60006020828403121561110857600080fd5b611111826110da565b9392505050565b6000806040838503121561112b57600080fd5b611134836110da565b9150611142602084016110da565b90509250929050565b60008083601f84011261115d57600080fd5b50813567ffffffffffffffff81111561117557600080fd5b6020830191508360208260051b850101111561119057600080fd5b9250929050565b60008060008060008060a087890312156111b057600080fd5b86359550602087013594506040870135935060608701359250608087013567ffffffffffffffff8111156111e357600080fd5b6111ef89828a0161114b565b979a9699509497509295939492505050565b6000806040838503121561121457600080fd5b82359150611142602084016110da565b6000806020838503121561123757600080fd5b823567ffffffffffffffff81111561124e57600080fd5b61125a8582860161114b565b90969095509350505050565b6060808252845190820181905260009060208601906080840190835b818110156112a95783516001600160a01b0316835260209384019390920191600101611282565b50508381036020808601919091528651808352918101925086019060005b818110156112e55782518452602093840193909201916001016112c7565b505050604092909201929092529392505050565b60006020828403121561130b57600080fd5b5035919050565b60006020828403121561132457600080fd5b5051919050565b60208082526022908201527f546f6b656e53616c6552656769737465723a207a65726f2073616c6520707269604082015261636560f01b606082015260800190565b60208082526032908201527f546f6b656e53616c6552656769737465723a20696e636f727265637420746f6b604082015271656e2073616c652074696d657374616d707360701b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156113e757600080fd5b815160ff8116811461111157600080fd5b634e487b7160e01b600052601160045260246000fd5b60ff8281168282160390811115611427576114276113f8565b92915050565b6001815b60018411156114685780850481111561144c5761144c6113f8565b600184161561145a57908102905b60019390931c928002611431565b935093915050565b60008261147f57506001611427565b8161148c57506000611427565b81600181146114a257600281146114ac576114c8565b6001915050611427565b60ff8411156114bd576114bd6113f8565b50506001821b611427565b5060208310610133831016604e8410600b84101617156114eb575081810a611427565b6114f8600019848461142d565b806000190482111561150c5761150c6113f8565b029392505050565b600061111160ff841683611470565b8082028115828204841417611427576114276113f8565b60008261155757634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115611427576114276113f8565b634e487b7160e01b600052604160045260246000fd5b81810381811115611427576114276113f8565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea264697066735822122053d9a9929895b4d3119f6bb1d4a0aa21e1a6fb2bdd0ad4ac3d61543773468ae964736f6c634300081a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c8063931415d6116100c3578063c5c2dc8b1161007c578063c5c2dc8b1461029c578063d95913b0146102af578063e744092e146102c2578063f2aa8218146102f5578063f2fde38b14610308578063f51f96dd1461031b57600080fd5b8063931415d61461022d5780639db963751461024f578063ab0bcc4114610257578063b2dc23c314610260578063b562089614610280578063c10b93581461029357600080fd5b8063392617671161011557806339261767146101be578063715018a6146101d15780637deb6025146101d95780638cf39d5f146101ec5780638da5cb5b146101ff5780639106d7ba1461022457600080fd5b806311226c341461015257806319a2ca441461016757806326224c64146101835780632961320c146101a357806330be0545146101b6575b600080fd5b6101656101603660046110b8565b610324565b005b61017060685481565b6040519081526020015b60405180910390f35b6101706101913660046110f6565b606a6020526000908152604090205481565b6101656101b1366004611118565b61033a565b606d54610170565b6101656101cc366004611197565b610433565b6101656106ef565b6101656101e7366004611201565b610703565b6101656101fa366004611224565b610ac1565b6033546001600160a01b03165b6040516001600160a01b03909116815260200161017a565b61017060695481565b61024061023b3660046110b8565b610b36565b60405161017a93929190611266565b610165610d0e565b61017060655481565b61017061026e3660046110f6565b606c6020526000908152604090205481565b61016561028e3660046112f9565b610d1d565b61017060665481565b6101656102aa366004611224565b610d80565b6101656102bd3660046112f9565b610ed3565b6102e56102d03660046110f6565b606b6020526000908152604090205460ff1681565b604051901515815260200161017a565b61020c6103033660046112f9565b610ee0565b6101656103163660046110f6565b610f0a565b61017060675481565b61032c610f83565b6103368282610fdd565b5050565b610342610f83565b6040516370a0823160e01b815230600482015273__$0374a552468b4533ee1eff015be16d3a4f$__9063c66c253690849084906001600160a01b038316906370a0823190602401602060405180830381865afa1580156103a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ca9190611312565b6040516001600160e01b031960e086901b1681526001600160a01b039384166004820152929091166024830152604482015260640160006040518083038186803b15801561041757600080fd5b505af415801561042b573d6000803e3d6000fd5b505050505050565b600054610100900460ff16158080156104535750600054600160ff909116105b8061046d5750303b15801561046d575060005460ff166001145b6104d55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156104f8576000805461ff0019166101001790555b600085116105185760405162461bcd60e51b81526004016104cc9061132b565b428710156105385760405162461bcd60e51b81526004016104cc9061136d565b6067859055606884905561054c8787610fdd565b60005b82811015610697576001606b600086868581811061056f5761056f6113bf565b905060200201602081019061058491906110f6565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558383828181106105be576105be6113bf565b90506020020160208101906105d391906110f6565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610610573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063491906113d5565b61063f90601261140e565b61064a90600a611514565b606c6000868685818110610660576106606113bf565b905060200201602081019061067591906110f6565b6001600160a01b0316815260208101919091526040016000205560010161054f565b506106a0611007565b80156106e6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6106f7610f83565b6107016000611036565b565b60655442101561076f5760405162461bcd60e51b815260206004820152603160248201527f546f6b656e53616c6552656769737465723a20746f6b656e2073616c652068616044820152701cc81b9bdd081cdd185c9d1959081e595d607a1b60648201526084016104cc565b6066544211156107d95760405162461bcd60e51b815260206004820152602f60248201527f546f6b656e53616c6552656769737465723a20746f6b656e2073616c6520686160448201526e1cc8185b1c9958591e48195b991959608a1b60648201526084016104cc565b6001600160a01b0381166000908152606b602052604090205460ff166108515760405162461bcd60e51b815260206004820152602760248201527f546f6b656e53616c6552656769737465723a20746f6b656e206973206e6f7420604482015266185b1b1bddd95960ca1b60648201526084016104cc565b6001600160a01b0381166000908152606c60205260408120546108749084611523565b90506000606754670de0b6b3a76400008361088f9190611523565b610899919061153a565b9050606854816069546108ac919061155c565b111561090d5760405162461bcd60e51b815260206004820152602a60248201527f546f6b656e53616c6552656769737465723a206d61782073616c6520616d6f756044820152691b9d081c995858da195960b21b60648201526084016104cc565b600081116109685760405162461bcd60e51b815260206004820152602260248201527f546f6b656e53616c6552656769737465723a207a65726f20706d7820616d6f756044820152611b9d60f21b60648201526084016104cc565b806069600082825461097a919061155c565b9091555050336000908152606a602052604081205490036109d857606d80546001810182556000919091527f5006b838207c6a9ae9b84d68f467dd4bb5c305fbfb6b04eab8faaabeec1e18d80180546001600160a01b031916331790555b336000908152606a6020526040812080548392906109f790849061155c565b909155505060405163c37f7f7f60e01b81526001600160a01b03841660048201523360248201526044810185905273__$0374a552468b4533ee1eff015be16d3a4f$__9063c37f7f7f90606401602060405180830381865af4158015610a61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a859190611312565b5060405181815233907f840df612bc9052dfa7ac2e14fc52368ca7749154d9132b7601f59d329f787fd69060200160405180910390a250505050565b610ac9610f83565b60005b81811015610b31576000606b6000858585818110610aec57610aec6113bf565b9050602002016020810190610b0191906110f6565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600101610acc565b505050565b606080600080610b45606d5490565b9050808610610b7157505060408051600080825260208201818152828401909352909350909150610d07565b80610b7c868861155c565b10610b9257610b8b8682611585565b9450610b9f565b610b9c858761155c565b91505b8467ffffffffffffffff811115610bb857610bb861156f565b604051908082528060200260200182016040528015610be1578160200160208202803683370190505b5093508467ffffffffffffffff811115610bfd57610bfd61156f565b604051908082528060200260200182016040528015610c26578160200160208202803683370190505b50925060005b85811015610d0457606d610c40828961155c565b81548110610c5057610c506113bf565b9060005260206000200160009054906101000a90046001600160a01b0316858281518110610c8057610c806113bf565b60200260200101906001600160a01b031690816001600160a01b031681525050606a6000868381518110610cb657610cb66113bf565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054848281518110610cf157610cf16113bf565b6020908102919091010152600101610c2c565b50505b9250925092565b610d16610f83565b6000606655565b610d25610f83565b60008111610d455760405162461bcd60e51b81526004016104cc9061132b565b60678190556040518181527f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109060200160405180910390a150565b610d88610f83565b60005b81811015610b31576001606b6000858585818110610dab57610dab6113bf565b9050602002016020810190610dc091906110f6565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055828282818110610dfa57610dfa6113bf565b9050602002016020810190610e0f91906110f6565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7091906113d5565b610e7b90601261140e565b610e8690600a611514565b606c6000858585818110610e9c57610e9c6113bf565b9050602002016020810190610eb191906110f6565b6001600160a01b03168152602081019190915260400160002055600101610d8b565b610edb610f83565b606855565b606d8181548110610ef057600080fd5b6000918252602090912001546001600160a01b0316905081565b610f12610f83565b6001600160a01b038116610f775760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104cc565b610f8081611036565b50565b6033546001600160a01b031633146107015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104cc565b818111610ffc5760405162461bcd60e51b81526004016104cc9061136d565b606591909155606655565b600054610100900460ff1661102e5760405162461bcd60e51b81526004016104cc90611598565b610701611088565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166110af5760405162461bcd60e51b81526004016104cc90611598565b61070133611036565b600080604083850312156110cb57600080fd5b50508035926020909101359150565b80356001600160a01b03811681146110f157600080fd5b919050565b60006020828403121561110857600080fd5b611111826110da565b9392505050565b6000806040838503121561112b57600080fd5b611134836110da565b9150611142602084016110da565b90509250929050565b60008083601f84011261115d57600080fd5b50813567ffffffffffffffff81111561117557600080fd5b6020830191508360208260051b850101111561119057600080fd5b9250929050565b60008060008060008060a087890312156111b057600080fd5b86359550602087013594506040870135935060608701359250608087013567ffffffffffffffff8111156111e357600080fd5b6111ef89828a0161114b565b979a9699509497509295939492505050565b6000806040838503121561121457600080fd5b82359150611142602084016110da565b6000806020838503121561123757600080fd5b823567ffffffffffffffff81111561124e57600080fd5b61125a8582860161114b565b90969095509350505050565b6060808252845190820181905260009060208601906080840190835b818110156112a95783516001600160a01b0316835260209384019390920191600101611282565b50508381036020808601919091528651808352918101925086019060005b818110156112e55782518452602093840193909201916001016112c7565b505050604092909201929092529392505050565b60006020828403121561130b57600080fd5b5035919050565b60006020828403121561132457600080fd5b5051919050565b60208082526022908201527f546f6b656e53616c6552656769737465723a207a65726f2073616c6520707269604082015261636560f01b606082015260800190565b60208082526032908201527f546f6b656e53616c6552656769737465723a20696e636f727265637420746f6b604082015271656e2073616c652074696d657374616d707360701b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156113e757600080fd5b815160ff8116811461111157600080fd5b634e487b7160e01b600052601160045260246000fd5b60ff8281168282160390811115611427576114276113f8565b92915050565b6001815b60018411156114685780850481111561144c5761144c6113f8565b600184161561145a57908102905b60019390931c928002611431565b935093915050565b60008261147f57506001611427565b8161148c57506000611427565b81600181146114a257600281146114ac576114c8565b6001915050611427565b60ff8411156114bd576114bd6113f8565b50506001821b611427565b5060208310610133831016604e8410600b84101617156114eb575081810a611427565b6114f8600019848461142d565b806000190482111561150c5761150c6113f8565b029392505050565b600061111160ff841683611470565b8082028115828204841417611427576114276113f8565b60008261155757634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115611427576114276113f8565b634e487b7160e01b600052604160045260246000fd5b81810381811115611427576114276113f8565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea264697066735822122053d9a9929895b4d3119f6bb1d4a0aa21e1a6fb2bdd0ad4ac3d61543773468ae964736f6c634300081a0033",
  "libraries": {
    "TokenTransfersLibrary": "0xDE74ae223994a744e025DA8033370321B2d227C7"
  },
  "devdoc": {
    "events": {
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      }
    },
    "kind": "dev",
    "methods": {
      "addAllowedTokens(address[])": {
        "params": {
          "_allowedTokens": "the array of allowed tokens"
        }
      },
      "buy(uint256,address)": {
        "params": {
          "_buyForToken": "For what token the pmx will be purchased",
          "_investmentAmount": "the amount in usdt/usdc for which the pmx will be bought"
        }
      },
      "changeMaxSaleAmount(uint256)": {
        "params": {
          "_maxSaleAmount": "the maximum amount of the PMX that can be sold"
        }
      },
      "changeSalePrice(uint256)": {
        "params": {
          "_salePrice": "The new sale rate in WAD format to be set."
        }
      },
      "changeTimestamps(uint256,uint256)": {
        "params": {
          "_saleEnd": "the timestamp at which the token sale will end",
          "_saleStart": "the timestamp at which the token sale will begin"
        }
      },
      "initialize(uint256,uint256,uint256,uint256,address[])": {
        "details": "This function should only be called once during the initial setup of the contract.",
        "params": {
          "_allowedTokens": "Array of tokens that can be used to buy pmx",
          "_maxSaleAmount": "the maximum amount of the PMX that can be sold",
          "_saleEnd": "the timestamp at which the token sale will end",
          "_salePrice": "the sale price in WAD",
          "_saleStart": "the timestamp at which the token sale will begin"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeAllowedTokens(address[])": {
        "params": {
          "_removedTokens": "the array of removed tokens"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "retrieveToken(address,address)": {
        "params": {
          "_receiver": "The address that will receive the retrieved tokens",
          "_tokenAddr": "Address of the ERC20 token to retrieve"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addAllowedTokens(address[])": {
        "notice": "Adds the new allowed tokens Only callable by the owner"
      },
      "buy(uint256,address)": {
        "notice": "buys some pmx amount and writes it to the sender's balance"
      },
      "changeMaxSaleAmount(uint256)": {
        "notice": "Sets the new max sale amount; Only callable by the owner"
      },
      "changeSalePrice(uint256)": {
        "notice": "Sets the new sale rate Only callable by the owner"
      },
      "changeTimestamps(uint256,uint256)": {
        "notice": "Sets the new sale timestamps Only callable by the owner"
      },
      "completeTokenSale()": {
        "notice": "Sets the saleEnd to zero, thereby stopping the token sale"
      },
      "initialize(uint256,uint256,uint256,uint256,address[])": {
        "notice": "Initializes the TokenSaleRegister contract."
      },
      "removeAllowedTokens(address[])": {
        "notice": "Removes the tokens from the allowedTokens map Only callable by the owner"
      },
      "retrieveToken(address,address)": {
        "notice": "Used to recover non-PMX ERC20 tokens"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 139,
        "contract": "contracts/TokenSaleRegister.sol:TokenSaleRegister",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 142,
        "contract": "contracts/TokenSaleRegister.sol:TokenSaleRegister",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 681,
        "contract": "contracts/TokenSaleRegister.sol:TokenSaleRegister",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 11,
        "contract": "contracts/TokenSaleRegister.sol:TokenSaleRegister",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 131,
        "contract": "contracts/TokenSaleRegister.sol:TokenSaleRegister",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 2140,
        "contract": "contracts/TokenSaleRegister.sol:TokenSaleRegister",
        "label": "saleStart",
        "offset": 0,
        "slot": "101",
        "type": "t_uint256"
      },
      {
        "astId": 2143,
        "contract": "contracts/TokenSaleRegister.sol:TokenSaleRegister",
        "label": "saleEnd",
        "offset": 0,
        "slot": "102",
        "type": "t_uint256"
      },
      {
        "astId": 2146,
        "contract": "contracts/TokenSaleRegister.sol:TokenSaleRegister",
        "label": "salePrice",
        "offset": 0,
        "slot": "103",
        "type": "t_uint256"
      },
      {
        "astId": 2149,
        "contract": "contracts/TokenSaleRegister.sol:TokenSaleRegister",
        "label": "maxSaleAmount",
        "offset": 0,
        "slot": "104",
        "type": "t_uint256"
      },
      {
        "astId": 2152,
        "contract": "contracts/TokenSaleRegister.sol:TokenSaleRegister",
        "label": "totalSold",
        "offset": 0,
        "slot": "105",
        "type": "t_uint256"
      },
      {
        "astId": 2156,
        "contract": "contracts/TokenSaleRegister.sol:TokenSaleRegister",
        "label": "userBalances",
        "offset": 0,
        "slot": "106",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2160,
        "contract": "contracts/TokenSaleRegister.sol:TokenSaleRegister",
        "label": "allowedTokens",
        "offset": 0,
        "slot": "107",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2164,
        "contract": "contracts/TokenSaleRegister.sol:TokenSaleRegister",
        "label": "tokenMultiplier",
        "offset": 0,
        "slot": "108",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2167,
        "contract": "contracts/TokenSaleRegister.sol:TokenSaleRegister",
        "label": "buyers",
        "offset": 0,
        "slot": "109",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}