{
    "address": "0xD556f25a8150263B05f8fC1600d0A9bf012A3ed0",
    "abi": [
        {
            "type": "constructor",
            "inputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "MAXTIME_INT128",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "int128",
                    "internalType": "int128"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "MAXTIME_UINT256",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "MAX_CONTRIBUTOR_LOCKS",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint8",
                    "internalType": "uint8"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "MAX_USER_LOCKS",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint8",
                    "internalType": "uint8"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "MIN_LOCK_AMOUNT",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "MULTIPLIER_UINT256",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "VOTE_WEIGHT_MULTIPLIER_INT128",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "int128",
                    "internalType": "int128"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "VOTE_WEIGHT_MULTIPLIER_UINT256",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "WEEK_UINT128",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "WEEK_UINT256",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "acceptTransferOwnership",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "activateEmergencyUnlock",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "admin",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "balanceOf",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "_balance",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "balanceOfAllLocksAtBlock",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_block",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "_balance",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "balanceOfAllLocksAtTime",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_timestamp",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "_balance",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "balanceOfAt",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_block",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "_balance",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "balanceOfLockedPmx",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "_balanceOfLockedPmx",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "balanceOfOneLockAtBlock",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_lockIndex",
                    "type": "uint128",
                    "internalType": "uint128"
                },
                {
                    "name": "_block",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "_balance",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "balanceOfOneLockAtTime",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_lockIndex",
                    "type": "uint128",
                    "internalType": "uint128"
                },
                {
                    "name": "_timestamp",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "_balance",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "checkpoint",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "commitTransferOwnership",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "createLock",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_value",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "_unlockTime",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "outputs": [
                {
                    "name": "_index",
                    "type": "uint128",
                    "internalType": "uint128"
                },
                {
                    "name": "_newLockId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "decimals",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "depositFor",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_value",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "_lockIndex",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "emergencyUnlockActive",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "epoch",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "findBlockEpoch",
            "inputs": [
                {
                    "name": "_block",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "_maxEpoch",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "findUserTimestampEpoch",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_lockId",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "_ts",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "_min",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "floxContributors",
            "inputs": [
                {
                    "name": "contributor",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "isContributor",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "futureAdmin",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getCreateLockTsBounds",
            "inputs": [],
            "outputs": [
                {
                    "name": "_earliestLockEnd",
                    "type": "uint128",
                    "internalType": "uint128"
                },
                {
                    "name": "_latestLockEnd",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getIncreaseUnlockTimeTsBounds",
            "inputs": [
                {
                    "name": "_user",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_id",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "_earliestLockEnd",
                    "type": "uint128",
                    "internalType": "uint128"
                },
                {
                    "name": "_latestLockEnd",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getLastGlobalPoint",
            "inputs": [],
            "outputs": [
                {
                    "name": "_lastPoint",
                    "type": "tuple",
                    "internalType": "struct IvePMXStructs.Point",
                    "components": [
                        {
                            "name": "bias",
                            "type": "int128",
                            "internalType": "int128"
                        },
                        {
                            "name": "slope",
                            "type": "int128",
                            "internalType": "int128"
                        },
                        {
                            "name": "ts",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "blk",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "pmxAmt",
                            "type": "uint256",
                            "internalType": "uint256"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getLastUserPoint",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_lockIndex",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "outputs": [
                {
                    "name": "_lastPoint",
                    "type": "tuple",
                    "internalType": "struct IvePMXStructs.Point",
                    "components": [
                        {
                            "name": "bias",
                            "type": "int128",
                            "internalType": "int128"
                        },
                        {
                            "name": "slope",
                            "type": "int128",
                            "internalType": "int128"
                        },
                        {
                            "name": "ts",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "blk",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "pmxAmt",
                            "type": "uint256",
                            "internalType": "uint256"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getLastUserSlope",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_lockIndex",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "int128",
                    "internalType": "int128"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getLockIndexById",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_id",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "_index",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getUserPointAtEpoch",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_lockIndex",
                    "type": "uint128",
                    "internalType": "uint128"
                },
                {
                    "name": "_uepoch",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "_lastPoint",
                    "type": "tuple",
                    "internalType": "struct IvePMXStructs.Point",
                    "components": [
                        {
                            "name": "bias",
                            "type": "int128",
                            "internalType": "int128"
                        },
                        {
                            "name": "slope",
                            "type": "int128",
                            "internalType": "int128"
                        },
                        {
                            "name": "ts",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "blk",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "pmxAmt",
                            "type": "uint256",
                            "internalType": "uint256"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "increaseAmount",
            "inputs": [
                {
                    "name": "_value",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "_lockIndex",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "increaseUnlockTime",
            "inputs": [
                {
                    "name": "_unlockTime",
                    "type": "uint128",
                    "internalType": "uint128"
                },
                {
                    "name": "_lockIndex",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "indicesToIds",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "index",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "outputs": [
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "initialize",
            "inputs": [
                {
                    "name": "_admin",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_tokenAddr",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_name",
                    "type": "string",
                    "internalType": "string"
                },
                {
                    "name": "_symbol",
                    "type": "string",
                    "internalType": "string"
                },
                {
                    "name": "_version",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "isLockCreatedByFloxContributor",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "createdByFloxContributor",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isPaused",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "locked",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "amount",
                    "type": "int128",
                    "internalType": "int128"
                },
                {
                    "name": "end",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "lockedById",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_id",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "_amount",
                    "type": "int128",
                    "internalType": "int128"
                },
                {
                    "name": "_end",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "lockedByIdExtended",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_id",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "_extendedLockInfo",
                    "type": "tuple",
                    "internalType": "struct IvePMXStructs.LockedBalanceExtended",
                    "components": [
                        {
                            "name": "id",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "index",
                            "type": "uint128",
                            "internalType": "uint128"
                        },
                        {
                            "name": "amount",
                            "type": "int128",
                            "internalType": "int128"
                        },
                        {
                            "name": "end",
                            "type": "uint128",
                            "internalType": "uint128"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "lockedByIndex",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_index",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "outputs": [
                {
                    "name": "_amount",
                    "type": "int128",
                    "internalType": "int128"
                },
                {
                    "name": "_end",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "lockedEnd",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_index",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "name",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "nextId",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "nextId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "numLocks",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "numLocks",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "numberOfFloxContributorCreatedLocks",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "numberOfLocks",
                    "type": "uint8",
                    "internalType": "uint8"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "numberOfUserCreatedLocks",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "numberOfLocks",
                    "type": "uint8",
                    "internalType": "uint8"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "pointHistory",
            "inputs": [
                {
                    "name": "epoch",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "bias",
                    "type": "int128",
                    "internalType": "int128"
                },
                {
                    "name": "slope",
                    "type": "int128",
                    "internalType": "int128"
                },
                {
                    "name": "ts",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "blk",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "pmxAmt",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "recoverIERC20",
            "inputs": [
                {
                    "name": "_tokenAddr",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setFloxContributor",
            "inputs": [
                {
                    "name": "_floxContributor",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_isFloxContributor",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setVePMXUtils",
            "inputs": [
                {
                    "name": "_vePmxUtilsAddr",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "slopeChanges",
            "inputs": [
                {
                    "name": "time",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "slopeChange",
                    "type": "int128",
                    "internalType": "int128"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "supply",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "supplyAt",
            "inputs": [
                {
                    "name": "_point",
                    "type": "tuple",
                    "internalType": "struct IvePMXStructs.Point",
                    "components": [
                        {
                            "name": "bias",
                            "type": "int128",
                            "internalType": "int128"
                        },
                        {
                            "name": "slope",
                            "type": "int128",
                            "internalType": "int128"
                        },
                        {
                            "name": "ts",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "blk",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "pmxAmt",
                            "type": "uint256",
                            "internalType": "uint256"
                        }
                    ]
                },
                {
                    "name": "_t",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "symbol",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "toggleContractPause",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "token",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "totalPMXSupply",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "totalPMXSupplyAt",
            "inputs": [
                {
                    "name": "_block",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "totalSupply",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "totalSupply",
            "inputs": [
                {
                    "name": "_timestamp",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "totalSupplyAt",
            "inputs": [
                {
                    "name": "_block",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "userPointEpoch",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "epoch",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "userPointHistory",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "epoch",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "bias",
                    "type": "int128",
                    "internalType": "int128"
                },
                {
                    "name": "slope",
                    "type": "int128",
                    "internalType": "int128"
                },
                {
                    "name": "ts",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "blk",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "pmxAmt",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "userPointHistoryTs",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_lockIndex",
                    "type": "uint128",
                    "internalType": "uint128"
                },
                {
                    "name": "_idx",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "vePmxUtils",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract VestedPMXUtils"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "version",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "withdraw",
            "inputs": [
                {
                    "name": "_lockIndex",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "outputs": [
                {
                    "name": "_value",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "ApplyOwnership",
            "inputs": [
                {
                    "name": "admin",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "CommitOwnership",
            "inputs": [
                {
                    "name": "admin",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ContractPause",
            "inputs": [
                {
                    "name": "isPaused",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Deposit",
            "inputs": [
                {
                    "name": "staker",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "payor",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "endingTimestamp",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "depositType",
                    "type": "uint128",
                    "indexed": false,
                    "internalType": "uint128"
                },
                {
                    "name": "txTimestamp",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "EmergencyUnlockActivated",
            "inputs": [],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "FloxContributorUpdate",
            "inputs": [
                {
                    "name": "contributor",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "isContributor",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Supply",
            "inputs": [
                {
                    "name": "prevSupply",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "supply",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "VePmxUtilsContractUpdated",
            "inputs": [
                {
                    "name": "vePmxUtilsAddr",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Withdraw",
            "inputs": [
                {
                    "name": "staker",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "recipient",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "ts",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "AdminNotSet",
            "inputs": []
        },
        {
            "type": "error",
            "name": "AdminOnly",
            "inputs": []
        },
        {
            "type": "error",
            "name": "CannotMergeLockWithItself",
            "inputs": []
        },
        {
            "type": "error",
            "name": "DecimalsExceedMaximumValue",
            "inputs": []
        },
        {
            "type": "error",
            "name": "EmergencyUnlockActive",
            "inputs": []
        },
        {
            "type": "error",
            "name": "FutureAdminOnly",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InitializeFailed",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidBlockNumber",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidLockIndex",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidTimestamp",
            "inputs": []
        },
        {
            "type": "error",
            "name": "LockCanOnlyBeUpToFourYears",
            "inputs": []
        },
        {
            "type": "error",
            "name": "LockDidNotExpire",
            "inputs": []
        },
        {
            "type": "error",
            "name": "LockExpired",
            "inputs": []
        },
        {
            "type": "error",
            "name": "LockIDNotInUse",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MaximumFloxContributorLocksReached",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MaximumUserLocksReached",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MinLockAmount",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MustBeInAFutureEpochWeek",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NoExistingLockFound",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotLockingForSelfOrFloxContributor",
            "inputs": []
        },
        {
            "type": "error",
            "name": "OperationIsPaused",
            "inputs": []
        },
        {
            "type": "error",
            "name": "UnableToRecoverPMX",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "",
        "sourceMap": "2941:60225:69:-:0;;;9187:16;;;;;;;;;-1:-1:-1;1701:1:35;1806:7;:22;2941:60225:69;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "",
        "sourceMapi;:::-;;:::i;:::-;;;552:25:113;;;540:2;525:18;20653:362:69;;;;;;;;57064:143;;;;;;:::i;:::-;;:::i;31003:293::-;;;;;;:::i;:::-;;:::i;6032:21::-;;;;;;6827:115;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1673:14:113;;1666:22;1648:41;;1636:2;1621:18;6827:115:69;1508:187:113;8473:18:69;;;:::i;:::-;;;;;;;:::i;12692:423::-;;;;;;:::i;:::-;;:::i;54164:576::-;;;;;;:::i;:::-;;:::i;:::-;;5737:32;;;;;;;;;;;;2761:42:113;2749:55;;;2731:74;;2719:2;2704:18;5737:32:69;2561:250:113;4025:53:69;;4070:8;4025:53;;31498:107;;;:::i;26789:263::-;;;;;;:::i;:::-;26937:13;;;;26864:14;26937:13;;;:6;:13;;;;;;;;26951:12;:19;;;;;:27;;;;;;;;;;;;26937:42;;;;;;;;26904:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26789:263;;;;;3282:2:113;3271:22;;;;3253:41;;3342:34;3330:47;;;3325:2;3310:18;;3303:75;3226:18;26789:263:69;3081:303:113;5407:47:69;;5453:1;5407:47;;;;;3561:4:113;3549:17;;;3531:36;;3519:2;3504:18;5407:47:69;3389:184:113;8550:23:69;;;;;;21238:648;;;;;;:::i;:::-;;:::i;7201:87::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;9565:925;;;;;;:::i;:::-;;:::i;7924:109::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6605:2:113;6594:22;;;6576:41;;6653:22;;;;6648:2;6633:18;;6626:50;6692:18;;;6685:34;;;;6750:2;6735:18;;6728:34;6793:3;6778:19;;6771:35;;;;6563:3;6548:19;7924:109:69;6321:491:113;7369:53:69;;;;;;:::i;:::-;;;;;;;;;;;;;;58519:346;;;;;;:::i;:::-;;:::i;29374:1142::-;;;;;;:::i;:::-;;:::i;27328:415::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;8232:4:113;8274:3;8263:9;8259:19;8251:27;;8311:6;8305:13;8294:9;8287:32;8387:34;8379:4;8371:6;8367:17;8361:24;8357:65;8350:4;8339:9;8335:20;8328:95;8494:4;8486:6;8482:17;8476:24;8472:2;8461:40;8454:4;8443:9;8439:20;8432:70;8570:34;8562:4;8554:6;8550:17;8544:24;8540:65;8533:4;8522:9;8518:20;8511:95;8060:552;;;;;8707:26:69;;;;;;;;;4130:49;;4169:10;4130:49;;12064:154;;;;;;:::i;:::-;;:::i;8827:74::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;26245:233;;;;;;:::i;:::-;26387:13;;;;;26314:14;26387:13;;;:6;:13;;;;;;;;:18;;;;;;;;;;26354:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26245:233;4548:58;;4590:16;4548:58;;34465:231;;;;;;:::i;:::-;34601:19;;;34565:7;34601:19;;;:12;:19;;;;;;;;:31;;;;;;;;;;;34649:23;;;:16;:23;;;;;:31;;;;;;;;;:37;;;;;;:40;;;34465:231;;;;;;8523:21;;;:::i;16797:705::-;;;;;;:::i;:::-;;:::i;6325:81::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;23221:711;;;;;;:::i;:::-;;:::i;:::-;;;;9431:34:113;9419:47;;;9401:66;;9503:47;;;;9498:2;9483:18;;9476:75;9374:18;23221:711:69;9227:330:113;11375:144:69;;;;;;:::i;:::-;;:::i;24514:287::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;9702:4:113;9744:3;9733:9;9729:19;9721:27;;9796:6;9790:13;9786:2;9775:29;9764:9;9757:48;9876:4;9868:6;9864:17;9858:24;9854:2;9843:40;9836:4;9825:9;9821:20;9814:70;9940:4;9932:6;9928:17;9922:24;9915:4;9904:9;9900:20;9893:54;10003:4;9995:6;9991:17;9985:24;9978:4;9967:9;9963:20;9956:54;10066:4;10058:6;10054:17;10048:24;10041:4;10030:9;10026:20;10019:54;9562:517;;;;;4420:56:69;;4460:16;4420:56;;;;;10257:2:113;10246:22;;;;10228:41;;10216:2;10201:18;4420:56:69;10084:191:113;57547:450:69;;;:::i;4271:49::-;;4310:10;4271:49;;;;;10456:34:113;10444:47;;;10426:66;;10414:2;10399:18;4271:49:69;10280:218:113;59870:168:69;;;:::i;7029:76::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;18043:2407;;;;;;:::i;:::-;;:::i;7764:51::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13581:429;;;;;;:::i;:::-;;:::i;7655:20::-;;;;;;59536:264;;;;;;:::i;:::-;;:::i;55031:579::-;;;;;;:::i;:::-;;:::i;8497:20::-;;;:::i;33329:852::-;;;;;;:::i;:::-;;:::i;25644:275::-;;;;;;:::i;:::-;25763:19;;;25728:6;25763:19;;;:12;:19;;;;;;;;:31;;;;;;;;;;;25821:21;;;:14;:21;;;;;;:29;;;;;;;;;25867:23;;;:16;:23;;;;;:31;;;;;;;;;:39;;;;;;;;;:45;;;;;;25644:275;;;;;25086:292;;;;;;:::i;:::-;;:::i;28617:312::-;;;;;;:::i;:::-;;:::i;5825:20::-;;;;;;;;;;;;7545:57;;;;;;:::i;:::-;;;;;;;;;;;;;;;;32063:882;;;;;;:::i;:::-;;:::i;6144:86::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;59097:288;;;;;;:::i;:::-;;:::i;50296:364::-;;;:::i;22137:481::-;;;:::i;51426:2323::-;;;;;;:::i;:::-;;:::i;:::-;;;;11455:34:113;11443:47;;;11425:66;;11522:2;11507:18;;11500:34;;;;11398:18;51426:2323:69;11251:289:113;24031:127:69;;;:::i;60304:250::-;;;:::i;3893:51::-;;3935:9;3893:51;;55851:892;;;;;;:::i;:::-;;:::i;58149:183::-;;;;;;:::i;:::-;;:::i;14553:1918::-;;;;;;:::i;:::-;;:::i;30684:126::-;;;:::i;28118:269::-;;;;;;:::i;:::-;;:::i;8127:83::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;8292:63;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8619:20;;;;;;;;;8412:33;;;;;;;;;4826:62;;4883:5;4826:62;;5906:20;;;;;;;;;4674:60;;4729:5;4674:60;;20653:362;20776:15;;;20717:27;20776:15;;;:8;:15;;;;;;;;20717:27;20802:207;20826:9;20822:13;;:1;:13;;;20802:207;;;20892:13;;;;;;;:6;:13;;;;;;;;20906:12;:19;;;;;:22;;;;;;;;;;;;;20892:37;;;;;;;:44;20853:85;;20876:62;20853:85;;:::i;:::-;;-1:-1:-1;20981:3:69;;20802:207;;;;20746:269;20653:362;;;:::o;57064:143::-;57120:14;57155:45;57165:10;57177;57189;57155:9;:45::i;:::-;57146:54;57064:143;-1:-1:-1;;57064:143:69:o;31003:293::-;31068:7;31100:12;31091:6;:21;31087:54;;;31121:20;;;;;;;;;;;;;;31087:54;31152:19;31174:29;31189:6;31197:5;;31174:14;:29::i;:::-;31214:18;31235:25;;;:12;:25;;;;;;;;;31214:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31003:293;-1:-1:-1;;;31003:293:69:o;8473:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12692:423::-;12867:15;;;12778:16;12867:15;;;:8;:15;;;;;;;;12778:16;12934:175;12958:9;12954:13;;:1;:13;;;12934:175;;;12997:41;13021:5;13028:1;13031:6;12997:23;:41::i;:::-;12985:53;;;;:::i;:::-;;-1:-1:-1;13081:3:69;;12934:175;;;;12796:319;12692:423;;;;:::o;54164:576::-;1744:1:35;2325:7;;:19;2317:63;;;;;;;12773:2:113;2317:63:35;;;12755:21:113;12812:2;12792:18;;;12785:30;12851:33;12831:18;;;12824:61;12902:18;;2317:63:35;;;;;;;;;1744:1;2455:7;:18;54271:8:69::1;::::0;;;::::1;;;54267:40;;;54288:19;;;;;;;;;;;;;;54267:40;3935:9;54321:6;:24;54317:52;;;54354:15;;;;;;;;;;;;;;54317:52;54396:19;::::0;::::1;54379:14;54396:19:::0;;;:12:::1;:19;::::0;;;;;;;:31:::1;::::0;::::1;::::0;;;;;;;;54469:13;;;:6:::1;:13:::0;;;;;:21;;;;;;;;54505:14;;54469:21;;54505:14:::1;::::0;;;::::1;:19;54501:53;;54533:21;;;;;;;;;;;;;;54501:53;54568:11:::0;;54583:15:::1;54568:11:::0;;;::::1;;;:30;54564:56;;54607:13;;;;;;;;;;;;;;54564:56;54681:13;::::0;::::1;54678:1;54681:13:::0;;;:6:::1;:13;::::0;;;;;;;:21;;;;;;;;54651:82;;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;;::::1;;;::::0;;::::1;::::0;;;;::::1;::::0;54681:13;;54670:6;;54678:1;;54722:10;54651:11:::1;:82::i;:::-;-1:-1:-1::0;;1701:1:35;2628:7;:22;-1:-1:-1;;;54164:576:69:o;31498:107::-;31544:7;31570:28;31582:15;31570:11;:28::i;:::-;31563:35;;31498:107;:::o;21238:648::-;21318:7;;21403:9;21318:7;;21444:415;21464:3;21460:1;:7;21444:415;;;21554:4;21546;:12;21542:56;21578:5;21542:56;21638:1;21619:11;21626:4;21619;:11;:::i;:::-;:15;;21633:1;21619:15;:::i;:::-;21618:21;;;;:::i;:::-;21657:18;;;;:12;:18;;;;;:22;;;21611:28;;-1:-1:-1;21657:32:69;-1:-1:-1;21653:136:69;;21716:4;21709:11;;21653:136;;;21766:8;21773:1;21766:4;:8;:::i;:::-;21759:15;;21653:136;21831:3;;21444:415;;;-1:-1:-1;21875:4:69;;21238:648;-1:-1:-1;;;;;21238:648:69:o;9565:925::-;9848:24;;;;;:47;;-1:-1:-1;9876:5:69;;:19;:5;:19;;9848:47;9844:103;;;9918:18;;;;;;;;;;;;;;9844:103;9957:5;:14;;;;;;;;;;-1:-1:-1;10025:15:69;;;:12;:15;;10047:12;10025:19;:34;10090:15;10069:18;:36;10115:22;:26;10190:4;:12;10197:5;10190:4;:12;:::i;:::-;-1:-1:-1;10212:6:69;:16;10221:7;10212:6;:16;:::i;:::-;-1:-1:-1;10238:7:69;:18;10248:8;10238:7;:18;:::i;:::-;;10294:17;10329:10;10314:35;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10294:57;;;;10377:3;10365:9;:15;10361:56;;;10389:28;;;;;;;;;;;;;;10361:56;10428:5;:18;;;;;;;;;;;;;;;;-1:-1:-1;;;10456:27:69;;:8;:27;-1:-1:-1;9565:925:69:o;58519:346::-;58616:5;;;;58602:10;:19;58598:43;;58630:11;;;;;;;;;;;;;;58598:43;58669:5;;;;;;58655:19;;;;58651:52;;58683:20;;;;;;;;;;;;;;58651:52;58842:5;;58806:51;;;;;:35;58842:5;;;58806:51;;;16133:74:113;16223:18;;;16216:34;;;58806:35:69;;;;;;16106:18:113;;58806:51:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;58798:60;;;;;;58519:346;;:::o;29374:1142::-;29469:21;;29446:7;;29469:21;;29465:75;;;29513:16;:14;:16::i;:::-;29506:23;;;;29465:75;29550:22;29575:6;29550:31;;29591:10;4169;;29605:9;:12;;;:27;;;;:::i;:::-;29604:44;;;;:::i;:::-;29591:57;;29678:2;29663:9;:12;;;:17;29659:48;;;29689:18;;;;;;;;;;;;;;29659:48;29723:9;29718:510;29738:3;29734:1;:7;29718:510;;;29759:18;4169:10;29759:18;;:::i;:::-;;;29791:13;29831:2;29826;:7;29822:117;;;29858:2;29853:7;;29822:117;;;-1:-1:-1;29908:16:69;;;;:12;:16;;;;;;;;29822:117;30008:12;;;;30003:17;;:2;:17;:::i;:::-;29970:9;:15;;;:52;;;;:::i;:::-;29952:70;;:9;;:70;;;;;:::i;:::-;;;;;-1:-1:-1;30040:8:69;;;30036:52;;30068:5;;;30036:52;30120:6;30101:9;:15;;:25;;;;;;;:::i;:::-;;;;;-1:-1:-1;;30140:12:69;;;:17;;;30200:3;;29718:510;;;;30259:1;30242:9;:14;;;:18;;;30238:67;;;30293:1;30276:18;;30238:67;30355:14;;30402:16;;;;30339:32;;;;;30385:33;;30381:97;;;-1:-1:-1;30451:16:69;;;;30381:97;30495:14;29374:1142;-1:-1:-1;;;;;29374:1142:69:o;27328:415::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27518:13:69;;;;;:6;:13;;;;;:18;;;;;;;;;27485:51;;;;;;;;;;;;;;;;;;;;;;;;27546:26;;;-1:-1:-1;27608:28:69;27518:13;:18;27608:16;:28::i;:::-;27582:54;;;;:23;;;;:54;;;;27673:16;;27646:43;;:24;;;:43;27723:13;;;;;27699:37;:21;;;:37;27582:17;27328:415;-1:-1:-1;;27328:415:69:o;12064:154::-;12137:16;12172:39;12197:5;12204:6;12172:24;:39::i;:::-;12165:46;12064:154;-1:-1:-1;;;12064:154:69:o;8523:21::-;;;;;;;:::i;16797:705::-;17004:21;;;16895:12;17004:21;;;:14;:21;;;;;;;;:30;;;;;;;;;16895:12;17097:378;17117:3;17113:1;:7;17097:378;;;17150:4;17142;:12;17138:56;17174:5;17138:56;17207:11;17241:1;17222:11;17229:4;17222;:11;:::i;:::-;:15;;17236:1;17222:15;:::i;:::-;17221:21;;;;:::i;:::-;17260:23;;;;;;;:16;:23;;;;;;;;:32;;;;;;;;:37;;;;;;;;:40;;;17207:35;;-1:-1:-1;17260:47:69;-1:-1:-1;17256:149:69;;17334:3;17327:10;;17256:149;;;17383:7;17389:1;17383:3;:7;:::i;:::-;17376:14;;17256:149;-1:-1:-1;17447:3:69;;17097:378;;;;17484:11;16797:705;;;;;:::o;23221:711::-;23525:13;;;23333:24;23525:13;;;:6;:13;;;;;;;;:18;;;;;;;;:22;23333:24;;4310:10;;23525:37;;4310:10;;23525:22;;;;;:37;:::i;:::-;23524:54;;;;:::i;:::-;23508:71;;4310:10;23508:71;:::i;:::-;23489:90;-1:-1:-1;4310:10:69;23738:51;4590:16;23746:15;23738:51;:::i;:::-;23722:68;;4310:10;23722:68;:::i;:::-;23721:85;;;;:::i;:::-;23704:102;;23876:14;23856:34;;:16;:34;;;23852:73;;23911:14;23892:33;;23852:73;23221:711;;;;;:::o;11375:144::-;11430:16;11465:47;11489:5;11496:15;11465:23;:47::i;24514:287::-;24648:23;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24648:23:69;-1:-1:-1;24700:19:69;;;;24683:14;24700:19;;;:12;:19;;;;;;;;:31;;;;;;;;;;;;;24754:23;;;:16;:23;;;;;:31;;;;;;;;;:40;;;;;;;;;;24741:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24514:287::o;57547:450::-;57619:11;;;;57605:10;:25;57601:55;;57639:17;;;;;;;;;;;;;;57601:55;57683:11;;;;;57704:46;;57737:13;;;;;;;;;;;;;;57704:46;57905:5;:14;;;;;;;;;;;;;;57929:11;:24;;;;;;;57968:22;;2731:74:113;;;57968:22:69;;2719:2:113;2704:18;57968:22:69;;;;;;;;57591:406;57547:450::o;59870:168::-;59938:5;;;;59924:10;:19;59920:43;;59952:11;;;;;;;;;;;;;;59920:43;59985:8;;;;;;;;;;59984:9;59973:20;;;;;;;;;;;;;;60008:23;;;;;;60022:8;;;;;1673:14:113;1666:22;1648:41;;1636:2;1621:18;;1508:187;60008:23:69;;;;;;;;59870:168::o;18043:2407::-;18213:21;;18181:16;;18213:21;;18209:130;;;-1:-1:-1;18273:13:69;;;;;;;:6;:13;;;;;;;;18287:12;:19;;;;;:31;;;;;;;;;;;;;18273:46;;;;;;;:53;18257:71;18250:78;;18209:130;18362:15;;:46;;18398:10;18362:46;;;18380:15;18362:46;18487:19;;;18469:15;18487:19;;;:12;:19;;;;;;;;:31;;;;;;;;;;;18349:59;;-1:-1:-1;18605:50:69;18500:5;18487:31;18349:59;18605:22;:50::i;:::-;18588:67;;18780:6;18790:1;18780:11;18776:1668;;18814:1;18807:8;;;;;;18776:1668;19149:22;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19149:22:69;-1:-1:-1;20008:23:69;;;;;;;:16;:23;;;;;;;;:32;;;;;;;;:40;;;;;;;;;19996:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20131:25;;:10;:25;:::i;:::-;20098:9;:15;;;:60;;;;:::i;:::-;20080:78;;:9;;:78;;;;;:::i;:::-;;;;;;;;20176:14;;20193:1;20176:18;;;20172:75;;-1:-1:-1;20172:75:69;;20231:1;20214:18;;20172:75;20288:9;:14;;;20272:32;;20261:43;;20356:9;:16;;;20345:8;:27;20341:93;;;20403:9;:16;;;20392:27;;20341:93;18832:1612;18199:2251;;18043:2407;;;;;:::o;13581:429::-;13759:15;;;13670:16;13759:15;;;:8;:15;;;;;;;;13670:16;13826:178;13850:9;13846:13;;:1;:13;;;13826:178;;;13889:44;13912:5;13919:1;13922:10;13889:22;:44::i;:::-;13877:56;;;;:::i;:::-;;-1:-1:-1;13976:3:69;;13826:178;;59536:264;59621:5;;;;59607:10;:19;59603:43;;59635:11;;;;;;;;;;;;;;59603:43;59691:10;:44;;;;;;;;;;;;;59751:42;;2731:74:113;;;59751:42:69;;2719:2:113;2704:18;59751:42:69;2561:250:113;55031:579:69;1744:1:35;2325:7;;:19;2317:63;;;;;;;12773:2:113;2317:63:35;;;12755:21:113;12812:2;12792:18;;;12785:30;12851:33;12831:18;;;12824:61;12902:18;;2317:63:35;12571:355:113;2317:63:35;1744:1;2455:7;:18;55127:8:69::1;::::0;;;::::1;;;55123:40;;;55144:19;;;;;;;;;;;;;;55123:40;3935:9;55177:6;:24;55173:52;;;55210:15;;;;;;;;;;;;;;55173:52;55265:10;55235:14;55252:24:::0;;;:12:::1;:24;::::0;;;;;;;:36:::1;::::0;::::1;::::0;;;;;;;;55330:18;;;:6:::1;:18:::0;;;;;:26;;;;;;;;55371:14;;55330:26;;55371:14:::1;::::0;;;::::1;:19;55367:53;;55399:21;;;;;;;;;;;;;;55367:53;55434:11:::0;;:39:::1;55457:15;55434:39:::0;::::1;:11:::0;;;::::1;;:39;55430:65;;55482:13;;;;;;;;;;;;;;55430:65;55526:77;::::0;;;;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;::::1;;;;::::0;::::1;::::0;::::1;::::0;55538:10:::1;::::0;55550:6;;-1:-1:-1;;3581:1:69::1;55592:10:::0;55526:11:::1;:77::i;:::-;-1:-1:-1::0;;1701:1:35;2628:7;:22;-1:-1:-1;;55031:579:69:o;8497:20::-;;;;;;;:::i;33329:852::-;33391:7;33423:12;33414:6;:21;33410:54;;;33444:20;;;;;;;;;;;;;;33410:54;33475:19;33497:29;33512:6;33520:5;;33497:14;:29::i;:::-;33537:18;33558:25;;;:12;:25;;;;;;;;33537:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33635:5;;33475:51;;-1:-1:-1;33537:46:69;33621:19;;33617:448;;;33656:22;33681:12;33656:22;33694:15;:11;33708:1;33694:15;:::i;:::-;33681:29;;;;;;;;;;;;;;-1:-1:-1;33681:29:69;33656:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33728:9;;;;33656:54;;-1:-1:-1;33728:26:69;33724:150;;33849:5;:9;;;33833;:13;;;:25;;;;:::i;:::-;33819:5;:8;;;33804:9;:12;;;:23;;;;:::i;:::-;33790:9;;;;33781:18;;:6;:18;:::i;:::-;33780:48;;;;:::i;:::-;33779:80;;;;:::i;:::-;33774:85;;33724:150;33642:242;33617:448;;;33921:12;33908:5;:9;;;:25;33904:151;;34030:9;;;;34015:24;;:12;:24;:::i;:::-;34001:8;;;;33983:26;;:15;:26;:::i;:::-;33969:9;;;;33960:18;;:6;:18;:::i;:::-;33959:51;;;;:::i;:::-;33958:82;;;;:::i;:::-;33953:87;;33904:151;34144:30;34153:5;34171:2;34160:5;:8;;;:13;;;;:::i;25086:292::-;25170:23;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25170:23:69;-1:-1:-1;25222:19:69;;;;25205:14;25222:19;;;:12;:19;;;;;;;;:31;;;;;;;;;;;;;25280:21;;;:14;:21;;;;;;:29;;;;;;;;;25332:23;;;:16;:23;;;;;:31;;;;;;;;;:39;;;;;;;;;;25319:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25086:292::o;28617:312::-;28779:19;;;28692:14;28779:19;;;:12;:19;;;;;;;;:24;;;;;;;;28750:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28813:43;;28840:16;;;;;;;;;;;;;;28813:43;28911:11;;;;28617:312;-1:-1:-1;;;28617:312:69:o;32063:882::-;32148:21;;32125:7;;32148:21;;32144:75;;;32192:16;:14;:16::i;32144:75::-;32242:15;;:46;;32278:10;32242:46;;;32260:15;32242:46;32382:5;;32229:59;;-1:-1:-1;32341:12:69;;;;32419:418;32439:3;32435:1;:7;32419:418;;;32529:4;32521;:12;32517:56;32553:5;32517:56;32613:1;32594:11;32601:4;32594;:11;:::i;:::-;:15;;32608:1;32594:15;:::i;:::-;32593:21;;;;:::i;:::-;32632:18;;;;:12;:18;;;;;:21;;;32586:28;;-1:-1:-1;32632:35:69;-1:-1:-1;32628:139:69;;32694:4;32687:11;;32628:139;;;32744:8;32751:1;32744:4;:8;:::i;:::-;32737:15;;32628:139;32809:3;;32419:418;;;-1:-1:-1;32847:22:69;32872:18;;;:12;:18;;;;;;;;;32847:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32907:31;32847:43;32927:10;32907:8;:31::i;:::-;32900:38;32063:882;-1:-1:-1;;;;;;32063:882:69:o;59097:288::-;59213:5;;;;59199:10;:19;59195:43;;59227:11;;;;;;;;;;;;;;59195:43;59248:34;;;;;;;:16;:34;;;;;;;;;:55;;;;;;;;;;;;;59319:59;;1648:41:113;;;59319:59:69;;1621:18:113;59319:59:69;;;;;;;59097:288;;:::o;50296:364::-;50385:8;;;;;;;50381:40;;;50402:19;;;;;;;;;;;;;;50381:40;50481:21;;;;50477:57;;;50511:23;;;;;;;;;;;;;;50477:57;50598:19;;;;;;;;50594:1;50598:19;;;;;;;;;;50619;;;;;;;;;;;;;;;;50574:79;;50594:1;;50598:19;;50574:11;:79::i;:::-;50296:364::o;22137:481::-;22193:24;;4310:10;22289:39;4310:10;22297:15;22289:39;:::i;:::-;22288:56;;;;:::i;:::-;22272:73;;4310:10;22272:73;:::i;:::-;22253:92;-1:-1:-1;4310:10:69;;22528:51;4590:16;22536:15;22528:51;:::i;:::-;22527:68;;;;:::i;:::-;22526:85;;;;:::i;:::-;22509:102;;22137:481;;:::o;51426:2323::-;51559:14;51575:18;1744:1:35;2325:7;;:19;2317:63;;;;;;;12773:2:113;2317:63:35;;;12755:21:113;12812:2;12792:18;;;12785:30;12851:33;12831:18;;;12824:61;12902:18;;2317:63:35;12571:355:113;2317:63:35;1744:1;2455:7;:18;51609:8:69::1;::::0;;;::::1;;;51605:40;;;51626:19;;;;;;;;;;;;;;51605:40;3935:9;51659:6;:24;51655:52;;;51692:15;;;;;;;;;;;;;;51655:52;51721:10;:19;::::0;::::1;;::::0;::::1;::::0;:52:::1;;-1:-1:-1::0;51762:10:69::1;51745:28;::::0;;;:16:::1;:28;::::0;;;;;::::1;;51744:29;51721:52;51717:101;;;51782:36;;;;;;;;;;;;;;51717:101;51832:10;:19;::::0;::::1;;:72:::0;::::1;;;-1:-1:-1::0;51855:31:69::1;::::0;::::1;;::::0;;;5165:1:::1;51855:31;::::0;;;;;;;;:49:::1;:31;:49;;51832:72;51828:110;;;51913:25;;;;;;;;;;;;;;51828:110;51982:10;51965:28;::::0;;;:16:::1;:28;::::0;;;;;::::1;;:63:::0;::::1;;;-1:-1:-1::0;52009:10:69::1;:19;::::0;::::1;;;51965:63;:146;;;;-1:-1:-1::0;52044:42:69::1;::::0;::::1;;::::0;;;:35:::1;:42;::::0;;;;;5453:1:::1;52044:67;:42:::0;;::::1;:67;;51965:146;51948:242;;;52143:36;;;;;;;;;;;;;;51948:242;52200:13;::::0;::::1;;::::0;;;:6:::1;:13;::::0;;;;:18;;52217:1:::1;::::0;52200:13;:18:::1;::::0;52217:1;;52200:18:::1;:::i;:::-;::::0;;;-1:-1:-1;;;52368:13:69::1;::::0;::::1;;::::0;;;:6:::1;:13;::::0;;;;;;4310:10:::1;52414:26;4310:10:::0;52414:11;:26:::1;:::i;:::-;52413:43;;;;:::i;:::-;52535:13;::::0;::::1;52503:29;52535:13:::0;;;:6:::1;:13;::::0;;;;;;;:25;;;;;;;;52392:64;;-1:-1:-1;52598:15:69::1;52575:19;::::0;::::1;:38;52571:77;;52622:26;;;;;;;;;;;;;;52571:77;52684:33;4590:16;52684:15;:33;:::i;:::-;52670:10;52662:19;;:55;52658:121;;;52740:28;;;;;;;;;;;;;;52658:121;52882:19;::::0;::::1;;::::0;;;:12:::1;:19;::::0;;;;;;;52902:8:::1;:15:::0;;;;;;;;::::1;::::0;;::::1;52882:36:::0;;;;;;;;:49;;;52981:19;;;:12:::1;:19:::0;;;;;:31;;;;;;;;:47;;;53082:15;;52902;53042:37;;::::1;:55:::0;;53111:46;;53082:15;;::::1;53111:46:::0;;;;;::::1;::::0;;53178:15;;;;;;:20;;52902:15;;52882:19;53178:20:::1;::::0;52902:15;;53178:20:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;53280:5;53266:19;;:10;:19;;::::0;53262:333:::1;;53400:31;::::0;::::1;;::::0;;;:24:::1;:31;::::0;;;;:36;;53435:1:::1;::::0;53400:31;:36:::1;::::0;53435:1;;53400:36:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;53262:333;;;53467:42;::::0;::::1;;::::0;;;:35:::1;:42;::::0;;;;:47;;53513:1:::1;::::0;53467:42;:47:::1;::::0;53513:1;;53467:47:::1;;;:::i;:::-;::::0;;::::1;::::0;;::::1;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;;::::0;;::::1;;::::0;;-1:-1:-1;53528:37:69::1;::::0;::::1;-1:-1:-1::0;53528:37:69;;;:30:::1;:37;::::0;;;;;;;:49;;;;;;;;:56;;;::::1;-1:-1:-1::0;53528:56:69::1;::::0;;53262:333:::1;53605:86;::::0;;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;;::::0;;::::1;::::0;;;;53671:15:::1;::::0;::::1;-1:-1:-1::0;53671:15:69;;;:8:::1;:15:::0;;;;;;;;53605:86:::1;::::0;53617:5;;53624:6;;53632:10;;53605:86;;53671:19:::1;::::0;53605:86;;53671:15:::1;:19;:::i;:::-;53605:11;:86::i;:::-;53710:15;::::0;::::1;;::::0;;;:8:::1;:15;::::0;;;;;:19:::1;::::0;53728:1:::1;::::0;53710:15:::1;;:19;:::i;:::-;1701:1:35::0;2628:7;:22;53702:40:69;51426:2323;;-1:-1:-1;51426:2323:69;;-1:-1:-1;;;;;51426:2323:69:o;24031:127::-;24084:23;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24084:23:69;-1:-1:-1;24145:5:69;;24132:19;;;;:12;:19;;;;;;;;;24119:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24031:127::o;60304:250::-;60376:5;;;;60362:10;:19;60358:43;;60390:11;;;;;;;;;;;;;;60358:43;60415:21;;;;60411:57;;;60445:23;;;;;;;;;;;;;;60411:57;60478:21;:28;;;;60502:4;60478:28;;;60521:26;;;;60478:21;;60521:26;60304:250::o;55851:892::-;1744:1:35;2325:7;;:19;2317:63;;;;;;;12773:2:113;2317:63:35;;;12755:21:113;12812:2;12792:18;;;12785:30;12851:33;12831:18;;;12824:61;12902:18;;2317:63:35;12571:355:113;2317:63:35;1744:1;2455:7;:18;55956:8:69::1;::::0;;;::::1;;;55952:40;;;55973:19;;;;;;;;;;;;;;55952:40;56032:10;56002:14;56019:24:::0;;;:12:::1;:24;::::0;;;;;;;:36:::1;::::0;::::1;::::0;;;;;;;;56097:18;;;:6:::1;:18:::0;;;;;:26;;;;;;;;;4310:10:::1;56155:26;4310:10:::0;56155:11;:26:::1;:::i;:::-;56154:43;;;;:::i;:::-;56257:11:::0;;56133:64;;-1:-1:-1;56273:15:69::1;56257:11:::0;;;::::1;;;56249:39;56245:65;;56297:13;;;;;;;;;;;;;;56245:65;56324:14:::0;;56342:1:::1;56324:14;::::0;;;::::1;:19;56320:53;;56352:21;;;;;;;;;;;;;;56320:53;56468:11:::0;;::::1;::::0;;;::::1;::::0;::::1;56454:25:::0;;::::1;;56450:64;;56488:26;;;;;;;;;;;;;;56450:64;56550:33;4590:16;56550:15;:33;:::i;:::-;56536:10;56528:19;;:55;56524:121;;;56606:28;;;;;;;;;;;;;;56524:121;56655:81;::::0;;;;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;::::1;;;;::::0;::::1;::::0;::::1;::::0;56667:10:::1;::::0;-1:-1:-1;;56682:10:69;;3693:1:::1;56725:10:::0;56655:11:::1;:81::i;58149:183::-:0;58234:5;;;;58220:10;:19;58216:43;;58248:11;;;;;;;;;;;;;;58216:43;58269:11;:19;;;;;;;;;;;;;58303:22;;2731:74:113;;;58303:22:69;;2719:2:113;2704:18;58303:22:69;2561:250:113;14553:1918:69;14720:21;;14688:16;;14720:21;;14716:130;;;-1:-1:-1;14780:13:69;;;;;;;:6;:13;;;;;;;;14794:12;:19;;;;;:31;;;;;;;;;;;;;14780:46;;;;;;;:53;14764:71;14757:78;;14716:130;14868:12;14859:6;:21;14855:54;;;14889:20;;;;;;;;;;;;;;14855:54;14937:19;;;14920:14;14937:19;;;:12;:19;;;;;;;;:31;;;;;;;;;;;15045:21;;;:14;:21;;;;;:29;;;;;;;;;14920:14;15084:442;15104:3;15100:1;:7;15084:442;;;15194:4;15186;:12;15182:56;15218:5;15182:56;15251:12;15286:1;15267:11;15274:4;15267;:11;:::i;:::-;:15;;15281:1;15267:15;:::i;:::-;15266:21;;;;:::i;:::-;15305:23;;;;;;;:16;:23;;;;;;;;:31;;;;;;;;:37;;;;;;;;:41;;;15251:36;;-1:-1:-1;15305:51:69;-1:-1:-1;15301:155:69;;15383:4;15376:11;;15301:155;;;15433:8;15440:1;15433:4;:8;:::i;:::-;15426:15;;15301:155;-1:-1:-1;15498:3:69;;15084:442;;;-1:-1:-1;15558:23:69;;;15536:19;15558:23;;;:16;:23;;;;;;;;:31;;;;;;;;:37;;;;;;;;15536:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15625:5;;15536:59;;15657:32;15672:6;15625:5;15657:14;:32::i;:::-;15699:19;15721:20;;;:12;:20;;;;;;;;15699:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15640:49;;-1:-1:-1;15699:19:69;15807:17;;;15803:291;;;15840:19;15862:12;15840:19;15875:10;:6;15884:1;15875:10;:::i;:::-;15862:24;;;;;;;;;;;;;;-1:-1:-1;15862:24:69;15840:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15922:10;;;;15840:46;;-1:-1:-1;15909:23:69;;15922:10;15909:23;:::i;:::-;15900:32;;15963:6;:9;;;15951:6;:9;;;:21;;;;:::i;:::-;15946:26;;15826:157;15803:291;;;16027:10;;;;16012:25;;:12;:25;:::i;:::-;16003:34;;16074:6;:9;;;16056:15;:27;;;;:::i;:::-;16051:32;;15803:291;16123:9;;;;16146:11;;16142:92;;16217:6;16202;:10;;;16193:6;:19;;;;:::i;:::-;16187:26;;:2;:26;:::i;:::-;16186:37;;;;:::i;:::-;16173:50;;;;:::i;:::-;;;16142:92;16300:9;;;;16288:21;;:9;:21;:::i;:::-;16259:6;:12;;;:52;;;;:::i;:::-;16244:67;;:6;;:67;;;;;:::i;:::-;;;;;;;;16369:13;;;;16348:11;;:35;;;;16344:120;;-1:-1:-1;16344:120:69;;16396:6;:13;;;16385:24;;16344:120;;;16451:11;;16435:29;;;-1:-1:-1;16344:120:69;14706:1765;;;;;;;;;;14553:1918;;;;;:::o;30684:126::-;30772:5;;30757:46;;;;;30797:4;30757:46;;;2731:74:113;30731:7:69;;30772:5;;;30757:31;;2704:18:113;;30757:46:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;28118:269::-;28214:21;;28191:7;;28214:21;;28210:74;;;-1:-1:-1;28258:15:69;28251:22;;28210:74;-1:-1:-1;28311:19:69;;;;;28294:14;28311:19;;;:12;:19;;;;;;;;:27;;;;;;;;;;;;28355:13;;;:6;:13;;;;;:21;;;;;;;:25;;;;;;28118:269::o;46645:3367::-;46782:14;1744:1:35;2325:7;;:19;2317:63;;;;;;;12773:2:113;2317:63:35;;;12755:21:113;12812:2;12792:18;;;12785:30;12851:33;12831:18;;;12824:61;12902:18;;2317:63:35;12571:355:113;2317:63:35;1744:1;2455:7;:18;;;46882:17:69::1;::::0;::::1;::::0;;:8:::1;:17;::::0;;;;;::::1;::::0;;::::1;46868:31:::0;;::::1;;46864:62;;46908:18;;;;;;;;;;;;;;46864:62;46969:8;::::0;;;::::1;;;46965:40;;;46986:19;;;;;;;;;;;;;;46965:40;47069:21;::::0;::::1;47052:14;47069:21:::0;;;:12:::1;:21;::::0;;;;;;;:33:::1;::::0;;::::1;::::0;;;;;;;;;47145:15;;;:6:::1;:15:::0;;;;;:23;;;;;;;;;47112:56;;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;47280:15:::1;47272:40;;47271:68:::0;::::1;;;-1:-1:-1::0;47318:21:69::1;::::0;::::1;;47317:22;47271:68;47267:124;;;47362:18;;;;;;;;;;;;;;47267:124;47463:16:::0;;47524:36:::1;::::0;;;;::::1;::::0;;;47463:16:::1;47524:36:::0;;;::::1;::::0;::::1;::::0;47447:34:::1;::::0;;::::1;::::0;-1:-1:-1;47714:54:69::1;47726:7:::0;47463:9;47524:36;47757:10;47714:11:::1;:54::i;:::-;48585:21;::::0;::::1;48564:18;48585:21:::0;;;:12:::1;:21;::::0;;;;;;;48607:8:::1;:17:::0;;;;;;48564:18;;48607:21:::1;::::0;48627:1:::1;::::0;48607:17:::1;;:21;:::i;:::-;48585:44;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;48585:44:69;;;;48639:21:::1;::::0;::::1;::::0;;;:12:::1;:21:::0;;;;;:33;;::::1;::::0;;;;;;;;:46;;;48702:21;;;48724:8:::1;:17:::0;;;;;;;48585:44;;-1:-1:-1;;48724:21:69::1;::::0;48744:1:::1;::::0;48724:17:::1;:21;:::i;:::-;48702:44;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;48702:44:69;;;48695:51;;;48788:21:::1;::::0;::::1;::::0;;;:12:::1;:21:::0;;;;;:33;;;;;;;;:39:::1;::::0;;::::1;:52:::0;;48850:48;48788:52;;::::1;48850:48:::0;;;;;::::1;::::0;;;48915:29;;;;;;48908:36;;;;::::1;::::0;;;;;;;49083:17;;;:8:::1;:17:::0;;;;;;:22;;:17;;-1:-1:-1;49083:22:69::1;::::0;48788:39;;49083:22:::1;;:::i;:::-;::::0;;::::1;::::0;;::::1;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;;::::0;;::::1;;::::0;;-1:-1:-1;49161:39:69::1;::::0;::::1;-1:-1:-1::0;49161:39:69;;;:30:::1;:39;::::0;;;;;;;:47;;;;;;;;;::::1;;49156:364;;49391:33;::::0;::::1;;::::0;;;:24:::1;:33;::::0;;;;:38;;49428:1:::1;::::0;49391:33;:38:::1;::::0;49428:1;;49391:38:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;49156:364;;;49460:44;::::0;::::1;;::::0;;;:35:::1;:44;::::0;;;;:49;;49508:1:::1;::::0;49460:44;:49:::1;::::0;49508:1;;49460:49:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;49156:364;49553:6;::::0;49578:21:::1;49593:6:::0;49553;49578:21:::1;:::i;:::-;49569:6;:30:::0;49633:5:::1;::::0;49618:50:::1;::::0;;;;49633:5:::1;16151:55:113::0;;;49618:50:69::1;::::0;::::1;16133:74:113::0;16223:18;;;16216:34;;;49633:5:69;;::::1;::::0;49618:30:::1;::::0;16106:18:113;;49618:50:69::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;49610:78;;;::::0;::::1;::::0;;19235:2:113;49610:78:69::1;::::0;::::1;19217:21:113::0;19274:2;19254:18;;;19247:30;19313:17;19293:18;;;19286:45;19348:18;;49610:78:69::1;19033:339:113::0;49610:78:69::1;49766:21;::::0;::::1;;49762:131;;;49827:19;::::0;;;;::::1;::::0;;49823:1:::1;49827:19:::0;;;::::1;::::0;;::::1;::::0;;;49848;;;;::::1;::::0;;;;;;;::::1;::::0;;;49803:79:::1;::::0;49823:1;;49827:19;::::1;49803:11;:79::i;:::-;49908:54;::::0;;19551:25:113;;;49946:15:69::1;19607:2:113::0;19592:18;;19585:34;49908:54:69::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;19524:18:113;49908:54:69::1;;;;;;;49998:6;::::0;49977:28:::1;::::0;;19551:25:113;;;19607:2;19592:18;;19585:34;;;;49977:28:69::1;::::0;19524:18:113;49977:28:69::1;;;;;;;-1:-1:-1::0;;1701:1:35;2628:7;:22;-1:-1:-1;46645:3367:69;;;-1:-1:-1;;;;;46645:3367:69:o;41745:1596::-;42017:21;;;;42013:57;;;42047:23;;;;;;;;;;;;;;42013:57;42154:5;;42139:69;;;;;42174:10;42139:69;;;19832:74:113;42194:4:69;19922:18:113;;;19915:83;20014:18;;;20007:34;;;42154:5:69;;;;;42139:34;;19805:18:113;;42139:69:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;42131:78;;;;;;42300:6;;42350:63;;;;;;;;;42374:16;;42350:63;;;;;42397:13;;;;42350:63;;;;;;42253:14;;42300:6;42433:21;42448:6;42300;42433:21;:::i;:::-;42424:6;:30;42693:43;;42728:6;;42693:9;;:43;;42728:6;;42693:43;:::i;:::-;;;;;-1:-1:-1;42750:16:69;;;;42746:74;;42782:27;;;:13;;;:27;42746:74;42829:13;;;;;;;:6;:13;;;;;;;;42843:12;:19;;;;;:29;;;;;;;;;;;;;42829:44;;;;;;;:56;;;;;;;;;;;;;;;;;43130:50;42836:5;43149:9;42876;42863:8;43130:11;:50::i;:::-;43223:9;:13;;;43196:80;;43211:10;43196:80;;43204:5;43196:80;;;43238:6;43246:12;43260:15;43196:80;;;;;;;20254:25:113;;;20327:34;20315:47;;;;20310:2;20295:18;;20288:75;20394:2;20379:18;;20372:34;20242:2;20227:18;;20052:360;43196:80:69;;;;;;;;43291:43;43298:12;43312:21;43327:6;43298:12;43312:21;:::i;:::-;43291:43;;;19551:25:113;;;19607:2;19592:18;;19585:34;;;;19524:18;43291:43:69;;;;;;;41958:1383;;;41745:1596;;;;;;:::o;35252:5524::-;35451:54;;;;;;;;;35431:17;35451:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35535;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35680:5;;35451:54;;35535;;35431:17;;35700:19;;;;35696:1461;;35846:15;35829:10;:14;;;:32;;;:57;;;;;35885:1;35865:10;:17;;;:21;;;35829:57;35825:375;;;35920:17;;4460:16;;35920:49;;4729:5;;35920:49;:::i;:::-;35919:68;;;;:::i;:::-;35906:81;;:10;;;;:81;;;;36151:14;;;:32;;36168:15;;36151:32;;;:::i;:::-;36123:4;:10;;;:62;;;;:::i;:::-;36103:17;;:82;;;;:::i;:::-;36091:94;;;;35825:375;36235:15;36218:10;:14;;;:32;;;:57;;;;;36274:1;36254:10;:17;;;:21;;;36218:57;36214:375;;;36309:17;;4460:16;;36309:49;;4729:5;;36309:49;:::i;:::-;36308:68;;;;:::i;:::-;36295:81;;:10;;;;:81;;;;36540:14;;;:32;;36557:15;;36540:32;;;:::i;:::-;36512:4;:10;;;:62;;;;:::i;:::-;36492:17;;:82;;;;:::i;:::-;36480:94;;;;36214:375;36856:14;;;;;36843:28;;;;;;;;:12;:28;;;;;;36889:14;;;;36843:28;;;;;;-1:-1:-1;36889:19:69;;36885:262;;36950:10;:14;;;36932:32;;:10;:14;;;:32;;;36928:205;;37006:15;36988:33;;36928:205;;;37099:14;;;;;37086:28;;;;;;:12;:28;;;;;;;;;;-1:-1:-1;36928:205:69;37192:79;;;;;;;;37167:22;37192:79;;;;;;;;;37223:15;37192:79;;;;;;;37245:12;37192:79;;;;;;;;;;;37285:10;;37281:73;;-1:-1:-1;37323:20:69;;;;:12;:20;;;;;;;;;37311:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37281:73;37363:22;37396:9;:12;;;37363:46;;37631:29;37663:187;;;;;;;;37689:9;:14;;;37663:187;;;;;;37724:9;:15;;;37663:187;;;;;;37757:9;:12;;;37663:187;;;;37788:9;:13;;;37663:187;;;;37823:9;:16;;;37663:187;;;37631:219;;37860:18;37927:9;:12;;;37909:15;:30;37905:164;;;38025:32;;;;:15;:32;:::i;:::-;38006:13;;;;37991:28;;:12;:28;:::i;:::-;37969:51;;4070:8;37969:51;:::i;:::-;37968:90;;;;:::i;:::-;37955:103;;37905:164;38304:171;38354:14;38382:9;38405:16;38435:10;38459:6;38304:36;:171::i;:::-;38292:183;-1:-1:-1;38540:19:69;;;;38536:1036;;38753:4;:10;;;38740:4;:10;;;:23;;;;:::i;:::-;38720:9;:15;;:44;;;;;;;:::i;:::-;;;;;-1:-1:-1;38809:9:69;;38797;;:21;;38809:9;38797:21;:::i;:::-;38778:41;;:9;;:41;;;;;:::i;:::-;;;;;;;;38858:17;;38838;;:37;;;;;;38834:151;;-1:-1:-1;38834:151:69;;38951:17;;38931;;:37;;38951:17;38931:37;:::i;:::-;38915:55;;38895:9;:16;;:75;;;;;;;:::i;:::-;;;-1:-1:-1;38834:151:69;39022:17;;39002;;:37;;;;;;;38998:385;;;39115:17;;39095;;:37;;39115:17;39095:37;:::i;:::-;39079:55;;39059:9;:16;;:75;;;;;;;:::i;:::-;;;-1:-1:-1;39232:17:69;;:22;;;:59;;;;;39276:15;39258:10;:14;;;:33;;;;39232:59;39228:141;;;39333:17;;39315:35;;:9;;:35;;39333:17;;39315:35;:::i;:::-;;;;;-1:-1:-1;39228:141:69;39419:1;39401:9;:15;;;:19;;;39397:77;;;39458:1;39440:15;;;:19;39397:77;39508:1;39491:9;:14;;;:18;;;39487:75;;;39546:1;39529:18;;39487:75;39644:5;;39631:19;;;;:12;:19;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39677:19;;;;39673:1097;;39919:15;39902:10;:14;;;:32;;;39898:409;;;40051:10;;;;40032:29;;;;:::i;:::-;;;40101:10;:14;;;40083:32;;:10;:14;;;:32;;;40079:150;;40158:10;;;;40139:29;;;;:::i;:::-;;;40079:150;40259:14;;;;;40246:28;;;;;;;;:12;:28;;;;;;;:46;;;;;;;;;;;;;39898:409;40342:15;40325:10;:14;;;:32;;;40321:341;;;40398:10;:14;;;40381:31;;:10;:14;;;:31;;;40377:214;;;40455:10;;;;40436:29;;;;:::i;:::-;40539:14;;;;;40526:28;;;;;;;;:12;:28;;;;;;;:46;;;;;;;;;;;;;;-1:-1:-1;40377:214:69;40713:46;40735:5;40742:4;40748:10;40713:21;:46::i;:::-;35421:5355;;;;;;;;;35252:5524;;;;:::o;43718:1805::-;43946:12;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43946:12:69;43970:10;4169;43992:39;4169:10;43992:24;;;:39;:::i;:::-;43991:56;;;;:::i;:::-;43970:78;;44063:9;44058:1407;44078:3;44074:1;:7;44058:1407;;;44099:18;4310:10;44099:18;;:::i;:::-;;;44131:13;44255:15;44249:2;44241:11;;:29;44237:161;;;44303:15;44290:29;;44237:161;;;-1:-1:-1;44367:16:69;;;;;;;:12;:16;;;;;;;;44237:161;44457:20;44462:15;44457:2;:20;:::i;:::-;44431:10;:16;;;:47;;;;:::i;:::-;44412:66;;:10;;:66;;;;;:::i;:::-;;;;;-1:-1:-1;44492:16:69;;;:26;;44512:6;;44492:16;:26;;44512:6;;44492:26;:::i;:::-;;;;;;;;44592:15;;44610:1;44592:19;;;44588:77;;-1:-1:-1;44588:77:69;;44649:1;44631:19;;44588:77;44701:1;44682:10;:16;;;:20;;;44678:79;;;44741:1;44722:16;;;:20;44678:79;44805:18;;;:13;;;;:18;;;44941:20;;;44789:2;;-1:-1:-1;44789:2:69;;4070:8;;44936:25;;44941:20;44936:25;:::i;:::-;44912:50;;;;;;:::i;:::-;44911:89;;;;:::i;:::-;44871:17;:21;;;:129;;;;:::i;:::-;44838:14;;;:162;45130:11;45140:1;45130:11;;:::i;:::-;;;45174:15;45160:30;;:2;:30;;;45156:239;;-1:-1:-1;45227:12:69;45210:14;;;:29;45257:5;;45156:239;45347:20;;;;:12;:20;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;45437:3:69;;44058:1407;;;-1:-1:-1;;;45475:5:69;:14;-1:-1:-1;45506:10:69;;43718:1805;-1:-1:-1;;43718:1805:69:o;45723:481::-;45846:19;;;45829:14;45846:19;;;:12;:19;;;;;;;;:31;;;;;;;;;;;45907:21;;;:14;:21;;;;;:29;;;;;;;;;:33;;45939:1;45907:33;:::i;:::-;45951:21;;;;;;;;:14;:21;;;;;;;;:29;;;;;;;;:41;;;46014:15;46002:9;;;:27;;;46052:12;46039:10;;;:25;;;46106:13;;;:6;:13;;;;;:21;;;;;;;;:28;46090:46;;;;46074:13;;;:62;;;46146:23;;;:16;:23;;;;;:31;;;;;;;;;:42;;;;;;;;:51;;;;;;;;;;;;;;;;;;;;;;;46106:28;46146:51;;;-1:-1:-1;46146:51:69;;;;;;-1:-1:-1;46146:51:69;;;;;;45723:481::o;14:196:113:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;588:188::-;656:20;;716:34;705:46;;695:57;;685:85;;766:1;763;756:12;781:186;840:6;893:2;881:9;872:7;868:23;864:32;861:52;;;909:1;906;899:12;861:52;932:29;951:9;932:29;:::i;972:226::-;1031:6;1084:2;1072:9;1063:7;1059:23;1055:32;1052:52;;;1100:1;1097;1090:12;1052:52;-1:-1:-1;1145:23:113;;972:226;-1:-1:-1;972:226:113:o;1203:300::-;1271:6;1279;1332:2;1320:9;1311:7;1307:23;1303:32;1300:52;;;1348:1;1345;1338:12;1300:52;1371:29;1390:9;1371:29;:::i;:::-;1361:39;1469:2;1454:18;;;;1441:32;;-1:-1:-1;;;1203:300:113:o;1700:477::-;1849:2;1838:9;1831:21;1812:4;1881:6;1875:13;1924:6;1919:2;1908:9;1904:18;1897:34;1983:6;1978:2;1970:6;1966:15;1961:2;1950:9;1946:18;1940:50;2039:1;2034:2;2025:6;2014:9;2010:22;2006:31;1999:42;2168:2;2098:66;2093:2;2085:6;2081:15;2077:88;2066:9;2062:104;2058:113;2050:121;;;1700:477;;;;:::o;2182:374::-;2259:6;2267;2275;2328:2;2316:9;2307:7;2303:23;2299:32;2296:52;;;2344:1;2341;2334:12;2296:52;2367:29;2386:9;2367:29;:::i;:::-;2357:39;-1:-1:-1;2465:2:113;2450:18;;2437:32;;-1:-1:-1;2512:38:113;2546:2;2531:18;;2512:38;:::i;:::-;2502:48;;2182:374;;;;;:::o;2816:260::-;2884:6;2892;2945:2;2933:9;2924:7;2920:23;2916:32;2913:52;;;2961:1;2958;2951:12;2913:52;2984:29;3003:9;2984:29;:::i;:::-;2974:39;;3032:38;3066:2;3055:9;3051:18;3032:38;:::i;:::-;3022:48;;2816:260;;;;;:::o;3578:346::-;3646:6;3654;3707:2;3695:9;3686:7;3682:23;3678:32;3675:52;;;3723:1;3720;3713:12;3675:52;-1:-1:-1;;3768:23:113;;;3888:2;3873:18;;;3860:32;;-1:-1:-1;3578:346:113:o;3929:184::-;3981:77;3978:1;3971:88;4078:4;4075:1;4068:15;4102:4;4099:1;4092:15;4118:864;4161:5;4214:3;4207:4;4199:6;4195:17;4191:27;4181:55;;4232:1;4229;4222:12;4181:55;4272:6;4259:20;4302:18;4294:6;4291:30;4288:56;;;4324:18;;:::i;:::-;4393:2;4387:9;4459:4;4447:17;;4540:66;4443:90;;;4535:2;4439:99;4435:172;4423:185;;4638:18;4623:34;;4659:22;;;4620:62;4617:88;;;4685:18;;:::i;:::-;4721:2;4714:22;4745;;;4786:19;;;4807:4;4782:30;4779:39;-1:-1:-1;4776:59:113;;;4831:1;4828;4821:12;4776:59;4895:6;4888:4;4880:6;4876:17;4869:4;4861:6;4857:17;4844:58;4950:1;4922:19;;;4943:4;4918:30;4911:41;;;;4926:6;4118:864;-1:-1:-1;;;4118:864:113:o;4987:904::-;5112:6;5120;5128;5136;5144;5197:3;5185:9;5176:7;5172:23;5168:33;5165:53;;;5214:1;5211;5204:12;5165:53;5237:29;5256:9;5237:29;:::i;:::-;5227:39;;5285:38;5319:2;5308:9;5304:18;5285:38;:::i;:::-;5275:48;;5374:2;5363:9;5359:18;5346:32;5401:18;5393:6;5390:30;5387:50;;;5433:1;5430;5423:12;5387:50;5456;5498:7;5489:6;5478:9;5474:22;5456:50;:::i;:::-;5446:60;;;5559:2;5548:9;5544:18;5531:32;5588:18;5578:8;5575:32;5572:52;;;5620:1;5617;5610:12;5572:52;5643;5687:7;5676:8;5665:9;5661:24;5643:52;:::i;:::-;5633:62;;;5748:3;5737:9;5733:19;5720:33;5778:18;5768:8;5765:32;5762:52;;;5810:1;5807;5800:12;5762:52;5833;5877:7;5866:8;5855:9;5851:24;5833:52;:::i;:::-;5823:62;;;4987:904;;;;;;;;:::o;5896:420::-;5973:6;5981;5989;6042:2;6030:9;6021:7;6017:23;6013:32;6010:52;;;6058:1;6055;6048:12;6010:52;6081:29;6100:9;6081:29;:::i;:::-;6071:39;6179:2;6164:18;;6151:32;;-1:-1:-1;6280:2:113;6265:18;;;6252:32;;5896:420;-1:-1:-1;;;5896:420:113:o;6817:162::-;6884:20;;6944:2;6933:21;;;6923:32;;6913:60;;6969:1;6966;6959:12;6984:1071;7076:6;7084;7128:9;7119:7;7115:23;7158:3;7154:2;7150:12;7147:32;;;7175:1;7172;7165:12;7147:32;7199:4;7195:2;7191:13;7188:33;;;7217:1;7214;7207:12;7188:33;-1:-1:-1;7270:2:113;7264:9;7312:4;7300:17;;7347:18;7332:34;;7368:22;;;7329:62;7326:88;;;7394:18;;:::i;:::-;7430:2;7423:22;7469:28;7487:9;7469:28;:::i;:::-;7461:6;7454:44;7531:37;7564:2;7553:9;7549:18;7531:37;:::i;:::-;7526:2;7514:15;;7507:62;7638:2;7623:18;;;7610:32;7658:15;;;7651:30;7754:2;7739:18;;;7726:32;7774:15;;;7767:32;7872:3;7857:19;;;7844:33;7893:16;;;7886:33;7518:6;8017:4;8002:20;;;7989:34;;-1:-1:-1;;;6984:1071:113:o;8848:374::-;8925:6;8933;8941;8994:2;8982:9;8973:7;8969:23;8965:32;8962:52;;;9010:1;9007;9000:12;8962:52;9033:29;9052:9;9033:29;:::i;:::-;9023:39;;9081:38;9115:2;9104:9;9100:18;9081:38;:::i;:::-;8848:374;;9071:48;;-1:-1:-1;;;9188:2:113;9173:18;;;;9160:32;;8848:374::o;10503:300::-;10571:6;10579;10632:2;10620:9;10611:7;10607:23;10603:32;10600:52;;;10648:1;10645;10638:12;10600:52;10693:23;;;-1:-1:-1;10759:38:113;10793:2;10778:18;;10759:38;:::i;10808:118::-;10894:5;10887:13;10880:21;10873:5;10870:32;10860:60;;10916:1;10913;10906:12;10860:60;10808:118;:::o;10931:315::-;10996:6;11004;11057:2;11045:9;11036:7;11032:23;11028:32;11025:52;;;11073:1;11070;11063:12;11025:52;11096:29;11115:9;11096:29;:::i;:::-;11086:39;;11175:2;11164:9;11160:18;11147:32;11188:28;11210:5;11188:28;:::i;:::-;11235:5;11225:15;;;10931:315;;;;;:::o;11545:260::-;11613:6;11621;11674:2;11662:9;11653:7;11649:23;11645:32;11642:52;;;11690:1;11687;11680:12;11642:52;11713:29;11732:9;11713:29;:::i;11810:184::-;11862:77;11859:1;11852:88;11959:4;11956:1;11949:15;11983:4;11980:1;11973:15;11999:125;12064:9;;;12085:10;;;12082:36;;;12098:18;;:::i;12129:437::-;12208:1;12204:12;;;;12251;;;12272:61;;12326:4;12318:6;12314:17;12304:27;;12272:61;12379:2;12371:6;12368:14;12348:18;12345:38;12342:218;;12416:77;12413:1;12406:88;12517:4;12514:1;12507:15;12545:4;12542:1;12535:15;12342:218;;12129:437;;;:::o;12931:184::-;12983:77;12980:1;12973:88;13080:4;13077:1;13070:15;13104:4;13101:1;13094:15;13120:120;13160:1;13186;13176:35;;13191:18;;:::i;:::-;-1:-1:-1;13225:9:113;;13120:120::o;13245:128::-;13312:9;;;13333:11;;;13330:37;;;13347:18;;:::i;13504:518::-;13606:2;13601:3;13598:11;13595:421;;;13642:5;13639:1;13632:16;13686:4;13683:1;13673:18;13756:2;13744:10;13740:19;13737:1;13733:27;13727:4;13723:38;13792:4;13780:10;13777:20;13774:47;;;-1:-1:-1;13815:4:113;13774:47;13870:2;13865:3;13861:12;13858:1;13854:20;13848:4;13844:31;13834:41;;13925:81;13943:2;13936:5;13933:13;13925:81;;;14002:1;13988:16;;13969:1;13958:13;13925:81;;;13929:3;;13595:421;13504:518;;;:::o;14258:1418::-;14384:3;14378:10;14411:18;14403:6;14400:30;14397:56;;;14433:18;;:::i;:::-;14462:97;14552:6;14512:38;14544:4;14538:11;14512:38;:::i;:::-;14506:4;14462:97;:::i;:::-;14608:4;14639:2;14628:14;;14656:1;14651:768;;;;15463:1;15480:6;15477:89;;;-1:-1:-1;15532:19:113;;;15526:26;15477:89;14164:66;14155:1;14151:11;;;14147:84;14143:89;14133:100;14239:1;14235:11;;;14130:117;15579:81;;14621:1049;;14651:768;13451:1;13444:14;;;13488:4;13475:18;;14699:66;14687:79;;;14864:222;14878:7;14875:1;14872:14;14864:222;;;14960:19;;;14954:26;14939:42;;15067:4;15052:20;;;;15020:1;15008:14;;;;14894:12;14864:222;;;14868:3;15114:6;15105:7;15102:19;15099:261;;;15175:19;;;15169:26;15276:66;15258:1;15254:14;;;15270:3;15250:24;15246:97;15242:102;15227:118;15212:134;;15099:261;-1:-1:-1;;;;15406:1:113;15390:14;;;15386:22;15373:36;;-1:-1:-1;14258:1418:113:o;15681:273::-;15749:6;15802:2;15790:9;15781:7;15777:23;15773:32;15770:52;;;15818:1;15815;15808:12;15770:52;15850:9;15844:16;15900:4;15893:5;15889:16;15882:5;15879:27;15869:55;;15920:1;15917;15910:12;16261:245;16328:6;16381:2;16369:9;16360:7;16356:23;16352:32;16349:52;;;16397:1;16394;16387:12;16349:52;16429:9;16423:16;16448:28;16470:5;16448:28;:::i;16511:168::-;16584:9;;;16615;;16632:15;;;16626:22;;16612:37;16602:71;;16653:18;;:::i;16684:241::-;16723:7;16802:1;16798:2;16787:17;16783:1;16779:2;16768:17;16764:41;16840:11;16836:2;16825:27;16814:38;;16883:11;16874:7;16871:24;16861:58;;16899:18;;:::i;:::-;16861:58;16684:241;;;;:::o;16930:276::-;17030:2;17019:17;;;17000;;;;16996:41;17062:66;17052:77;;17141:34;17131:45;;17049:128;17046:154;;;17180:18;;:::i;17211:272::-;17309:2;17279:17;;;17298;;;;17275:41;17340:34;17331:44;;17386:66;17377:76;;17328:126;17325:152;;;17457:18;;:::i;17488:227::-;17528:1;17562:34;17559:1;17555:42;17616:3;17606:37;;17623:18;;:::i;:::-;17705:3;17668:34;17665:1;17661:42;17657:52;17652:57;;;17488:227;;;;:::o;17720:317::-;17856:34;17805:42;;;17849;;;17801:91;17912:52;;;;17983:24;;;17973:58;;18011:18;;:::i;18042:240::-;18162:34;18111:42;;;18155;;;18107:91;;18210:43;;18207:69;;;18256:18;;:::i;18287:148::-;18375:4;18354:12;;;18368;;;18350:31;;18393:13;;18390:39;;;18409:18;;:::i;18440:243::-;18562:34;18555:42;;;18511;;;18507:91;;18610:44;;18607:70;;;18657:18;;:::i;18688:184::-;18758:6;18811:2;18799:9;18790:7;18786:23;18782:32;18779:52;;;18827:1;18824;18817:12;18779:52;-1:-1:-1;18850:16:113;;18688:184;-1:-1:-1;18688:184:113:o;18877:151::-;18967:4;18960:12;;;18946;;;18942:31;;18985:14;;18982:40;;;19002:18;;:::i;20417:392::-;20456:1;20498;20494:2;20483:17;20535:1;20531:2;20520:17;20556:3;20546:37;;20563:18;;:::i;:::-;20684:66;20679:3;20676:75;20607:66;20602:3;20599:75;20595:157;20592:183;;;20755:18;;:::i;:::-;20789:14;;;20417:392;-1:-1:-1;;;20417:392:113:o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "MAXTIME_INT128()": "7aa9b556",
        "MAXTIME_UINT256()": "520221e9",
        "MAX_CONTRIBUTOR_LOCKS()": "2394c386",
        "MAX_USER_LOCKS()": "e7ee4b79",
        "MIN_LOCK_AMOUNT()": "dd764abf",
        "MULTIPLIER_UINT256()": "145925b6",
        "VOTE_WEIGHT_MULTIPLIER_INT128()": "fc26cf34",
        "VOTE_WEIGHT_MULTIPLIER_UINT256()": "fb2bc0b7",
        "WEEK_UINT128()": "7c10d93a",
        "WEEK_UINT256()": "4eb99c2d",
        "acceptTransferOwnership()": "7b371107",
        "activateEmergencyUnlock()": "d8399b7d",
        "admin()": "f851a440",
        "balanceOf(address)": "70a08231",
        "balanceOfAllLocksAtBlock(address,uint256)": "0e058678",
        "balanceOfAllLocksAtTime(address,uint256)": "8b2e014e",
        "balanceOfAt(address,uint256)": "4ee2cd7e",
        "balanceOfLockedPmx(address)": "02012997",
        "balanceOfOneLockAtBlock(address,uint128,uint256)": "e97d35ae",
        "balanceOfOneLockAtTime(address,uint128,uint256)": "890b4cfc",
        "checkpoint()": "c2c4c5c1",
        "commitTransferOwnership(address)": "e1cebf0b",
        "createLock(address,uint256,uint128)": "d41a4641",
        "decimals()": "313ce567",
        "depositFor(address,uint256,uint128)": "111aa399",
        "emergencyUnlockActive()": "f8946485",
        "epoch()": "900cf0cf",
        "findBlockEpoch(uint256,uint256)": "38dbff66",
        "findUserTimestampEpoch(address,uint256,uint256)": "5ae3afa7",
        "floxContributors(address)": "4fd9d1e0",
        "futureAdmin()": "4cb654af",
        "getCreateLockTsBounds()": "c67d526a",
        "getIncreaseUnlockTimeTsBounds(address,uint256)": "6e083e7f",
        "getLastGlobalPoint()": "d7214213",
        "getLastUserPoint(address,uint128)": "a15d874a",
        "getLastUserSlope(address,uint128)": "99e9c19b",
        "getLockIndexById(address,uint256)": "b0a0d799",
        "getUserPointAtEpoch(address,uint128,uint256)": "77bc368c",
        "increaseAmount(uint256,uint128)": "929edf45",
        "increaseUnlockTime(uint128,uint128)": "e13d7f98",
        "indicesToIds(address,uint128)": "5f96d4e7",
        "initialize(address,address,string,string,string)": "3f2f5ee2",
        "isLockCreatedByFloxContributor(address,uint256)": "0536a608",
        "isPaused()": "b187bd26",
        "locked(address,uint256)": "bf7bab73",
        "lockedById(address,uint256)": "50bb3fa4",
        "lockedByIdExtended(address,uint256)": "4957e892",
        "lockedByIndex(address,uint128)": "21c984e9",
        "lockedEnd(address,uint128)": "ed669886",
        "name()": "06fdde03",
        "nextId(address)": "46190ec4",
        "numLocks(address)": "b9ef0830",
        "numberOfFloxContributorCreatedLocks(address)": "3b9a760c",
        "numberOfUserCreatedLocks(address)": "87096bc0",
        "pointHistory(uint256)": "8ad4c447",
        "recoverIERC20(address,uint256)": "466003b2",
        "setFloxContributor(address,bool)": "c0525807",
        "setVePMXUtils(address)": "91c9f0a0",
        "slopeChanges(uint256)": "f52a36f7",
        "supply()": "047fc9aa",
        "supplyAt((int128,int128,uint256,uint256,uint256),uint256)": "4834d089",
        "symbol()": "95d89b41",
        "toggleContractPause()": "86f9c864",
        "token()": "fc0c546a",
        "totalPMXSupply()": "ed0600d9",
        "totalPMXSupplyAt(uint256)": "039eda01",
        "totalSupply()": "18160ddd",
        "totalSupply(uint256)": "bd85b039",
        "totalSupplyAt(uint256)": "981b24d0",
        "userPointEpoch(address,uint256)": "ee1f785b",
        "userPointHistory(address,uint256,uint256)": "4545304a",
        "userPointHistoryTs(address,uint128,uint256)": "53974fcf",
        "vePmxUtils()": "1354f127",
        "version()": "54fd4d50",
        "withdraw(uint128)": "02387a7b"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AdminNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AdminOnly\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotMergeLockWithItself\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DecimalsExceedMaximumValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmergencyUnlockActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FutureAdminOnly\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitializeFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBlockNumber\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLockIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTimestamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LockCanOnlyBeUpToFourYears\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LockDidNotExpire\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LockExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LockIDNotInUse\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaximumFloxContributorLocksReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaximumUserLocksReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinLockAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustBeInAFutureEpochWeek\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoExistingLockFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotLockingForSelfOrFloxContributor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperationIsPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnableToRecoverPMX\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ApplyOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"CommitOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"ContractPause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"endingTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"depositType\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"txTimestamp\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EmergencyUnlockActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isContributor\",\"type\":\"bool\"}],\"name\":\"FloxContributorUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"Supply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vePmxUtilsAddr\",\"type\":\"address\"}],\"name\":\"VePmxUtilsContractUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAXTIME_INT128\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAXTIME_UINT256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_CONTRIBUTOR_LOCKS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_USER_LOCKS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_LOCK_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MULTIPLIER_UINT256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTE_WEIGHT_MULTIPLIER_INT128\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTE_WEIGHT_MULTIPLIER_UINT256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEEK_UINT128\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEEK_UINT256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptTransferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activateEmergencyUnlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_block\",\"type\":\"uint256\"}],\"name\":\"balanceOfAllLocksAtBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"balanceOfAllLocksAtTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_block\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOfLockedPmx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_balanceOfLockedPmx\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_lockIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"_block\",\"type\":\"uint256\"}],\"name\":\"balanceOfOneLockAtBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_lockIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"balanceOfOneLockAtTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"commitTransferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"_unlockTime\",\"type\":\"uint128\"}],\"name\":\"createLock\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_index\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"_newLockId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"_lockIndex\",\"type\":\"uint128\"}],\"name\":\"depositFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyUnlockActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxEpoch\",\"type\":\"uint256\"}],\"name\":\"findBlockEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_lockId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ts\",\"type\":\"uint256\"}],\"name\":\"findUserTimestampEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_min\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"}],\"name\":\"floxContributors\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isContributor\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"futureAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCreateLockTsBounds\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_earliestLockEnd\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_latestLockEnd\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getIncreaseUnlockTimeTsBounds\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_earliestLockEnd\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_latestLockEnd\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastGlobalPoint\",\"outputs\":[{\"components\":[{\"internalType\":\"int128\",\"name\":\"bias\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"slope\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blk\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pmxAmt\",\"type\":\"uint256\"}],\"internalType\":\"struct IvePMXStructs.Point\",\"name\":\"_lastPoint\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_lockIndex\",\"type\":\"uint128\"}],\"name\":\"getLastUserPoint\",\"outputs\":[{\"components\":[{\"internalType\":\"int128\",\"name\":\"bias\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"slope\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blk\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pmxAmt\",\"type\":\"uint256\"}],\"internalType\":\"struct IvePMXStructs.Point\",\"name\":\"_lastPoint\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_lockIndex\",\"type\":\"uint128\"}],\"name\":\"getLastUserSlope\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getLockIndexById\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_index\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_lockIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"_uepoch\",\"type\":\"uint256\"}],\"name\":\"getUserPointAtEpoch\",\"outputs\":[{\"components\":[{\"internalType\":\"int128\",\"name\":\"bias\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"slope\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blk\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pmxAmt\",\"type\":\"uint256\"}],\"internalType\":\"struct IvePMXStructs.Point\",\"name\":\"_lastPoint\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"_lockIndex\",\"type\":\"uint128\"}],\"name\":\"increaseAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_unlockTime\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_lockIndex\",\"type\":\"uint128\"}],\"name\":\"increaseUnlockTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"index\",\"type\":\"uint128\"}],\"name\":\"indicesToIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"isLockCreatedByFloxContributor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"createdByFloxContributor\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"amount\",\"type\":\"int128\"},{\"internalType\":\"uint128\",\"name\":\"end\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"lockedById\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"_amount\",\"type\":\"int128\"},{\"internalType\":\"uint128\",\"name\":\"_end\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"lockedByIdExtended\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"index\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"amount\",\"type\":\"int128\"},{\"internalType\":\"uint128\",\"name\":\"end\",\"type\":\"uint128\"}],\"internalType\":\"struct IvePMXStructs.LockedBalanceExtended\",\"name\":\"_extendedLockInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_index\",\"type\":\"uint128\"}],\"name\":\"lockedByIndex\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"_amount\",\"type\":\"int128\"},{\"internalType\":\"uint128\",\"name\":\"_end\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_index\",\"type\":\"uint128\"}],\"name\":\"lockedEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"nextId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nextId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"numLocks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"numLocks\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"numberOfFloxContributorCreatedLocks\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"numberOfLocks\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"numberOfUserCreatedLocks\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"numberOfLocks\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"name\":\"pointHistory\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"bias\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"slope\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blk\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pmxAmt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverIERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_floxContributor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isFloxContributor\",\"type\":\"bool\"}],\"name\":\"setFloxContributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vePmxUtilsAddr\",\"type\":\"address\"}],\"name\":\"setVePMXUtils\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"slopeChanges\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"slopeChange\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"int128\",\"name\":\"bias\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"slope\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blk\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pmxAmt\",\"type\":\"uint256\"}],\"internalType\":\"struct IvePMXStructs.Point\",\"name\":\"_point\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_t\",\"type\":\"uint256\"}],\"name\":\"supplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleContractPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPMXSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_block\",\"type\":\"uint256\"}],\"name\":\"totalPMXSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_block\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"userPointEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"name\":\"userPointHistory\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"bias\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"slope\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blk\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pmxAmt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_lockIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"_idx\",\"type\":\"uint256\"}],\"name\":\"userPointHistoryTs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vePmxUtils\",\"outputs\":[{\"internalType\":\"contract VestedPMXUtils\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_lockIndex\",\"type\":\"uint128\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Frax Finance\",\"details\":\"Vote weight decays linearly over time. Lock time cannot be more than `MAXTIME_INT128` (4 years).Original idea and credit: Curve Finance's veCRV https://resources.curve.fi/faq/vote-locking-boost https://github.com/curvefi/curve-dao-contracts/blob/master/contracts/VotingEscrow.vy vePMX is basically a fork, with the key difference that 1 PMX locked for 1 second would be ~ 1 vePMX, As opposed to ~ 0 vePMX (as it is with veCRV)Frax Reviewer(s) / Contributor(s) Jan Turk: https://github.com/ThunderDeliverer Travis Moore: https://github.com/FortisFortuna Sam Kazemian: https://github.com/samkazemian Carter Carlson: https://github.com/pegahcarter\",\"events\":{\"ApplyOwnership(address)\":{\"params\":{\"admin\":\"The address of the new admin\"}},\"CommitOwnership(address)\":{\"params\":{\"admin\":\"The prospective new admin\"}},\"ContractPause(bool)\":{\"params\":{\"isPaused\":\"The pause status that was set\"}},\"Deposit(address,address,uint256,uint256,uint128,uint256)\":{\"params\":{\"depositType\":\"The type of the traction. DEPOSIT_FOR_TYPE = 0, CREATE_LOCK_TYPE = 1, INCREASE_LOCK_AMOUNT = 2, INCREASE_UNLOCK_TIME = 3;\",\"endingTimestamp\":\"The ending timestamp of the lock\",\"payor\":\"The address actually paying for the deposit\",\"staker\":\"The address where the deposit is credited to\",\"txTimestamp\":\"The timestamp that the deposit occured\",\"value\":\"The amount of PMX to add\"}},\"FloxContributorUpdate(address,bool)\":{\"params\":{\"contributor\":\"The address\",\"isContributor\":\"If the address is or is not a Flox Contributor\"}},\"Supply(uint256,uint256)\":{\"params\":{\"prevSupply\":\"The previous vePMX\",\"supply\":\"The new vePMX\"}},\"VePmxUtilsContractUpdated(address)\":{\"params\":{\"vePmxUtilsAddr\":\"Address of the VestedPMXUtils contract\"}},\"Withdraw(address,address,uint256,uint256)\":{\"params\":{\"recipient\":\"The recipient of the withdrawn tokens\",\"staker\":\"The address of the staker that is withdrawing\",\"ts\":\"The timestamp of the withdrawal\",\"value\":\"The amount of PMX withdrawn\"}}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"If `emergencyUnlock` is active, the PMX locked in all of the `_addr`'s locks is returned. If an external  smart contract is using this function, make sure that it can handle this case.\",\"params\":{\"_addr\":\"Address of the user\"},\"returns\":{\"_balance\":\"Total voting power (vePMX) of the user\"}},\"balanceOfAllLocksAtBlock(address,uint256)\":{\"details\":\"If `emergencyUnlock` is active, the PMX locked in all of the `_addr`'s locks is returned. If an external  smart contract is using this function, make sure that it can handle this case.\",\"params\":{\"_addr\":\"Address of the user\",\"_block\":\"Block number at which to measure voting power\"},\"returns\":{\"_balance\":\"Total voting power (vePMX) of the user\"}},\"balanceOfAllLocksAtTime(address,uint256)\":{\"details\":\"If `emergencyUnlock` is active, the PMX locked in all of the `_addr`'s locks is returned. If an external  smart contract is using this function, make sure that it can handle this case.\",\"params\":{\"_addr\":\"Address of the user\",\"_timestamp\":\"Epoch time to return the voting power at\"},\"returns\":{\"_balance\":\"Total voting power (vePMX) of the user\"}},\"balanceOfAt(address,uint256)\":{\"details\":\"If `emergencyUnlock` is active, the PMX locked in all of the `_addr`'s locks is returned. If an external  smart contract is using this function, make sure that it can handle this case.\",\"params\":{\"_addr\":\"Address of the user\",\"_block\":\"Block number at which to measure voting power\"},\"returns\":{\"_balance\":\"Total voting power (vePMX) of the user\"}},\"balanceOfLockedPmx(address)\":{\"params\":{\"_addr\":\"User account address\"},\"returns\":{\"_balanceOfLockedPmx\":\"The total amount of PMX locked for the user\"}},\"balanceOfOneLockAtBlock(address,uint128,uint256)\":{\"details\":\"If `emergencyUnlock` is active, the PMX locked in the lock is returned. If an external smart contract is  using this function, make sure that it can handle this case.\",\"params\":{\"_addr\":\"User's wallet address\",\"_block\":\"Block to calculate the voting power at\",\"_lockIndex\":\"Index of the user's lock that is getting measured\"},\"returns\":{\"_balance\":\"Total voting power (vePMX) of the user\"}},\"balanceOfOneLockAtTime(address,uint128,uint256)\":{\"details\":\"If `emergencyUnlock` is active, the PMX locked in the lock is returned. If an external smart contract is  using this function, make sure that it can handle this case.\",\"params\":{\"_addr\":\"User wallet address\",\"_lockIndex\":\"Index of the user's lock that is getting measured\",\"_timestamp\":\"Epoch time to return voting power at\"},\"returns\":{\"_balance\":\"Total voting power (vePMX) of the user\"}},\"commitTransferOwnership(address)\":{\"params\":{\"_addr\":\"Address to have ownership transferred to\"}},\"createLock(address,uint256,uint128)\":{\"details\":\"Users should only be allowed to create locks for themselves, the only exemption being Flow contributors that  can create locks for other users.Flox contributors can only create 8 locks for themselves. Even if they are Flox contributors, they cannot  create contributor locks for themselves.\",\"params\":{\"_addr\":\"Address of the user for which the lock is being created\",\"_unlockTime\":\"Epoch time when tokens unlock, rounded down to whole weeks\",\"_value\":\"Amount to deposit\"},\"returns\":{\"_index\":\"Index of the user's lock that was created\",\"_newLockId\":\"ID of the user's lock that was created\"}},\"depositFor(address,uint256,uint128)\":{\"details\":\"Anyone (even a smart contract) can deposit for someone else, but cannot extend their locktime and deposit for a brand new user\",\"params\":{\"_addr\":\"User's wallet address\",\"_lockIndex\":\"Index of the user's lock that the deposit is being made to\",\"_value\":\"Amount to add to user's lock\"}},\"findBlockEpoch(uint256,uint256)\":{\"params\":{\"_block\":\"Block to find\",\"_maxEpoch\":\"Don't go beyond this epoch\"},\"returns\":{\"_0\":\"Approximate timestamp for block\"}},\"findUserTimestampEpoch(address,uint256,uint256)\":{\"params\":{\"_addr\":\"User wallet address\",\"_lockId\":\"ID of the user's lock that is getting measured\",\"_ts\":\"The timestamp to check at\"},\"returns\":{\"_min\":\"The latest user's epoch assume you traveled back in time to the timestamp\"}},\"getCreateLockTsBounds()\":{\"details\":\"The truncation in these operations is desired\",\"returns\":{\"_earliestLockEnd\":\"Earliest timestamp\",\"_latestLockEnd\":\"Latest timestamp\"}},\"getIncreaseUnlockTimeTsBounds(address,uint256)\":{\"details\":\"If this is called in the first week after the lock is created and if the lock duration is for maximum time,  the returned `_latestLockEnd` will be the same as the lock's end time. This will cause the extension of the lock  to revert. If a smart contract is using this function, make sure that it can handle this case.The truncation in these operations is desired\",\"returns\":{\"_earliestLockEnd\":\"Earliest timestamp\",\"_latestLockEnd\":\"Latest timestamp\"}},\"getLastGlobalPoint()\":{\"returns\":{\"_lastPoint\":\"The most recent point for this specific lock index\"}},\"getLastUserPoint(address,uint128)\":{\"params\":{\"_addr\":\"Address of the user wallet\",\"_lockIndex\":\"Index of the user's lock that is getting measured\"},\"returns\":{\"_lastPoint\":\"The most recent point for this specific lock index\"}},\"getLastUserSlope(address,uint128)\":{\"params\":{\"_addr\":\"Address of the user wallet\",\"_lockIndex\":\"Index of the user's lock that is getting measured\"},\"returns\":{\"_0\":\"Value of the slope\"}},\"getLockIndexById(address,uint256)\":{\"params\":{\"_addr\":\"User address\",\"_id\":\"User lock ID (not lock index)\"},\"returns\":{\"_index\":\"The index of the lock\"}},\"getUserPointAtEpoch(address,uint128,uint256)\":{\"params\":{\"_addr\":\"Address of the user wallet\",\"_lockIndex\":\"Index of the user's lock that is getting measured\",\"_uepoch\":\"The epoch of the user to get the point at\"},\"returns\":{\"_lastPoint\":\"The most recent point for this specific lock index\"}},\"increaseAmount(uint256,uint128)\":{\"params\":{\"_lockIndex\":\"Index of the user's lock that getting the increased amount\",\"_value\":\"Amount of tokens to deposit and add to the lock\"}},\"increaseUnlockTime(uint128,uint128)\":{\"params\":{\"_lockIndex\":\"Index of the user's lock that is getting the increased unlock time\",\"_unlockTime\":\"New epoch time for unlocking\"}},\"initialize(address,address,string,string,string)\":{\"details\":\"Same values are set to proxy and implementation.\",\"params\":{\"_admin\":\"Initial admin of the smart contract\",\"_name\":\"Token name\",\"_symbol\":\"Token symbol\",\"_tokenAddr\":\"`PMX` token address\",\"_version\":\"Contract version - required for Aragon compatibility\"}},\"lockedById(address,uint256)\":{\"params\":{\"_addr\":\"User address\",\"_id\":\"User lock ID (not lock index)\"},\"returns\":{\"_amount\":\"The amount locked\",\"_end\":\"The timestamp when the lock expires/ends\"}},\"lockedByIdExtended(address,uint256)\":{\"params\":{\"_addr\":\"User address\",\"_id\":\"User lock ID (not lock index)\"},\"returns\":{\"_extendedLockInfo\":\"The LockedBalanceExtended\"}},\"lockedByIndex(address,uint128)\":{\"params\":{\"_addr\":\"User address\",\"_index\":\"User lock index (not lock ID)\"},\"returns\":{\"_amount\":\"The amount locked\",\"_end\":\"The timestamp when the lock expires/ends\"}},\"lockedEnd(address,uint128)\":{\"details\":\"If the emergency unlock is active, the current timestamp is returned. If an external smart contract is using  this function, make sure that it can handle this case.\",\"params\":{\"_addr\":\"User wallet\",\"_index\":\"User lock index\"},\"returns\":{\"_0\":\"Epoch time of the lock end\"}},\"recoverIERC20(address,uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to recover\",\"_tokenAddr\":\"Address of the ERC20 token to recover\"}},\"setFloxContributor(address,bool)\":{\"params\":{\"_floxContributor\":\"Address of a Flox contributor\",\"_isFloxContributor\":\"Boolean indicating if the address is a Flox contributor or not\"}},\"setVePMXUtils(address)\":{\"params\":{\"_vePmxUtilsAddr\":\"Address of the VestedPMXUtils contract\"}},\"supplyAt((int128,int128,uint256,uint256,uint256),uint256)\":{\"details\":\"If `emergencyUnlock` is active, the total PMX supply is returned. If an external smart contract is using  this function, make sure that it can handle this case.\",\"params\":{\"_point\":\"The point (bias/slope) to start search from\",\"_t\":\"Time to calculate the total voting power at\"},\"returns\":{\"_0\":\"Total voting power at that time\"}},\"totalPMXSupply()\":{\"details\":\"Adheres to the ERC20 `totalSupply` interface.\",\"returns\":{\"_0\":\"Total PMX supply\"}},\"totalPMXSupplyAt(uint256)\":{\"params\":{\"_block\":\"Block to calculate the total voting power at\"},\"returns\":{\"_0\":\"Total PMX supply at `_block`\"}},\"totalSupply()\":{\"details\":\"Adheres to the ERC20 `totalSupply` interface for Aragon compatibility\",\"returns\":{\"_0\":\"Total voting power\"}},\"totalSupply(uint256)\":{\"details\":\"Adheres to the ERC20 `totalSupply` interface for Aragon compatibilityIf `emergencyUnlock` is active, the total PMX supply is returned. If an external smart contract is using  this function, make sure that it can handle this case.\",\"params\":{\"_timestamp\":\"Time to calculate the total voting power at (default: block.timestamp)\"},\"returns\":{\"_0\":\"Total voting power\"}},\"totalSupplyAt(uint256)\":{\"details\":\"If `emergencyUnlock` is active, the total PMX supply is returned. If an external smart contract is using  this function, make sure that it can handle this case.\",\"params\":{\"_block\":\"Block to calculate the total voting power at\"},\"returns\":{\"_0\":\"Total voting power at `_block`\"}},\"userPointHistoryTs(address,uint128,uint256)\":{\"params\":{\"_addr\":\"User wallet address\",\"_idx\":\"User epoch number\",\"_lockIndex\":\"Index of the user's lock that is getting measured\"},\"returns\":{\"_0\":\"Timestamp of the checkpoint\"}},\"withdraw(uint128)\":{\"details\":\"Only possible if the lock has expired or if the emergency unlock is active\",\"params\":{\"_lockIndex\":\"Index of the user's lock that is getting withdrawn\"},\"returns\":{\"_value\":\"How much PMX was withdrawn\"}}},\"stateVariables\":{\"MAX_CONTRIBUTOR_LOCKS\":{\"details\":\"If the user already has 8 locks (and some are created by the user), the Flox contributor can still create a new lock\"},\"MAX_USER_LOCKS\":{\"details\":\"If the user already has 8 locks (and some are created by Flox contributors), they can still create a new lock\"},\"MIN_LOCK_AMOUNT\":{\"details\":\"Meant to help prevent rounding issues\"},\"__gap\":{\"details\":\"reserve extra storage for future upgrades\"},\"idsToIndices\":{\"details\":\"Be careful and check isInUse beforehand to avoid index 0 vs null. If in doubt, use getLockIndexById\"}},\"title\":\"Vote Escrowed PMX (vePMX)\",\"version\":1},\"userdoc\":{\"errors\":{\"AdminNotSet()\":[{\"notice\":\"If the admin was never set\"}],\"AdminOnly()\":[{\"notice\":\"Only the admin can call this function\"}],\"CannotMergeLockWithItself()\":[{\"notice\":\"You cannot merge a lock with itself\"}],\"DecimalsExceedMaximumValue()\":[{\"notice\":\"Your veToken cannot have more than 255 decimals\"}],\"EmergencyUnlockActive()\":[{\"notice\":\"If you are in an emergency unlock\"}],\"FutureAdminOnly()\":[{\"notice\":\"Only the future admin can call this function\"}],\"InitializeFailed()\":[{\"notice\":\"Cannot initialize twice\"}],\"InvalidBlockNumber()\":[{\"notice\":\"When you are trying to balanceOfAt for a future block\"}],\"InvalidLockIndex()\":[{\"notice\":\"When the lock index is invalid\"}],\"InvalidTimestamp()\":[{\"notice\":\"When the timestamp is invalid (attempting to backwards extrapolate supplyAt)\"}],\"LockCanOnlyBeUpToFourYears()\":[{\"notice\":\"When you are trying to lock for more than 4 years. See getCreateLockTsBounds()\"}],\"LockDidNotExpire()\":[{\"notice\":\"When you are trying to withdraw before the lock expires\"}],\"LockExpired()\":[{\"notice\":\"If you are trying to extend or add to an already expired lock. Withdraw that lock and create a new one instead\"}],\"LockIDNotInUse()\":[{\"notice\":\"When you call getLockIdByIndex when the ID supplied is not in use\"}],\"MaximumFloxContributorLocksReached()\":[{\"notice\":\"When the operation would cause too many locks to be produced by the Flox contributors\"}],\"MaximumUserLocksReached()\":[{\"notice\":\"When the operation would cause too many locks to be produced by the user\"}],\"MinLockAmount()\":[{\"notice\":\"When you are not locking enough\"}],\"MustBeInAFutureEpochWeek()\":[{\"notice\":\"The new lock end timestamp needs to at least be in the next epoch week. See getCreateLockTsBounds()\"}],\"NoExistingLockFound()\":[{\"notice\":\"No existing lock found when you are trying to depositFor or increaseAmount\"}],\"NotLockingForSelfOrFloxContributor()\":[{\"notice\":\"You can only create a lock for yourself, unless you are a Flox Contributor\"}],\"OperationIsPaused()\":[{\"notice\":\"When the function is paused\"}],\"UnableToRecoverPMX()\":[{\"notice\":\"Admin is specifically not allowed to recover PMX. Users must pull it out themselves after activateEmergencyUnlock is called\"}]},\"events\":{\"ApplyOwnership(address)\":{\"notice\":\"When the new prospective admin accepts being the admin.\"},\"CommitOwnership(address)\":{\"notice\":\"When a new admin is proposed by the existing admin. The prospective new admin will still have to accept via acceptTransferOwnership\"},\"ContractPause(bool)\":{\"notice\":\"When key functions are paused or unpaused\"},\"Deposit(address,address,uint256,uint256,uint128,uint256)\":{\"notice\":\"When a deposit of PMX has occured\"},\"EmergencyUnlockActivated()\":{\"notice\":\"When the emergency unlock is activated\"},\"FloxContributorUpdate(address,bool)\":{\"notice\":\"When an address is set, or unset, as a Flox Contributor\"},\"Supply(uint256,uint256)\":{\"notice\":\"When the vePMX supply changes\"},\"VePmxUtilsContractUpdated(address)\":{\"notice\":\"When the address of a VestedPMXUtils contract is changed\"},\"Withdraw(address,address,uint256,uint256)\":{\"notice\":\"When PMX is withdrawn\"}},\"kind\":\"user\",\"methods\":{\"MAXTIME_INT128()\":{\"notice\":\"Maximum lock time, in int128 seconds\"},\"MAXTIME_UINT256()\":{\"notice\":\"Maximum lock time, in uint256 seconds\"},\"MAX_CONTRIBUTOR_LOCKS()\":{\"notice\":\"The maximum total number of active locks Flox contributors can create for a single user\"},\"MAX_USER_LOCKS()\":{\"notice\":\"The maximum active locks a user can create for themselves\"},\"MIN_LOCK_AMOUNT()\":{\"notice\":\"Minimum size you can createLock or increaseAmount\"},\"MULTIPLIER_UINT256()\":{\"notice\":\"Multiplier used in various math operations\"},\"VOTE_WEIGHT_MULTIPLIER_INT128()\":{\"notice\":\"Vote weight multiplier, in int128\"},\"VOTE_WEIGHT_MULTIPLIER_UINT256()\":{\"notice\":\"Vote weight multiplier, in uint256\"},\"WEEK_UINT128()\":{\"notice\":\"One week, in uint128 seconds\"},\"WEEK_UINT256()\":{\"notice\":\"One week, in uint256 seconds\"},\"acceptTransferOwnership()\":{\"notice\":\"Apply ownership transfer. Only callable by the future admin. Do commitTransferOwnership first\"},\"activateEmergencyUnlock()\":{\"notice\":\"Used to allow early withdrawals of vePMX back into PMX, in case of an emergency. Only users themselves can pull out the PMX, not the admin. Once toggled, cannot be undone as slope/bias math will be permanently off going forward.\"},\"admin()\":{\"notice\":\"Admin of this contract\"},\"balanceOf(address)\":{\"notice\":\"Get current voting power (vePMX) of `_addr`. Uses all locks.\"},\"balanceOfAllLocksAtBlock(address,uint256)\":{\"notice\":\"Measure the total voting power (vePMX) of `_addr` at `_block`.\"},\"balanceOfAllLocksAtTime(address,uint256)\":{\"notice\":\"Get voting power (vePMX) of `_addr` at a specific time.\"},\"balanceOfAt(address,uint256)\":{\"notice\":\"Same as balanceOfAllLocksAtBlock for backwards compatibility. Measures the total voting power (vePMX) of  `_addr` at `_block`.\"},\"balanceOfLockedPmx(address)\":{\"notice\":\"Get the total amount of PMX locked for a user\"},\"balanceOfOneLockAtBlock(address,uint128,uint256)\":{\"notice\":\"Measure voting power (vePMX) of `addr`'s specific lock at block height `_block`\"},\"balanceOfOneLockAtTime(address,uint128,uint256)\":{\"notice\":\"Get the voting power (vePMX) for `addr`'s specific lock at the specified time\"},\"checkpoint()\":{\"notice\":\"Record global data to checkpoint\"},\"commitTransferOwnership(address)\":{\"notice\":\"Transfer ownership of VotingEscrow contract to `addr`\"},\"createLock(address,uint256,uint128)\":{\"notice\":\"Deposit `_value` tokens for `msg.sender` and lock until `_unlockTime`\"},\"depositFor(address,uint256,uint128)\":{\"notice\":\"Deposit `_value` tokens for `_addr` and add to the lock\"},\"emergencyUnlockActive()\":{\"notice\":\"If the emergency unlock is active\"},\"epoch()\":{\"notice\":\"The current epoch you are in.\"},\"findBlockEpoch(uint256,uint256)\":{\"notice\":\"Binary search to estimate timestamp for block number\"},\"findUserTimestampEpoch(address,uint256,uint256)\":{\"notice\":\"Find the latest epoch at a past timestamp\"},\"floxContributors(address)\":{\"notice\":\"If a given address is a Flox Contributor. contributor => isContributor\"},\"futureAdmin()\":{\"notice\":\"Future admin of this contract, if applicable\"},\"getCreateLockTsBounds()\":{\"notice\":\"Get the earliest and latest timestamps createLock can use\"},\"getIncreaseUnlockTimeTsBounds(address,uint256)\":{\"notice\":\"Get the earliest and latest timestamps increaseUnlockTime can use\"},\"getLastUserPoint(address,uint128)\":{\"notice\":\"Get the most recently recorded Point for `_addr`\"},\"getLastUserSlope(address,uint128)\":{\"notice\":\"Get the most recently recorded rate of voting power decrease for `_addr`\"},\"getLockIndexById(address,uint256)\":{\"notice\":\"Get the lock index given a lock id. Reverts if the ID is not in use\"},\"getUserPointAtEpoch(address,uint128,uint256)\":{\"notice\":\"Get the user's Point for `_addr` at the specified epoch\"},\"increaseAmount(uint256,uint128)\":{\"notice\":\"Deposit `_value` additional tokens for `msg.sender`         without modifying the unlock time\"},\"increaseUnlockTime(uint128,uint128)\":{\"notice\":\"Extend the unlock time for `msg.sender` to `_unlockTime`\"},\"indicesToIds(address,uint128)\":{\"notice\":\"Helper function to get a lock ID from a lock index. user -> index -> ID\"},\"initialize(address,address,string,string,string)\":{\"notice\":\"Initialize contract\"},\"isLockCreatedByFloxContributor(address,uint256)\":{\"notice\":\"The indicator of whether a lock was created by a Flox contributor (`true`) or the user (`false`)\"},\"isPaused()\":{\"notice\":\"Whether key functions are paused\"},\"locked(address,uint256)\":{\"notice\":\"Lock info for a given user and lock id. user -> ID -> LockedBalance\"},\"lockedById(address,uint256)\":{\"notice\":\"Get locked amount and ending timestamp for a specific user and lock ID (not lock index). Same as locked()\"},\"lockedByIdExtended(address,uint256)\":{\"notice\":\"Same as lockedById but returns a LockedBalanceExtended struct. Will revert if the ID is not in use\"},\"lockedByIndex(address,uint128)\":{\"notice\":\"Get locked amount and ending timestamp for a specific user and lock index (not lock ID)\"},\"lockedEnd(address,uint128)\":{\"notice\":\"Get timestamp when `_addr`'s lock finishes\"},\"nextId(address)\":{\"notice\":\"The next lock ID to use for a given user. user -> next ID\"},\"numLocks(address)\":{\"notice\":\"The number of locks a user has\"},\"numberOfFloxContributorCreatedLocks(address)\":{\"notice\":\"The number of user's currently active locks created by Flox contributors\"},\"numberOfUserCreatedLocks(address)\":{\"notice\":\"The number of user's currently active locks created by the user\"},\"pointHistory(uint256)\":{\"notice\":\"The contract's Point information at a given epoch. epoch -> Point\"},\"recoverIERC20(address,uint256)\":{\"notice\":\"Used to recover non-PMX ERC20 tokens\"},\"setFloxContributor(address,bool)\":{\"notice\":\"Set the address of a Flox contributor\"},\"setVePMXUtils(address)\":{\"notice\":\"Set the address of a VestedPMXUtils contract\"},\"slopeChanges(uint256)\":{\"notice\":\"Slope changes at a given time. time -> signed slope change\"},\"supply()\":{\"notice\":\"The total PMX supply being locked. NOT the total vePMX. Use totalSupply() for that\"},\"supplyAt((int128,int128,uint256,uint256,uint256),uint256)\":{\"notice\":\"Calculate total voting power at some point in the past\"},\"toggleContractPause()\":{\"notice\":\"Pause/Unpause critical functions\"},\"token()\":{\"notice\":\"The address of the token being staked\"},\"totalPMXSupply()\":{\"notice\":\"Calculates PMX supply of vePMX contract.\"},\"totalPMXSupplyAt(uint256)\":{\"notice\":\"Calculate total PMX at some point in the past\"},\"totalSupply()\":{\"notice\":\"Calculate total voting power at the current time\"},\"totalSupply(uint256)\":{\"notice\":\"Calculate total voting power\"},\"totalSupplyAt(uint256)\":{\"notice\":\"Calculate total voting power at some point in the past\"},\"userPointEpoch(address,uint256)\":{\"notice\":\"A user's epoch for a given lock id. user address -> ID -> user's epoch\"},\"userPointHistory(address,uint256,uint256)\":{\"notice\":\"A user's Point information at a given lock id and epoch. user -> ID -> epoch -> Point\"},\"userPointHistoryTs(address,uint128,uint256)\":{\"notice\":\"Get the timestamp for checkpoint `_idx` for `_addr`\"},\"vePmxUtils()\":{\"notice\":\"The VestedPMXUtils contract with extra helper functions\"},\"withdraw(uint128)\":{\"notice\":\"Withdraw all tokens for `msg.sender`'s lock with the given `_lockIndex`\"}},\"notice\":\"Votes have a weight depending on time, so that users are committed to the future of (whatever they are voting for)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/VestedPMX-and-Flox/VestedPMX/VestedPMX.sol\":\"VestedPMX\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[\":@eth-optimism/=lib/optimism/packages/\",\":@openzeppelin-4/=node_modules/@openzeppelin-4/\",\":@openzeppelin-5/=node_modules/@openzeppelin-5/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@rari-capital/=node_modules/@rari-capital/\",\":clones-with-immutable-args/=lib/optimism/packages/contracts-bedrock/lib/clones-with-immutable-args/src/\",\":ds-test/=lib/frax-standard-solidity/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/frax-standard-solidity/lib/forge-std/src/\",\":frax-standard-solidity/=lib/frax-standard-solidity/src/\",\":frax-std/=lib/frax-standard-solidity/src/\",\":kontrol-cheatcodes/=lib/optimism/packages/contracts-bedrock/lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/optimism/packages/contracts-bedrock/lib/lib-keccak/contracts/\",\":multicall/=lib/optimism/packages/contracts-periphery/lib/multicall/src/\",\":openzeppelin-contracts-upgradeable/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts/\",\":optimism/=lib/optimism/\",\":safe-contracts/=lib/optimism/packages/contracts-bedrock/lib/safe-contracts/contracts/\",\":solady/=lib/optimism/packages/contracts-bedrock/lib/solady/\",\":solidity-bytes-utils/=lib/frax-standard-solidity/lib/solidity-bytes-utils/\",\":solmate/=lib/optimism/packages/contracts-bedrock/lib/solmate/src/\",\":src/=src/\",\"lib/optimism/packages/contracts-bedrock:src/=lib/optimism/packages/contracts-bedrock/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/contracts/VestedPMX-and-Flox/VestedPMX/IvePMXEvents.sol\":{\"keccak256\":\"0x65792c2abd06d05218f50ef73ad51d03e7b0cd7864f520f65b26814914adb5ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d144e9dae51ebee459f84374eec37a67de3aade15adba52f88db02502f1880bd\",\"dweb:/ipfs/QmW4J1CeRuYAqgtwU6vuLLmQK4mxbmZ1W9BhBXPe28vpsw\"]},\"src/contracts/VestedPMX-and-Flox/VestedPMX/IvePMXStructs.sol\":{\"keccak256\":\"0x3fa1793887f16513a1975cd63d75fde129e9ea3a11b71c14a516147a985255c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cec71156d13925be8247914d13af58afa5b6a6419236f02ce946a9ba48af34b\",\"dweb:/ipfs/QmenE7oD6AwVZW6x9Gc3bLSXJiMHNoJwzgzHug1TJT4Wng\"]},\"src/contracts/VestedPMX-and-Flox/VestedPMX/VestedPMX.sol\":{\"keccak256\":\"0xab6101da9bd2c30d76bf7f76efbe596f242491279ef0ca217d568d118f7b593d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://946fd230e82b4a3004b183cc31319f843e5e1b0e53c4402f600f7a1c4785e336\",\"dweb:/ipfs/QmZVpESRXjym718G8g83fgLxtxYREd18sbB9bfDpdQoyc1\"]},\"src/contracts/VestedPMX-and-Flox/VestedPMX/VestedPMXUtils.sol\":{\"keccak256\":\"0xca78f0d2b84392c5332bb3963ded8d3046ef9f4b59e407f390f62d7f22c27e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://609eb025287c15bfe831dbbecf87d490df2a8b4b3e3caafa4f0553aae598a3b9\",\"dweb:/ipfs/QmS8SoMwPgrbDetNykbdA26fKCXunPLXLwRyiBLmYnCD5a\"]},\"src/contracts/VestedPMX-and-Flox/interfaces/IVestedPMX.sol\":{\"keccak256\":\"0x71f93e309c043628939af05883a5193fbd8b531ec78479e78515f9aebea4e29d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d02c949f5cbd552d462b0669b14cc5208174ec26e810f3f98a90f340891a3ec2\",\"dweb:/ipfs/QmZc26gbMwXBxZhXp1hS8NLztQhG7eKoqy3ojxxC6PqNai\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.26+commit.8a97fa7a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AdminNotSet"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AdminOnly"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "CannotMergeLockWithItself"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "DecimalsExceedMaximumValue"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "EmergencyUnlockActive"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "FutureAdminOnly"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InitializeFailed"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidBlockNumber"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidLockIndex"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidTimestamp"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "LockCanOnlyBeUpToFourYears"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "LockDidNotExpire"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "LockExpired"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "LockIDNotInUse"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MaximumFloxContributorLocksReached"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MaximumUserLocksReached"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MinLockAmount"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MustBeInAFutureEpochWeek"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NoExistingLockFound"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotLockingForSelfOrFloxContributor"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "OperationIsPaused"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "UnableToRecoverPMX"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "admin",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ApplyOwnership",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "admin",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "CommitOwnership",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bool",
                            "name": "isPaused",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ContractPause",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "staker",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "payor",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "endingTimestamp",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint128",
                            "name": "depositType",
                            "type": "uint128",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "txTimestamp",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Deposit",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "type": "event",
                    "name": "EmergencyUnlockActivated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "contributor",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bool",
                            "name": "isContributor",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "FloxContributorUpdate",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "prevSupply",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "supply",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Supply",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "vePmxUtilsAddr",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "VePmxUtilsContractUpdated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "staker",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "recipient",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "ts",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Withdraw",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "MAXTIME_INT128",
                    "outputs": [
                        {
                            "internalType": "int128",
                            "name": "",
                            "type": "int128"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "MAXTIME_UINT256",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "MAX_CONTRIBUTOR_LOCKS",
                    "outputs": [
                        {
                            "internalType": "uint8",
                            "name": "",
                            "type": "uint8"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "MAX_USER_LOCKS",
                    "outputs": [
                        {
                            "internalType": "uint8",
                            "name": "",
                            "type": "uint8"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "MIN_LOCK_AMOUNT",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "MULTIPLIER_UINT256",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "VOTE_WEIGHT_MULTIPLIER_INT128",
                    "outputs": [
                        {
                            "internalType": "int128",
                            "name": "",
                            "type": "int128"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "VOTE_WEIGHT_MULTIPLIER_UINT256",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "WEEK_UINT128",
                    "outputs": [
                        {
                            "internalType": "uint128",
                            "name": "",
                            "type": "uint128"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "WEEK_UINT256",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "acceptTransferOwnership"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "activateEmergencyUnlock"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "admin",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "_balance",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_block",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOfAllLocksAtBlock",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "_balance",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_timestamp",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOfAllLocksAtTime",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "_balance",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_block",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOfAt",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "_balance",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOfLockedPmx",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "_balanceOfLockedPmx",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        },
                        {
                            "internalType": "uint128",
                            "name": "_lockIndex",
                            "type": "uint128"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_block",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOfOneLockAtBlock",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "_balance",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        },
                        {
                            "internalType": "uint128",
                            "name": "_lockIndex",
                            "type": "uint128"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_timestamp",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOfOneLockAtTime",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "_balance",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "checkpoint"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "commitTransferOwnership"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_value",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint128",
                            "name": "_unlockTime",
                            "type": "uint128"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "createLock",
                    "outputs": [
                        {
                            "internalType": "uint128",
                            "name": "_index",
                            "type": "uint128"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_newLockId",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "decimals",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_value",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint128",
                            "name": "_lockIndex",
                            "type": "uint128"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "depositFor"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "emergencyUnlockActive",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "epoch",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_block",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_maxEpoch",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "findBlockEpoch",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_lockId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_ts",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "findUserTimestampEpoch",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "_min",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "contributor",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "floxContributors",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "isContributor",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "futureAdmin",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getCreateLockTsBounds",
                    "outputs": [
                        {
                            "internalType": "uint128",
                            "name": "_earliestLockEnd",
                            "type": "uint128"
                        },
                        {
                            "internalType": "uint128",
                            "name": "_latestLockEnd",
                            "type": "uint128"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_user",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_id",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getIncreaseUnlockTimeTsBounds",
                    "outputs": [
                        {
                            "internalType": "uint128",
                            "name": "_earliestLockEnd",
                            "type": "uint128"
                        },
                        {
                            "internalType": "uint128",
                            "name": "_latestLockEnd",
                            "type": "uint128"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getLastGlobalPoint",
                    "outputs": [
                        {
                            "internalType": "struct IvePMXStructs.Point",
                            "name": "_lastPoint",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int128",
                                    "name": "bias",
                                    "type": "int128"
                                },
                                {
                                    "internalType": "int128",
                                    "name": "slope",
                                    "type": "int128"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "ts",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "blk",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "pmxAmt",
                                    "type": "uint256"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        },
                        {
                            "internalType": "uint128",
                            "name": "_lockIndex",
                            "type": "uint128"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getLastUserPoint",
                    "outputs": [
                        {
                            "internalType": "struct IvePMXStructs.Point",
                            "name": "_lastPoint",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int128",
                                    "name": "bias",
                                    "type": "int128"
                                },
                                {
                                    "internalType": "int128",
                                    "name": "slope",
                                    "type": "int128"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "ts",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "blk",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "pmxAmt",
                                    "type": "uint256"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        },
                        {
                            "internalType": "uint128",
                            "name": "_lockIndex",
                            "type": "uint128"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getLastUserSlope",
                    "outputs": [
                        {
                            "internalType": "int128",
                            "name": "",
                            "type": "int128"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_id",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getLockIndexById",
                    "outputs": [
                        {
                            "internalType": "uint128",
                            "name": "_index",
                            "type": "uint128"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        },
                        {
                            "internalType": "uint128",
                            "name": "_lockIndex",
                            "type": "uint128"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_uepoch",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getUserPointAtEpoch",
                    "outputs": [
                        {
                            "internalType": "struct IvePMXStructs.Point",
                            "name": "_lastPoint",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int128",
                                    "name": "bias",
                                    "type": "int128"
                                },
                                {
                                    "internalType": "int128",
                                    "name": "slope",
                                    "type": "int128"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "ts",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "blk",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "pmxAmt",
                                    "type": "uint256"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_value",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint128",
                            "name": "_lockIndex",
                            "type": "uint128"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "increaseAmount"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint128",
                            "name": "_unlockTime",
                            "type": "uint128"
                        },
                        {
                            "internalType": "uint128",
                            "name": "_lockIndex",
                            "type": "uint128"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "increaseUnlockTime"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        },
                        {
                            "internalType": "uint128",
                            "name": "index",
                            "type": "uint128"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "indicesToIds",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_admin",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "_tokenAddr",
                            "type": "address"
                        },
                        {
                            "internalType": "string",
                            "name": "_name",
                            "type": "string"
                        },
                        {
                            "internalType": "string",
                            "name": "_symbol",
                            "type": "string"
                        },
                        {
                            "internalType": "string",
                            "name": "_version",
                            "type": "string"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "initialize"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isLockCreatedByFloxContributor",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "createdByFloxContributor",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isPaused",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "locked",
                    "outputs": [
                        {
                            "internalType": "int128",
                            "name": "amount",
                            "type": "int128"
                        },
                        {
                            "internalType": "uint128",
                            "name": "end",
                            "type": "uint128"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_id",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "lockedById",
                    "outputs": [
                        {
                            "internalType": "int128",
                            "name": "_amount",
                            "type": "int128"
                        },
                        {
                            "internalType": "uint128",
                            "name": "_end",
                            "type": "uint128"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_id",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "lockedByIdExtended",
                    "outputs": [
                        {
                            "internalType": "struct IvePMXStructs.LockedBalanceExtended",
                            "name": "_extendedLockInfo",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "id",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint128",
                                    "name": "index",
                                    "type": "uint128"
                                },
                                {
                                    "internalType": "int128",
                                    "name": "amount",
                                    "type": "int128"
                                },
                                {
                                    "internalType": "uint128",
                                    "name": "end",
                                    "type": "uint128"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        },
                        {
                            "internalType": "uint128",
                            "name": "_index",
                            "type": "uint128"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "lockedByIndex",
                    "outputs": [
                        {
                            "internalType": "int128",
                            "name": "_amount",
                            "type": "int128"
                        },
                        {
                            "internalType": "uint128",
                            "name": "_end",
                            "type": "uint128"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        },
                        {
                            "internalType": "uint128",
                            "name": "_index",
                            "type": "uint128"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "lockedEnd",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "name",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "nextId",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "nextId",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "numLocks",
                    "outputs": [
                        {
                            "internalType": "uint128",
                            "name": "numLocks",
                            "type": "uint128"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "numberOfFloxContributorCreatedLocks",
                    "outputs": [
                        {
                            "internalType": "uint8",
                            "name": "numberOfLocks",
                            "type": "uint8"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "numberOfUserCreatedLocks",
                    "outputs": [
                        {
                            "internalType": "uint8",
                            "name": "numberOfLocks",
                            "type": "uint8"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "epoch",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "pointHistory",
                    "outputs": [
                        {
                            "internalType": "int128",
                            "name": "bias",
                            "type": "int128"
                        },
                        {
                            "internalType": "int128",
                            "name": "slope",
                            "type": "int128"
                        },
                        {
                            "internalType": "uint256",
                            "name": "ts",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "blk",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "pmxAmt",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_tokenAddr",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "recoverIERC20"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_floxContributor",
                            "type": "address"
                        },
                        {
                            "internalType": "bool",
                            "name": "_isFloxContributor",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setFloxContributor"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_vePmxUtilsAddr",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setVePMXUtils"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "time",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "slopeChanges",
                    "outputs": [
                        {
                            "internalType": "int128",
                            "name": "slopeChange",
                            "type": "int128"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "supply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct IvePMXStructs.Point",
                            "name": "_point",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int128",
                                    "name": "bias",
                                    "type": "int128"
                                },
                                {
                                    "internalType": "int128",
                                    "name": "slope",
                                    "type": "int128"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "ts",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "blk",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "pmxAmt",
                                    "type": "uint256"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256",
                            "name": "_t",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "supplyAt",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "symbol",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "toggleContractPause"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "token",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalPMXSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_block",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalPMXSupplyAt",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_timestamp",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_block",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalSupplyAt",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "userPointEpoch",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "epoch",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "epoch",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "userPointHistory",
                    "outputs": [
                        {
                            "internalType": "int128",
                            "name": "bias",
                            "type": "int128"
                        },
                        {
                            "internalType": "int128",
                            "name": "slope",
                            "type": "int128"
                        },
                        {
                            "internalType": "uint256",
                            "name": "ts",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "blk",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "pmxAmt",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        },
                        {
                            "internalType": "uint128",
                            "name": "_lockIndex",
                            "type": "uint128"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_idx",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "userPointHistoryTs",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "vePmxUtils",
                    "outputs": [
                        {
                            "internalType": "contract VestedPMXUtils",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "version",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint128",
                            "name": "_lockIndex",
                            "type": "uint128"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "withdraw",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "_value",
                            "type": "uint256"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "balanceOf(address)": {
                        "details": "If `emergencyUnlock` is active, the PMX locked in all of the `_addr`'s locks is returned. If an external  smart contract is using this function, make sure that it can handle this case.",
                        "params": {
                            "_addr": "Address of the user"
                        },
                        "returns": {
                            "_balance": "Total voting power (vePMX) of the user"
                        }
                    },
                    "balanceOfAllLocksAtBlock(address,uint256)": {
                        "details": "If `emergencyUnlock` is active, the PMX locked in all of the `_addr`'s locks is returned. If an external  smart contract is using this function, make sure that it can handle this case.",
                        "params": {
                            "_addr": "Address of the user",
                            "_block": "Block number at which to measure voting power"
                        },
                        "returns": {
                            "_balance": "Total voting power (vePMX) of the user"
                        }
                    },
                    "balanceOfAllLocksAtTime(address,uint256)": {
                        "details": "If `emergencyUnlock` is active, the PMX locked in all of the `_addr`'s locks is returned. If an external  smart contract is using this function, make sure that it can handle this case.",
                        "params": {
                            "_addr": "Address of the user",
                            "_timestamp": "Epoch time to return the voting power at"
                        },
                        "returns": {
                            "_balance": "Total voting power (vePMX) of the user"
                        }
                    },
                    "balanceOfAt(address,uint256)": {
                        "details": "If `emergencyUnlock` is active, the PMX locked in all of the `_addr`'s locks is returned. If an external  smart contract is using this function, make sure that it can handle this case.",
                        "params": {
                            "_addr": "Address of the user",
                            "_block": "Block number at which to measure voting power"
                        },
                        "returns": {
                            "_balance": "Total voting power (vePMX) of the user"
                        }
                    },
                    "balanceOfLockedPmx(address)": {
                        "params": {
                            "_addr": "User account address"
                        },
                        "returns": {
                            "_balanceOfLockedPmx": "The total amount of PMX locked for the user"
                        }
                    },
                    "balanceOfOneLockAtBlock(address,uint128,uint256)": {
                        "details": "If `emergencyUnlock` is active, the PMX locked in the lock is returned. If an external smart contract is  using this function, make sure that it can handle this case.",
                        "params": {
                            "_addr": "User's wallet address",
                            "_block": "Block to calculate the voting power at",
                            "_lockIndex": "Index of the user's lock that is getting measured"
                        },
                        "returns": {
                            "_balance": "Total voting power (vePMX) of the user"
                        }
                    },
                    "balanceOfOneLockAtTime(address,uint128,uint256)": {
                        "details": "If `emergencyUnlock` is active, the PMX locked in the lock is returned. If an external smart contract is  using this function, make sure that it can handle this case.",
                        "params": {
                            "_addr": "User wallet address",
                            "_lockIndex": "Index of the user's lock that is getting measured",
                            "_timestamp": "Epoch time to return voting power at"
                        },
                        "returns": {
                            "_balance": "Total voting power (vePMX) of the user"
                        }
                    },
                    "commitTransferOwnership(address)": {
                        "params": {
                            "_addr": "Address to have ownership transferred to"
                        }
                    },
                    "createLock(address,uint256,uint128)": {
                        "details": "Users should only be allowed to create locks for themselves, the only exemption being Flow contributors that  can create locks for other users.Flox contributors can only create 8 locks for themselves. Even if they are Flox contributors, they cannot  create contributor locks for themselves.",
                        "params": {
                            "_addr": "Address of the user for which the lock is being created",
                            "_unlockTime": "Epoch time when tokens unlock, rounded down to whole weeks",
                            "_value": "Amount to deposit"
                        },
                        "returns": {
                            "_index": "Index of the user's lock that was created",
                            "_newLockId": "ID of the user's lock that was created"
                        }
                    },
                    "depositFor(address,uint256,uint128)": {
                        "details": "Anyone (even a smart contract) can deposit for someone else, but cannot extend their locktime and deposit for a brand new user",
                        "params": {
                            "_addr": "User's wallet address",
                            "_lockIndex": "Index of the user's lock that the deposit is being made to",
                            "_value": "Amount to add to user's lock"
                        }
                    },
                    "findBlockEpoch(uint256,uint256)": {
                        "params": {
                            "_block": "Block to find",
                            "_maxEpoch": "Don't go beyond this epoch"
                        },
                        "returns": {
                            "_0": "Approximate timestamp for block"
                        }
                    },
                    "findUserTimestampEpoch(address,uint256,uint256)": {
                        "params": {
                            "_addr": "User wallet address",
                            "_lockId": "ID of the user's lock that is getting measured",
                            "_ts": "The timestamp to check at"
                        },
                        "returns": {
                            "_min": "The latest user's epoch assume you traveled back in time to the timestamp"
                        }
                    },
                    "getCreateLockTsBounds()": {
                        "details": "The truncation in these operations is desired",
                        "returns": {
                            "_earliestLockEnd": "Earliest timestamp",
                            "_latestLockEnd": "Latest timestamp"
                        }
                    },
                    "getIncreaseUnlockTimeTsBounds(address,uint256)": {
                        "details": "If this is called in the first week after the lock is created and if the lock duration is for maximum time,  the returned `_latestLockEnd` will be the same as the lock's end time. This will cause the extension of the lock  to revert. If a smart contract is using this function, make sure that it can handle this case.The truncation in these operations is desired",
                        "returns": {
                            "_earliestLockEnd": "Earliest timestamp",
                            "_latestLockEnd": "Latest timestamp"
                        }
                    },
                    "getLastGlobalPoint()": {
                        "returns": {
                            "_lastPoint": "The most recent point for this specific lock index"
                        }
                    },
                    "getLastUserPoint(address,uint128)": {
                        "params": {
                            "_addr": "Address of the user wallet",
                            "_lockIndex": "Index of the user's lock that is getting measured"
                        },
                        "returns": {
                            "_lastPoint": "The most recent point for this specific lock index"
                        }
                    },
                    "getLastUserSlope(address,uint128)": {
                        "params": {
                            "_addr": "Address of the user wallet",
                            "_lockIndex": "Index of the user's lock that is getting measured"
                        },
                        "returns": {
                            "_0": "Value of the slope"
                        }
                    },
                    "getLockIndexById(address,uint256)": {
                        "params": {
                            "_addr": "User address",
                            "_id": "User lock ID (not lock index)"
                        },
                        "returns": {
                            "_index": "The index of the lock"
                        }
                    },
                    "getUserPointAtEpoch(address,uint128,uint256)": {
                        "params": {
                            "_addr": "Address of the user wallet",
                            "_lockIndex": "Index of the user's lock that is getting measured",
                            "_uepoch": "The epoch of the user to get the point at"
                        },
                        "returns": {
                            "_lastPoint": "The most recent point for this specific lock index"
                        }
                    },
                    "increaseAmount(uint256,uint128)": {
                        "params": {
                            "_lockIndex": "Index of the user's lock that getting the increased amount",
                            "_value": "Amount of tokens to deposit and add to the lock"
                        }
                    },
                    "increaseUnlockTime(uint128,uint128)": {
                        "params": {
                            "_lockIndex": "Index of the user's lock that is getting the increased unlock time",
                            "_unlockTime": "New epoch time for unlocking"
                        }
                    },
                    "initialize(address,address,string,string,string)": {
                        "details": "Same values are set to proxy and implementation.",
                        "params": {
                            "_admin": "Initial admin of the smart contract",
                            "_name": "Token name",
                            "_symbol": "Token symbol",
                            "_tokenAddr": "`PMX` token address",
                            "_version": "Contract version - required for Aragon compatibility"
                        }
                    },
                    "lockedById(address,uint256)": {
                        "params": {
                            "_addr": "User address",
                            "_id": "User lock ID (not lock index)"
                        },
                        "returns": {
                            "_amount": "The amount locked",
                            "_end": "The timestamp when the lock expires/ends"
                        }
                    },
                    "lockedByIdExtended(address,uint256)": {
                        "params": {
                            "_addr": "User address",
                            "_id": "User lock ID (not lock index)"
                        },
                        "returns": {
                            "_extendedLockInfo": "The LockedBalanceExtended"
                        }
                    },
                    "lockedByIndex(address,uint128)": {
                        "params": {
                            "_addr": "User address",
                            "_index": "User lock index (not lock ID)"
                        },
                        "returns": {
                            "_amount": "The amount locked",
                            "_end": "The timestamp when the lock expires/ends"
                        }
                    },
                    "lockedEnd(address,uint128)": {
                        "details": "If the emergency unlock is active, the current timestamp is returned. If an external smart contract is using  this function, make sure that it can handle this case.",
                        "params": {
                            "_addr": "User wallet",
                            "_index": "User lock index"
                        },
                        "returns": {
                            "_0": "Epoch time of the lock end"
                        }
                    },
                    "recoverIERC20(address,uint256)": {
                        "params": {
                            "_amount": "Amount of tokens to recover",
                            "_tokenAddr": "Address of the ERC20 token to recover"
                        }
                    },
                    "setFloxContributor(address,bool)": {
                        "params": {
                            "_floxContributor": "Address of a Flox contributor",
                            "_isFloxContributor": "Boolean indicating if the address is a Flox contributor or not"
                        }
                    },
                    "setVePMXUtils(address)": {
                        "params": {
                            "_vePmxUtilsAddr": "Address of the VestedPMXUtils contract"
                        }
                    },
                    "supplyAt((int128,int128,uint256,uint256,uint256),uint256)": {
                        "details": "If `emergencyUnlock` is active, the total PMX supply is returned. If an external smart contract is using  this function, make sure that it can handle this case.",
                        "params": {
                            "_point": "The point (bias/slope) to start search from",
                            "_t": "Time to calculate the total voting power at"
                        },
                        "returns": {
                            "_0": "Total voting power at that time"
                        }
                    },
                    "totalPMXSupply()": {
                        "details": "Adheres to the ERC20 `totalSupply` interface.",
                        "returns": {
                            "_0": "Total PMX supply"
                        }
                    },
                    "totalPMXSupplyAt(uint256)": {
                        "params": {
                            "_block": "Block to calculate the total voting power at"
                        },
                        "returns": {
                            "_0": "Total PMX supply at `_block`"
                        }
                    },
                    "totalSupply()": {
                        "details": "Adheres to the ERC20 `totalSupply` interface for Aragon compatibility",
                        "returns": {
                            "_0": "Total voting power"
                        }
                    },
                    "totalSupply(uint256)": {
                        "details": "Adheres to the ERC20 `totalSupply` interface for Aragon compatibilityIf `emergencyUnlock` is active, the total PMX supply is returned. If an external smart contract is using  this function, make sure that it can handle this case.",
                        "params": {
                            "_timestamp": "Time to calculate the total voting power at (default: block.timestamp)"
                        },
                        "returns": {
                            "_0": "Total voting power"
                        }
                    },
                    "totalSupplyAt(uint256)": {
                        "details": "If `emergencyUnlock` is active, the total PMX supply is returned. If an external smart contract is using  this function, make sure that it can handle this case.",
                        "params": {
                            "_block": "Block to calculate the total voting power at"
                        },
                        "returns": {
                            "_0": "Total voting power at `_block`"
                        }
                    },
                    "userPointHistoryTs(address,uint128,uint256)": {
                        "params": {
                            "_addr": "User wallet address",
                            "_idx": "User epoch number",
                            "_lockIndex": "Index of the user's lock that is getting measured"
                        },
                        "returns": {
                            "_0": "Timestamp of the checkpoint"
                        }
                    },
                    "withdraw(uint128)": {
                        "details": "Only possible if the lock has expired or if the emergency unlock is active",
                        "params": {
                            "_lockIndex": "Index of the user's lock that is getting withdrawn"
                        },
                        "returns": {
                            "_value": "How much PMX was withdrawn"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "MAXTIME_INT128()": {
                        "notice": "Maximum lock time, in int128 seconds"
                    },
                    "MAXTIME_UINT256()": {
                        "notice": "Maximum lock time, in uint256 seconds"
                    },
                    "MAX_CONTRIBUTOR_LOCKS()": {
                        "notice": "The maximum total number of active locks Flox contributors can create for a single user"
                    },
                    "MAX_USER_LOCKS()": {
                        "notice": "The maximum active locks a user can create for themselves"
                    },
                    "MIN_LOCK_AMOUNT()": {
                        "notice": "Minimum size you can createLock or increaseAmount"
                    },
                    "MULTIPLIER_UINT256()": {
                        "notice": "Multiplier used in various math operations"
                    },
                    "VOTE_WEIGHT_MULTIPLIER_INT128()": {
                        "notice": "Vote weight multiplier, in int128"
                    },
                    "VOTE_WEIGHT_MULTIPLIER_UINT256()": {
                        "notice": "Vote weight multiplier, in uint256"
                    },
                    "WEEK_UINT128()": {
                        "notice": "One week, in uint128 seconds"
                    },
                    "WEEK_UINT256()": {
                        "notice": "One week, in uint256 seconds"
                    },
                    "acceptTransferOwnership()": {
                        "notice": "Apply ownership transfer. Only callable by the future admin. Do commitTransferOwnership first"
                    },
                    "activateEmergencyUnlock()": {
                        "notice": "Used to allow early withdrawals of vePMX back into PMX, in case of an emergency. Only users themselves can pull out the PMX, not the admin. Once toggled, cannot be undone as slope/bias math will be permanently off going forward."
                    },
                    "admin()": {
                        "notice": "Admin of this contract"
                    },
                    "balanceOf(address)": {
                        "notice": "Get current voting power (vePMX) of `_addr`. Uses all locks."
                    },
                    "balanceOfAllLocksAtBlock(address,uint256)": {
                        "notice": "Measure the total voting power (vePMX) of `_addr` at `_block`."
                    },
                    "balanceOfAllLocksAtTime(address,uint256)": {
                        "notice": "Get voting power (vePMX) of `_addr` at a specific time."
                    },
                    "balanceOfAt(address,uint256)": {
                        "notice": "Same as balanceOfAllLocksAtBlock for backwards compatibility. Measures the total voting power (vePMX) of  `_addr` at `_block`."
                    },
                    "balanceOfLockedPmx(address)": {
                        "notice": "Get the total amount of PMX locked for a user"
                    },
                    "balanceOfOneLockAtBlock(address,uint128,uint256)": {
                        "notice": "Measure voting power (vePMX) of `addr`'s specific lock at block height `_block`"
                    },
                    "balanceOfOneLockAtTime(address,uint128,uint256)": {
                        "notice": "Get the voting power (vePMX) for `addr`'s specific lock at the specified time"
                    },
                    "checkpoint()": {
                        "notice": "Record global data to checkpoint"
                    },
                    "commitTransferOwnership(address)": {
                        "notice": "Transfer ownership of VotingEscrow contract to `addr`"
                    },
                    "createLock(address,uint256,uint128)": {
                        "notice": "Deposit `_value` tokens for `msg.sender` and lock until `_unlockTime`"
                    },
                    "depositFor(address,uint256,uint128)": {
                        "notice": "Deposit `_value` tokens for `_addr` and add to the lock"
                    },
                    "emergencyUnlockActive()": {
                        "notice": "If the emergency unlock is active"
                    },
                    "epoch()": {
                        "notice": "The current epoch you are in."
                    },
                    "findBlockEpoch(uint256,uint256)": {
                        "notice": "Binary search to estimate timestamp for block number"
                    },
                    "findUserTimestampEpoch(address,uint256,uint256)": {
                        "notice": "Find the latest epoch at a past timestamp"
                    },
                    "floxContributors(address)": {
                        "notice": "If a given address is a Flox Contributor. contributor => isContributor"
                    },
                    "futureAdmin()": {
                        "notice": "Future admin of this contract, if applicable"
                    },
                    "getCreateLockTsBounds()": {
                        "notice": "Get the earliest and latest timestamps createLock can use"
                    },
                    "getIncreaseUnlockTimeTsBounds(address,uint256)": {
                        "notice": "Get the earliest and latest timestamps increaseUnlockTime can use"
                    },
                    "getLastUserPoint(address,uint128)": {
                        "notice": "Get the most recently recorded Point for `_addr`"
                    },
                    "getLastUserSlope(address,uint128)": {
                        "notice": "Get the most recently recorded rate of voting power decrease for `_addr`"
                    },
                    "getLockIndexById(address,uint256)": {
                        "notice": "Get the lock index given a lock id. Reverts if the ID is not in use"
                    },
                    "getUserPointAtEpoch(address,uint128,uint256)": {
                        "notice": "Get the user's Point for `_addr` at the specified epoch"
                    },
                    "increaseAmount(uint256,uint128)": {
                        "notice": "Deposit `_value` additional tokens for `msg.sender`         without modifying the unlock time"
                    },
                    "increaseUnlockTime(uint128,uint128)": {
                        "notice": "Extend the unlock time for `msg.sender` to `_unlockTime`"
                    },
                    "indicesToIds(address,uint128)": {
                        "notice": "Helper function to get a lock ID from a lock index. user -> index -> ID"
                    },
                    "initialize(address,address,string,string,string)": {
                        "notice": "Initialize contract"
                    },
                    "isLockCreatedByFloxContributor(address,uint256)": {
                        "notice": "The indicator of whether a lock was created by a Flox contributor (`true`) or the user (`false`)"
                    },
                    "isPaused()": {
                        "notice": "Whether key functions are paused"
                    },
                    "locked(address,uint256)": {
                        "notice": "Lock info for a given user and lock id. user -> ID -> LockedBalance"
                    },
                    "lockedById(address,uint256)": {
                        "notice": "Get locked amount and ending timestamp for a specific user and lock ID (not lock index). Same as locked()"
                    },
                    "lockedByIdExtended(address,uint256)": {
                        "notice": "Same as lockedById but returns a LockedBalanceExtended struct. Will revert if the ID is not in use"
                    },
                    "lockedByIndex(address,uint128)": {
                        "notice": "Get locked amount and ending timestamp for a specific user and lock index (not lock ID)"
                    },
                    "lockedEnd(address,uint128)": {
                        "notice": "Get timestamp when `_addr`'s lock finishes"
                    },
                    "nextId(address)": {
                        "notice": "The next lock ID to use for a given user. user -> next ID"
                    },
                    "numLocks(address)": {
                        "notice": "The number of locks a user has"
                    },
                    "numberOfFloxContributorCreatedLocks(address)": {
                        "notice": "The number of user's currently active locks created by Flox contributors"
                    },
                    "numberOfUserCreatedLocks(address)": {
                        "notice": "The number of user's currently active locks created by the user"
                    },
                    "pointHistory(uint256)": {
                        "notice": "The contract's Point information at a given epoch. epoch -> Point"
                    },
                    "recoverIERC20(address,uint256)": {
                        "notice": "Used to recover non-PMX ERC20 tokens"
                    },
                    "setFloxContributor(address,bool)": {
                        "notice": "Set the address of a Flox contributor"
                    },
                    "setVePMXUtils(address)": {
                        "notice": "Set the address of a VestedPMXUtils contract"
                    },
                    "slopeChanges(uint256)": {
                        "notice": "Slope changes at a given time. time -> signed slope change"
                    },
                    "supply()": {
                        "notice": "The total PMX supply being locked. NOT the total vePMX. Use totalSupply() for that"
                    },
                    "supplyAt((int128,int128,uint256,uint256,uint256),uint256)": {
                        "notice": "Calculate total voting power at some point in the past"
                    },
                    "toggleContractPause()": {
                        "notice": "Pause/Unpause critical functions"
                    },
                    "token()": {
                        "notice": "The address of the token being staked"
                    },
                    "totalPMXSupply()": {
                        "notice": "Calculates PMX supply of vePMX contract."
                    },
                    "totalPMXSupplyAt(uint256)": {
                        "notice": "Calculate total PMX at some point in the past"
                    },
                    "totalSupply()": {
                        "notice": "Calculate total voting power at the current time"
                    },
                    "totalSupply(uint256)": {
                        "notice": "Calculate total voting power"
                    },
                    "totalSupplyAt(uint256)": {
                        "notice": "Calculate total voting power at some point in the past"
                    },
                    "userPointEpoch(address,uint256)": {
                        "notice": "A user's epoch for a given lock id. user address -> ID -> user's epoch"
                    },
                    "userPointHistory(address,uint256,uint256)": {
                        "notice": "A user's Point information at a given lock id and epoch. user -> ID -> epoch -> Point"
                    },
                    "userPointHistoryTs(address,uint128,uint256)": {
                        "notice": "Get the timestamp for checkpoint `_idx` for `_addr`"
                    },
                    "vePmxUtils()": {
                        "notice": "The VestedPMXUtils contract with extra helper functions"
                    },
                    "withdraw(uint128)": {
                        "notice": "Withdraw all tokens for `msg.sender`'s lock with the given `_lockIndex`"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@eth-optimism/=lib/optimism/packages/",
                "@openzeppelin-4/=node_modules/@openzeppelin-4/",
                "@openzeppelin-5/=node_modules/@openzeppelin-5/",
                "@openzeppelin/=node_modules/@openzeppelin/",
                "@rari-capital/=node_modules/@rari-capital/",
                "clones-with-immutable-args/=lib/optimism/packages/contracts-bedrock/lib/clones-with-immutable-args/src/",
                "ds-test/=lib/frax-standard-solidity/lib/forge-std/lib/ds-test/src/",
                "forge-std/=lib/frax-standard-solidity/lib/forge-std/src/",
                "frax-standard-solidity/=lib/frax-standard-solidity/src/",
                "frax-std/=lib/frax-standard-solidity/src/",
                "kontrol-cheatcodes/=lib/optimism/packages/contracts-bedrock/lib/kontrol-cheatcodes/src/",
                "lib-keccak/=lib/optimism/packages/contracts-bedrock/lib/lib-keccak/contracts/",
                "multicall/=lib/optimism/packages/contracts-periphery/lib/multicall/src/",
                "openzeppelin-contracts-upgradeable/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-upgradeable/",
                "openzeppelin-contracts/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts/",
                "optimism/=lib/optimism/",
                "safe-contracts/=lib/optimism/packages/contracts-bedrock/lib/safe-contracts/contracts/",
                "solady/=lib/optimism/packages/contracts-bedrock/lib/solady/",
                "solidity-bytes-utils/=lib/frax-standard-solidity/lib/solidity-bytes-utils/",
                "solmate/=lib/optimism/packages/contracts-bedrock/lib/solmate/src/",
                "src/=src/",
                "lib/optimism/packages/contracts-bedrock:src/=lib/optimism/packages/contracts-bedrock/src/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 100000
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/contracts/VestedPMX-and-Flox/VestedPMX/VestedPMX.sol": "VestedPMX"
            },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
                "keccak256": "0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935",
                "urls": [
                    "bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2",
                    "dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud"
                ],
                "license": "MIT"
            },
            "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
                "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
                "urls": [
                    "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
                    "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
                ],
                "license": "MIT"
            },
            "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
                "urls": [
                    "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
                    "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
                ],
                "license": "MIT"
            },
            "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
                "keccak256": "0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b",
                "urls": [
                    "bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f",
                    "dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe"
                ],
                "license": "MIT"
            },
            "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
                "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
                "urls": [
                    "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
                    "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
                ],
                "license": "MIT"
            },
            "node_modules/@openzeppelin/contracts/utils/Context.sol": {
                "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
                "urls": [
                    "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
                    "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
                ],
                "license": "MIT"
            },
            "src/contracts/VestedPMX-and-Flox/VestedPMX/IvePMXEvents.sol": {
                "keccak256": "0x65792c2abd06d05218f50ef73ad51d03e7b0cd7864f520f65b26814914adb5ab",
                "urls": [
                    "bzz-raw://d144e9dae51ebee459f84374eec37a67de3aade15adba52f88db02502f1880bd",
                    "dweb:/ipfs/QmW4J1CeRuYAqgtwU6vuLLmQK4mxbmZ1W9BhBXPe28vpsw"
                ],
                "license": "MIT"
            },
            "src/contracts/VestedPMX-and-Flox/VestedPMX/IvePMXStructs.sol": {
                "keccak256": "0x3fa1793887f16513a1975cd63d75fde129e9ea3a11b71c14a516147a985255c5",
                "urls": [
                    "bzz-raw://4cec71156d13925be8247914d13af58afa5b6a6419236f02ce946a9ba48af34b",
                    "dweb:/ipfs/QmenE7oD6AwVZW6x9Gc3bLSXJiMHNoJwzgzHug1TJT4Wng"
                ],
                "license": "MIT"
            },
            "src/contracts/VestedPMX-and-Flox/VestedPMX/VestedPMX.sol": {
                "keccak256": "0xab6101da9bd2c30d76bf7f76efbe596f242491279ef0ca217d568d118f7b593d",
                "urls": [
                    "bzz-raw://946fd230e82b4a3004b183cc31319f843e5e1b0e53c4402f600f7a1c4785e336",
                    "dweb:/ipfs/QmZVpESRXjym718G8g83fgLxtxYREd18sbB9bfDpdQoyc1"
                ],
                "license": "MIT"
            },
            "src/contracts/VestedPMX-and-Flox/VestedPMX/VestedPMXUtils.sol": {
                "keccak256": "0xca78f0d2b84392c5332bb3963ded8d3046ef9f4b59e407f390f62d7f22c27e39",
                "urls": [
                    "bzz-raw://609eb025287c15bfe831dbbecf87d490df2a8b4b3e3caafa4f0553aae598a3b9",
                    "dweb:/ipfs/QmS8SoMwPgrbDetNykbdA26fKCXunPLXLwRyiBLmYnCD5a"
                ],
                "license": "MIT"
            },
            "src/contracts/VestedPMX-and-Flox/interfaces/IVestedPMX.sol": {
                "keccak256": "0x71f93e309c043628939af05883a5193fbd8b531ec78479e78515f9aebea4e29d",
                "urls": [
                    "bzz-raw://d02c949f5cbd552d462b0669b14cc5208174ec26e810f3f98a90f340891a3ec2",
                    "dweb:/ipfs/QmZc26gbMwXBxZhXp1hS8NLztQhG7eKoqy3ojxxC6PqNai"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "id": 69
}