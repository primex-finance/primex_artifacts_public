/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockPyth,
  MockPythInterface,
} from "../../../@pythnetwork/pyth-sdk-solidity/MockPyth";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_validTimePeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_singleUpdateFeeInWei",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientFee",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidArgument",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFreshUpdate",
    type: "error",
  },
  {
    inputs: [],
    name: "PriceFeedNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "PriceFeedNotFoundWithinRange",
    type: "error",
  },
  {
    inputs: [],
    name: "StalePrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sequenceNumber",
        type: "uint64",
      },
    ],
    name: "BatchPriceFeedUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "publishTime",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "int64",
        name: "price",
        type: "int64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "conf",
        type: "uint64",
      },
    ],
    name: "PriceFeedUpdate",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "int64",
        name: "price",
        type: "int64",
      },
      {
        internalType: "uint64",
        name: "conf",
        type: "uint64",
      },
      {
        internalType: "int32",
        name: "expo",
        type: "int32",
      },
      {
        internalType: "int64",
        name: "emaPrice",
        type: "int64",
      },
      {
        internalType: "uint64",
        name: "emaConf",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "publishTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "prevPublishTime",
        type: "uint64",
      },
    ],
    name: "createPriceFeedUpdateData",
    outputs: [
      {
        internalType: "bytes",
        name: "priceFeedData",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getEmaPrice",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "price",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "conf",
            type: "uint64",
          },
          {
            internalType: "int32",
            name: "expo",
            type: "int32",
          },
          {
            internalType: "uint256",
            name: "publishTime",
            type: "uint256",
          },
        ],
        internalType: "struct PythStructs.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "age",
        type: "uint256",
      },
    ],
    name: "getEmaPriceNoOlderThan",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "price",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "conf",
            type: "uint64",
          },
          {
            internalType: "int32",
            name: "expo",
            type: "int32",
          },
          {
            internalType: "uint256",
            name: "publishTime",
            type: "uint256",
          },
        ],
        internalType: "struct PythStructs.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getEmaPriceUnsafe",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "price",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "conf",
            type: "uint64",
          },
          {
            internalType: "int32",
            name: "expo",
            type: "int32",
          },
          {
            internalType: "uint256",
            name: "publishTime",
            type: "uint256",
          },
        ],
        internalType: "struct PythStructs.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "price",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "conf",
            type: "uint64",
          },
          {
            internalType: "int32",
            name: "expo",
            type: "int32",
          },
          {
            internalType: "uint256",
            name: "publishTime",
            type: "uint256",
          },
        ],
        internalType: "struct PythStructs.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "age",
        type: "uint256",
      },
    ],
    name: "getPriceNoOlderThan",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "price",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "conf",
            type: "uint64",
          },
          {
            internalType: "int32",
            name: "expo",
            type: "int32",
          },
          {
            internalType: "uint256",
            name: "publishTime",
            type: "uint256",
          },
        ],
        internalType: "struct PythStructs.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getPriceUnsafe",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "price",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "conf",
            type: "uint64",
          },
          {
            internalType: "int32",
            name: "expo",
            type: "int32",
          },
          {
            internalType: "uint256",
            name: "publishTime",
            type: "uint256",
          },
        ],
        internalType: "struct PythStructs.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "updateData",
        type: "bytes[]",
      },
    ],
    name: "getUpdateFee",
    outputs: [
      {
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getValidTimePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "updateData",
        type: "bytes[]",
      },
      {
        internalType: "bytes32[]",
        name: "priceIds",
        type: "bytes32[]",
      },
      {
        internalType: "uint64",
        name: "minPublishTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "maxPublishTime",
        type: "uint64",
      },
    ],
    name: "parsePriceFeedUpdates",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "int64",
                name: "price",
                type: "int64",
              },
              {
                internalType: "uint64",
                name: "conf",
                type: "uint64",
              },
              {
                internalType: "int32",
                name: "expo",
                type: "int32",
              },
              {
                internalType: "uint256",
                name: "publishTime",
                type: "uint256",
              },
            ],
            internalType: "struct PythStructs.Price",
            name: "price",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "int64",
                name: "price",
                type: "int64",
              },
              {
                internalType: "uint64",
                name: "conf",
                type: "uint64",
              },
              {
                internalType: "int32",
                name: "expo",
                type: "int32",
              },
              {
                internalType: "uint256",
                name: "publishTime",
                type: "uint256",
              },
            ],
            internalType: "struct PythStructs.Price",
            name: "emaPrice",
            type: "tuple",
          },
        ],
        internalType: "struct PythStructs.PriceFeed[]",
        name: "feeds",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "updateData",
        type: "bytes[]",
      },
      {
        internalType: "bytes32[]",
        name: "priceIds",
        type: "bytes32[]",
      },
      {
        internalType: "uint64",
        name: "minPublishTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "maxPublishTime",
        type: "uint64",
      },
    ],
    name: "parsePriceFeedUpdatesUnique",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "int64",
                name: "price",
                type: "int64",
              },
              {
                internalType: "uint64",
                name: "conf",
                type: "uint64",
              },
              {
                internalType: "int32",
                name: "expo",
                type: "int32",
              },
              {
                internalType: "uint256",
                name: "publishTime",
                type: "uint256",
              },
            ],
            internalType: "struct PythStructs.Price",
            name: "price",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "int64",
                name: "price",
                type: "int64",
              },
              {
                internalType: "uint64",
                name: "conf",
                type: "uint64",
              },
              {
                internalType: "int32",
                name: "expo",
                type: "int32",
              },
              {
                internalType: "uint256",
                name: "publishTime",
                type: "uint256",
              },
            ],
            internalType: "struct PythStructs.Price",
            name: "emaPrice",
            type: "tuple",
          },
        ],
        internalType: "struct PythStructs.PriceFeed[]",
        name: "feeds",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "priceFeedExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "queryPriceFeed",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "int64",
                name: "price",
                type: "int64",
              },
              {
                internalType: "uint64",
                name: "conf",
                type: "uint64",
              },
              {
                internalType: "int32",
                name: "expo",
                type: "int32",
              },
              {
                internalType: "uint256",
                name: "publishTime",
                type: "uint256",
              },
            ],
            internalType: "struct PythStructs.Price",
            name: "price",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "int64",
                name: "price",
                type: "int64",
              },
              {
                internalType: "uint64",
                name: "conf",
                type: "uint64",
              },
              {
                internalType: "int32",
                name: "expo",
                type: "int32",
              },
              {
                internalType: "uint256",
                name: "publishTime",
                type: "uint256",
              },
            ],
            internalType: "struct PythStructs.Price",
            name: "emaPrice",
            type: "tuple",
          },
        ],
        internalType: "struct PythStructs.PriceFeed",
        name: "priceFeed",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "updateData",
        type: "bytes[]",
      },
    ],
    name: "updatePriceFeeds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "updateData",
        type: "bytes[]",
      },
      {
        internalType: "bytes32[]",
        name: "priceIds",
        type: "bytes32[]",
      },
      {
        internalType: "uint64[]",
        name: "publishTimes",
        type: "uint64[]",
      },
    ],
    name: "updatePriceFeedsIfNecessary",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461005957601f6111d638819003918201601f19168301916001600160401b0383118484101761005e578084926040948552833981010312610059576020815191015160025560035560405161116190816100758239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60406080815260048036101561001457600080fd5b600091823560e01c90816331d98b3f146109ab5781634716e9c514610729578163711a2e281461070a5781639474f45b146106e357816396834ad3146106a9578163a4ae35e01461068a578163accca7f9146103d0578163b5dcc91114610396578163b5ec02611461035e578163b9256d28146102f7578163caaf43f1146102c7578163d47eed4514610281578163d9b81c3c14610123578163e18910a314610104575063ef9e5e28146100c757600080fd5b60203660031901126101005780356001600160401b0381116100fc576100f9916100f391369101610a0e565b90610f1c565b80f35b8280fd5b5080fd5b8390346101005781600319360112610100576020906003549051908152f35b9050346100fc576101003660031901126100fc57602435928360070b80940361027e57604435906001600160401b039384831680930361010057606435958660030b8097036100fc57608435968760070b80980361027a5760a435908782168092036102765760c435918883168093036102725760e4359389851680950361026e579188999a918460608095846101b8610d6b565b9d8e9d8e8d35905260209e8f8091019485515284510152825101525101528a8a0192835152888351015289825101525101526101f986519585870190610abd565b610140908186015284526101608401958487109087111761025b575084845281855282519182610180850152815b8381106102465750508282016101a00152601f01601f19168101030190f35b80829186016101a08382015191015201610227565b634e487b7160e01b825260419052602490fd5b8680fd5b8580fd5b8480fd5b8380fd5b80fd5b9050823461027e57602036600319011261027e578235906001600160401b03821161027e57506102b96020936102c092369101610a0e565b90506110ea565b9051908152f35b9050823461027e57602036600319011261027e57506102f56102ec6101209335610dd8565b91518092610abd565bf35b50506060366003190112610100576001600160401b03813581811161027a576103239036908401610a0e565b916024358181116102725761033b9036908601610a0e565b9160443590811161026e576100f99561035691369101610a0e565b949093610ca5565b9050823461027e57602036600319011261027e575061038d602092356000526000602052604060002054151590565b90519015158152f35b9050823461027e57602036600319011261027e57506102f56103c76080936103bc610bb4565b506003549035610c21565b915180926109dc565b8391506103dc36610a57565b6103e8859892986110ea565b341061067b576103f783611100565b976104048851998a610b93565b838952601f1961041385611100565b01835b818110610663575050825b848110610439578851806104358c82610ae8565b0390f35b835b87811061047f575b5061044e818b611117565b515161045b828789610c7f565b350361046f5761046a90610c70565b610421565b88516345805f5d60e01b81528b90fd5b61049181898b9d98999a949c9b610e45565b81016101408282031261026e578a8e836104c58f946101206104b76104be928e99610ede565b9301610a43565b948c611117565b528d6060908b8460209284846104db8386611117565b510151015180996104ec8386611117565b515181528086526002938491200154106105a5575b9450509150506105119250611117565b515161051e8d8b8d610c7f565b351461053d575b505061053090610c70565b999798909695949961043b565b6001600160401b039c9a9b939998979c80861691838311159384610598575b508361058c575b505050600003610443576105309085610583848e999a9b959d9c9e611117565b5152908d610525565b161090508d8080610563565b888316101593503861055c565b806105b36105ba9285611117565b5193611117565b51518d528c8352858d20958251875560018701938084015194855195815467ffffffffffffffff60401b95898786850151881b1693878101519560809b8c9663ffffffff60801b966001600160401b0398896001600160601b0360a01b9b8c921b8a169416911617171790550151908c01558460038c01970151978851968854958a0151871b1695890151901b1694169116171717905501519101558a8e38808f818d91610501565b808b60208093610671610d6b565b9201015201610416565b865162976f7560e21b81528990fd5b839034610100576080906102f56103c76106a336610b31565b90610bd9565b9050823461027e57602036600319011261027e57506102f560206106d86080946106d1610bb4565b5035610dd8565b0151915180926109dc565b9050823461027e57602036600319011261027e57506102f5816106d86080946106d1610bb4565b839034610100576080906102f56103c761072336610b31565b90610c21565b83915061073536610a57565b610741859892986110ea565b341061067b5761075083611100565b9761075d8851998a610b93565b838952601f1961076c85611100565b01835b818110610993575050825b84811061078e578851806104358c82610ae8565b835b8781106107c4575b506107a3818b611117565b51516107b0828789610c7f565b350361046f576107bf90610c70565b61077a565b6107d681898b9d98999a949c9b610e45565b81016101408282031261026e576101206107f36107fa9284610ede565b9201610a43565b506108058b88611117565b5289898d606060208a84838361081b8985611117565b51015101519661082b8184611117565b51518d528c8452878d6002938491200154106108dd575b9450509150506108529250611117565b515161085f8c8a8c610c7f565b351461087d575b5061087090610c70565b9997989096959499610790565b6001600160401b039b999a929897969b9080828616111591826108d0575b5050806108c8575b6000036107985761087090856108c0848e999a9b959d9c9e611117565b515290610866565b5060016108a3565b8616101590508d8061089b565b806105b36108eb9285611117565b51518c528b8352858c20958251875560018701938084015194855195815467ffffffffffffffff60401b95898786850151881b1693878101519560809b8c9663ffffffff60801b966001600160401b0398896001600160601b0360a01b9b8c921b8a169416911617171790550151908c01558460038c01970151978851968854958a0151871b1695890151901b169416911617171790550151910155898d8f808a8f80610842565b808b602080936109a1610d6b565b920101520161076f565b9050823461027e57602036600319011261027e57506102f56103c76080936109d1610bb4565b506003549035610bd9565b60608091805160070b84526001600160401b036020820151166020850152604081015160030b60408501520151910152565b9181601f84011215610a3e578235916001600160401b038311610a3e576020808501948460051b010111610a3e57565b600080fd5b35906001600160401b0382168203610a3e57565b6080600319820112610a3e576001600160401b03600435818111610a3e5782610a8291600401610a0e565b9390939260243590838211610a3e57610a9d91600401610a0e565b929092916044358281168103610a3e57916064359081168103610a3e5790565b9060a06040610ae69380518452610adc602082015160208601906109dc565b01519101906109dc565b565b6020908160408183019282815285518094520193019160005b828110610b0f575050505090565b909192938261012082610b256001948951610abd565b01950193929101610b01565b6040906003190112610a3e576004359060243590565b608081019081106001600160401b03821117610b6257604052565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b03821117610b6257604052565b90601f801991011681019081106001600160401b03821117610b6257604052565b60405190610bc182610b47565b60006060838281528260208201528260408201520152565b610bf6602091610be7610bb4565b50610bf0610bb4565b50610dd8565b015190610c07606083015142610c52565b11610c0f5790565b604051630cd5fa0760e11b8152600490fd5b610bf6604091610be7610bb4565b91908203918211610c3c57565b634e487b7160e01b600052601160045260246000fd5b81811115610c675790610c6491610c2f565b90565b610c6491610c2f565b6000198114610c3c5760010190565b9190811015610c8f5760051b0190565b634e487b7160e01b600052603260045260246000fd5b929093858203610d5957600091825b818110610ccd57604051636f162bfd60e11b8152600490fd5b610cef610cdb828488610c7f565b356000526000602052604060002054151590565b158015610d18575b610d0957610d0490610c70565b610cb4565b5050505050610ae69250610f1c565b5060606020610d31610d2b84868a610c7f565b35610dd8565b01510151610d40828a86610c7f565b35906001600160401b0382168092036102725710610cf7565b60405163a9cb9e0d60e01b8152600490fd5b60405190610d7882610b78565b8160008152610d85610bb4565b60208201526040610d94610bb4565b910152565b90604051610da681610b47565b60606001829480548060070b85526001600160401b038160401c16602086015260801c60030b60408501520154910152565b610de0610d6b565b50600081815280602052604081205415610e335760409181528060205220610e2b600360405192610e1084610b78565b80548452610e2060018201610d99565b602085015201610d99565b604082015290565b604051630295d7cd60e31b8152600490fd5b9190811015610c8f5760051b81013590601e1981360301821215610a3e5701908135916001600160401b038311610a3e576020018236038113610a3e579190565b9190826080910312610a3e57604051610e9e81610b47565b809280358060070b8103610a3e578252610eba60208201610a43565b602083015260408101358060030b8103610a3e576040830152606090810135910152565b919061012083820312610a3e576040610d94815192610efc84610b78565b60a0849680358652610f118360208301610e86565b602087015201610e86565b9190610f27816110ea565b34106110d95760005b818110610f9457505090506001546001600160401b0360018183167f943f0e8a16c19895fb87cbeb1a349ed86d7f31923089dd36c1a1ed5e300f267b60408051848152836020820152a101818111610c3c5716906001600160401b03191617600155565b610f9f818386610e45565b810161012082820312610a3e57610fb591610ede565b8051600052602090600082526040600281600020015491838101936060855101518410610ff0575b5050505050610feb90610c70565b610f30565b9082918151600052826000208251968782555190815191600182019485548583015196888401519363ffffffff60801b91876001600160401b039b8c978c6001600160601b0360a01b978867ffffffffffffffff60401b9b8c9460801b8a169616911617921b16171790556060015160028601558960038601930151938451928a8554928d8b890151901b16938d88015160801b169416911617171790556060015190600401558385519616865260070b90850152169082015260607fd06a6b7f4918494b3719217d1802786c1f5112a6c1d88fe2cfec00b4584f6aec91a23880808080610fdd565b60405162976f7560e21b8152600490fd5b600254818102918183041490151715610c3c5790565b6001600160401b038111610b625760051b60200190565b8051821015610c8f5760209160051b01019056fea2646970667358221220486a16779953badbb5da0e234968ffdf2726c93bcf5c8b05f159eb14b4df4b1164736f6c63430008120033";

type MockPythConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockPythConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockPyth__factory extends ContractFactory {
  constructor(...args: MockPythConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _validTimePeriod: BigNumberish,
    _singleUpdateFeeInWei: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _validTimePeriod,
      _singleUpdateFeeInWei,
      overrides || {}
    );
  }
  override deploy(
    _validTimePeriod: BigNumberish,
    _singleUpdateFeeInWei: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _validTimePeriod,
      _singleUpdateFeeInWei,
      overrides || {}
    ) as Promise<
      MockPyth & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockPyth__factory {
    return super.connect(runner) as MockPyth__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPythInterface {
    return new Interface(_abi) as MockPythInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockPyth {
    return new Contract(address, _abi, runner) as unknown as MockPyth;
  }
}
