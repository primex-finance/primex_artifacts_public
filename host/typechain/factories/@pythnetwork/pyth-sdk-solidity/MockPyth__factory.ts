/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockPyth,
  MockPythInterface,
} from "../../../@pythnetwork/pyth-sdk-solidity/MockPyth";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_validTimePeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_singleUpdateFeeInWei",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientFee",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidArgument",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFreshUpdate",
    type: "error",
  },
  {
    inputs: [],
    name: "PriceFeedNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "PriceFeedNotFoundWithinRange",
    type: "error",
  },
  {
    inputs: [],
    name: "StalePrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sequenceNumber",
        type: "uint64",
      },
    ],
    name: "BatchPriceFeedUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "publishTime",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "int64",
        name: "price",
        type: "int64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "conf",
        type: "uint64",
      },
    ],
    name: "PriceFeedUpdate",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "int64",
        name: "price",
        type: "int64",
      },
      {
        internalType: "uint64",
        name: "conf",
        type: "uint64",
      },
      {
        internalType: "int32",
        name: "expo",
        type: "int32",
      },
      {
        internalType: "int64",
        name: "emaPrice",
        type: "int64",
      },
      {
        internalType: "uint64",
        name: "emaConf",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "publishTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "prevPublishTime",
        type: "uint64",
      },
    ],
    name: "createPriceFeedUpdateData",
    outputs: [
      {
        internalType: "bytes",
        name: "priceFeedData",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getEmaPrice",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "price",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "conf",
            type: "uint64",
          },
          {
            internalType: "int32",
            name: "expo",
            type: "int32",
          },
          {
            internalType: "uint256",
            name: "publishTime",
            type: "uint256",
          },
        ],
        internalType: "struct PythStructs.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "age",
        type: "uint256",
      },
    ],
    name: "getEmaPriceNoOlderThan",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "price",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "conf",
            type: "uint64",
          },
          {
            internalType: "int32",
            name: "expo",
            type: "int32",
          },
          {
            internalType: "uint256",
            name: "publishTime",
            type: "uint256",
          },
        ],
        internalType: "struct PythStructs.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getEmaPriceUnsafe",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "price",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "conf",
            type: "uint64",
          },
          {
            internalType: "int32",
            name: "expo",
            type: "int32",
          },
          {
            internalType: "uint256",
            name: "publishTime",
            type: "uint256",
          },
        ],
        internalType: "struct PythStructs.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "price",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "conf",
            type: "uint64",
          },
          {
            internalType: "int32",
            name: "expo",
            type: "int32",
          },
          {
            internalType: "uint256",
            name: "publishTime",
            type: "uint256",
          },
        ],
        internalType: "struct PythStructs.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "age",
        type: "uint256",
      },
    ],
    name: "getPriceNoOlderThan",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "price",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "conf",
            type: "uint64",
          },
          {
            internalType: "int32",
            name: "expo",
            type: "int32",
          },
          {
            internalType: "uint256",
            name: "publishTime",
            type: "uint256",
          },
        ],
        internalType: "struct PythStructs.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getPriceUnsafe",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "price",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "conf",
            type: "uint64",
          },
          {
            internalType: "int32",
            name: "expo",
            type: "int32",
          },
          {
            internalType: "uint256",
            name: "publishTime",
            type: "uint256",
          },
        ],
        internalType: "struct PythStructs.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "updateData",
        type: "bytes[]",
      },
    ],
    name: "getUpdateFee",
    outputs: [
      {
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getValidTimePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "updateData",
        type: "bytes[]",
      },
      {
        internalType: "bytes32[]",
        name: "priceIds",
        type: "bytes32[]",
      },
      {
        internalType: "uint64",
        name: "minPublishTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "maxPublishTime",
        type: "uint64",
      },
    ],
    name: "parsePriceFeedUpdates",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "int64",
                name: "price",
                type: "int64",
              },
              {
                internalType: "uint64",
                name: "conf",
                type: "uint64",
              },
              {
                internalType: "int32",
                name: "expo",
                type: "int32",
              },
              {
                internalType: "uint256",
                name: "publishTime",
                type: "uint256",
              },
            ],
            internalType: "struct PythStructs.Price",
            name: "price",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "int64",
                name: "price",
                type: "int64",
              },
              {
                internalType: "uint64",
                name: "conf",
                type: "uint64",
              },
              {
                internalType: "int32",
                name: "expo",
                type: "int32",
              },
              {
                internalType: "uint256",
                name: "publishTime",
                type: "uint256",
              },
            ],
            internalType: "struct PythStructs.Price",
            name: "emaPrice",
            type: "tuple",
          },
        ],
        internalType: "struct PythStructs.PriceFeed[]",
        name: "feeds",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "updateData",
        type: "bytes[]",
      },
      {
        internalType: "bytes32[]",
        name: "priceIds",
        type: "bytes32[]",
      },
      {
        internalType: "uint64",
        name: "minPublishTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "maxPublishTime",
        type: "uint64",
      },
    ],
    name: "parsePriceFeedUpdatesUnique",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "int64",
                name: "price",
                type: "int64",
              },
              {
                internalType: "uint64",
                name: "conf",
                type: "uint64",
              },
              {
                internalType: "int32",
                name: "expo",
                type: "int32",
              },
              {
                internalType: "uint256",
                name: "publishTime",
                type: "uint256",
              },
            ],
            internalType: "struct PythStructs.Price",
            name: "price",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "int64",
                name: "price",
                type: "int64",
              },
              {
                internalType: "uint64",
                name: "conf",
                type: "uint64",
              },
              {
                internalType: "int32",
                name: "expo",
                type: "int32",
              },
              {
                internalType: "uint256",
                name: "publishTime",
                type: "uint256",
              },
            ],
            internalType: "struct PythStructs.Price",
            name: "emaPrice",
            type: "tuple",
          },
        ],
        internalType: "struct PythStructs.PriceFeed[]",
        name: "feeds",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "priceFeedExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "queryPriceFeed",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "int64",
                name: "price",
                type: "int64",
              },
              {
                internalType: "uint64",
                name: "conf",
                type: "uint64",
              },
              {
                internalType: "int32",
                name: "expo",
                type: "int32",
              },
              {
                internalType: "uint256",
                name: "publishTime",
                type: "uint256",
              },
            ],
            internalType: "struct PythStructs.Price",
            name: "price",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "int64",
                name: "price",
                type: "int64",
              },
              {
                internalType: "uint64",
                name: "conf",
                type: "uint64",
              },
              {
                internalType: "int32",
                name: "expo",
                type: "int32",
              },
              {
                internalType: "uint256",
                name: "publishTime",
                type: "uint256",
              },
            ],
            internalType: "struct PythStructs.Price",
            name: "emaPrice",
            type: "tuple",
          },
        ],
        internalType: "struct PythStructs.PriceFeed",
        name: "priceFeed",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "updateData",
        type: "bytes[]",
      },
    ],
    name: "updatePriceFeeds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "updateData",
        type: "bytes[]",
      },
      {
        internalType: "bytes32[]",
        name: "priceIds",
        type: "bytes32[]",
      },
      {
        internalType: "uint64[]",
        name: "publishTimes",
        type: "uint64[]",
      },
    ],
    name: "updatePriceFeedsIfNecessary",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608034605657601f6111e838819003918201601f19168301916001600160401b03831184841017605b5780849260409485528339810103126056576020815191015160025560035560405161117690816100728239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806331d98b3f146109b65780634716e9c51461071e578063711a2e28146107055780639474f45b146106dc57806396834ad3146106a4578063a4ae35e01461068b578063accca7f9146103b8578063b5dcc91114610381578063b5ec02611461034b578063b9256d28146102d5578063caaf43f1146102a7578063d47eed4514610264578063d9b81c3c1461011a578063e18910a3146100fc5763ef9e5e28146100c157600080fd5b60203660031901126100f7576004356001600160401b0381116100f7576100ef6100f5913690600401610a12565b90610efe565b005b600080fd5b346100f75760003660031901126100f7576020600354604051908152f35b346100f7576101003660031901126100f7576024358060070b8091036100f757604435906001600160401b0382168092036100f7576064358060030b8091036100f757608435918260070b8093036100f75760a435926001600160401b0384168094036100f75760c435926001600160401b0384168094036100f75760e435946001600160401b0386168096036100f75784606080956101b8610d1d565b996004358b5260208b01918251526020825101528460408251015251015260408701928351526020835101526040825101525101526101fe604051926020840190610ace565b610140820152610140815261021561016082610ba0565b60405190602082528181519182602083015260005b83811061024c5750508160006040809484010152601f80199101168101030190f35b6020828201810151604087840101528593500161022a565b346100f75760203660031901126100f7576004356001600160401b0381116100f75761029f6102996020923690600401610a12565b90610dfa565b604051908152f35b346100f75760203660031901126100f7576101206102c6600435610d8a565b6102d36040518092610ace565bf35b60603660031901126100f7576004356001600160401b0381116100f757610300903690600401610a12565b6024356001600160401b0381116100f75761031f903690600401610a12565b60443593916001600160401b0385116100f7576103436100f5953690600401610a12565b949093610c61565b346100f75760203660031901126100f75760206103776004356000526000602052604060002054151590565b6040519015158152f35b346100f75760203660031901126100f75761039a610bc1565b5060806103ab600354600435610be6565b6102d360405180926109e0565b6103c136610a56565b9394909291906103d18682610dfa565b341061067b576103e0826110ea565b946103ee6040519687610ba0565b828652601f196103fd846110ea565b0160005b81811061066457505060005b83811061042657604051806104228982610af9565b0390f35b60005b888110610468575b5061043c8188611101565b5151610449828688610c3b565b35036104575760010161040d565b6345805f5d60e01b60005260046000fd5b610479818a869a979899949a610e27565b8101610140828203126100f75761012061049661049d9284610ec0565b9201610a42565b906104a88a88611101565b52606060206104b78b89611101565b5101510151906104c78a88611101565b515160005260006020528160026040600020015410610583575b6104eb8a88611101565b51516104f88b8a8c610c3b565b351461050f575b5094979196959450600101610429565b6001600160401b03849998979a94169082821115928361056f575b508261055c575b50506000036104315797600182996000610551858c999a9c9b969b611101565b5152919998976104ff565b6001600160401b03161090508a80610531565b6001600160401b038716101592508c61052a565b61058d8a88611101565b516105988b89611101565b51516000526000602052600460606040600020928051845581600185016020830151908151815467ffffffffffffffff60401b602085015160401b16906001600160401b03604086015160801b63ffffffff60801b169316906001600160601b0360a01b16171717905501516002850155604060038501910151908151815467ffffffffffffffff60401b602085015160401b16906001600160401b03604086015160801b63ffffffff60801b169316906001600160601b0360a01b16171717905501519101556104e1565b60209061066f610d1d565b82828b01015201610401565b62976f7560e21b60005260046000fd5b346100f75760806103ab61069e36610b3e565b90610c2d565b346100f75760203660031901126100f7576106bd610bc1565b50608060206106cd600435610d8a565b01516102d360405180926109e0565b346100f75760203660031901126100f7576106f5610bc1565b50608060406106cd600435610d8a565b346100f75760806103ab61071836610b3e565b90610be6565b61072736610a56565b9394909291906107378682610dfa565b341061067b57610746826110ea565b946107546040519687610ba0565b828652601f19610763846110ea565b0160005b81811061099f57505060005b83811061078857604051806104228982610af9565b60005b8881106107b9575b5061079e8188611101565b51516107ab828688610c3b565b350361045757600101610773565b6107ca818a869a979899949a610e27565b8101610140828203126100f7576101206104966107e79284610ec0565b506107f28987611101565b52606060206108018a88611101565b51015101516108108987611101565b5151600052600060205280600260406000200154106108be575b6108348987611101565b51516108418a898b610c3b565b3514610857575b5093969095949360010161078b565b806001600160401b03849998979a9416111590816108aa575b50806108a2575b6000036107935797600182996000610895858c999a9c9b969b611101565b5152919950979697610848565b506001610877565b90506001600160401b03841610158a610870565b6108c88987611101565b516108d38a88611101565b51516000526000602052600460606040600020928051845581600185016020830151908151815467ffffffffffffffff60401b602085015160401b16906001600160401b03604086015160801b63ffffffff60801b169316906001600160601b0360a01b16171717905501516002850155604060038501910151908151815467ffffffffffffffff60401b602085015160401b16906001600160401b03604086015160801b63ffffffff60801b169316906001600160601b0360a01b161717179055015191015561082a565b6020906109aa610d1d565b82828b01015201610767565b346100f75760203660031901126100f7576109cf610bc1565b5060806103ab600354600435610c2d565b60608091805160070b84526001600160401b036020820151166020850152604081015160030b60408501520151910152565b9181601f840112156100f7578235916001600160401b0383116100f7576020808501948460051b0101116100f757565b35906001600160401b03821682036100f757565b60806003198201126100f7576004356001600160401b0381116100f75781610a8091600401610a12565b92909291602435906001600160401b0382116100f757610aa291600401610a12565b90916044356001600160401b03811681036100f757906064356001600160401b03811681036100f75790565b9060a06040610af79380518452610aed602082015160208601906109e0565b01519101906109e0565b565b602060408183019282815284518094520192019060005b818110610b1d5750505090565b909192602061012082610b336001948851610ace565b019401929101610b10565b60409060031901126100f7576004359060243590565b608081019081106001600160401b03821117610b6f57604052565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b03821117610b6f57604052565b90601f801991011681019081106001600160401b03821117610b6f57604052565b60405190610bce82610b54565b60006060838281528260208201528260408201520152565b610c03604091610bf4610bc1565b50610bfd610bc1565b50610d8a565b015190610c14606083015142611122565b11610c1c5790565b630cd5fa0760e11b60005260046000fd5b610c03602091610bf4610bc1565b9190811015610c4b5760051b0190565b634e487b7160e01b600052603260045260246000fd5b92939093858103610d0c5760005b818110610c8757636f162bfd60e11b60005260046000fd5b610ca9610c95828487610c3b565b356000526000602052604060002054151590565b158015610ccb575b610cbd57600101610c6f565b50505050610af79250610efe565b5060606020610ce4610cde848689610c3b565b35610d8a565b01510151610cf3828986610c3b565b35906001600160401b0382168092036100f75710610cb1565b63a9cb9e0d60e01b60005260046000fd5b60405190610d2a82610b85565b8160008152610d37610bc1565b60208201526040610d46610bc1565b910152565b90604051610d5881610b54565b60606001829480548060070b85526001600160401b038160401c16602086015260801c60030b60408501520154910152565b610d92610d1d565b5080600052600060205260406000205415610de95760005260006020526040600020610de1600360405192610dc684610b85565b80548452610dd660018201610d4b565b602085015201610d4b565b604082015290565b630295d7cd60e31b60005260046000fd5b50600254818102918183041490151715610e115790565b634e487b7160e01b600052601160045260246000fd5b9190811015610c4b5760051b81013590601e19813603018212156100f75701908135916001600160401b0383116100f75760200182360381136100f7579190565b91908260809103126100f757604051610e8081610b54565b809280358060070b81036100f7578252610e9c60208201610a42565b602083015260408101358060030b81036100f7576040830152606090810135910152565b9190610120838203126100f7576040610d46815192610ede84610b85565b60a0849680358652610ef38360208301610e68565b602087015201610e68565b9190610f0a8184610dfa565b341061067b5760005b818110610f85575050905060015460016001600160401b0382167f943f0e8a16c19895fb87cbeb1a349ed86d7f31923089dd36c1a1ed5e300f267b60408051848152836020820152a1016001600160401b038111610e11576001600160401b0316906001600160401b03191617600155565b610f90818386610e27565b81019190610120818403126100f757600192610fab91610ec0565b80516000526000602052600260406000200154602082016060815101518210610fd8575b50505001610f13565b7fd06a6b7f4918494b3719217d1802786c1f5112a6c1d88fe2cfec00b4584f6aec91606091845160005260006020526001600160401b036040600020958051968781556004868b8301955193845196805497602087019867ffffffffffffffff60401b8a5160401b16908960408a015160801b63ffffffff60801b169316906001600160601b0360a01b161717179055818501516002850155604060038501910151908151815467ffffffffffffffff60401b602085015160401b169089604086015160801b63ffffffff60801b169316906001600160601b0360a01b16171717905501519101555160070b915116906001600160401b036040519316835260208301526040820152a2388080610fcf565b6001600160401b038111610b6f5760051b60200190565b8051821015610c4b5760209160051b010190565b91908203918211610e1157565b81811115611137579061113491611115565b90565b6111349161111556fea26469706673582212205ff0a957845ff020745cd36a0f59c3ee3711c23e2e0aa62a258fb8f53f6463f264736f6c634300081a0033";

type MockPythConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockPythConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockPyth__factory extends ContractFactory {
  constructor(...args: MockPythConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _validTimePeriod: BigNumberish,
    _singleUpdateFeeInWei: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _validTimePeriod,
      _singleUpdateFeeInWei,
      overrides || {}
    );
  }
  override deploy(
    _validTimePeriod: BigNumberish,
    _singleUpdateFeeInWei: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _validTimePeriod,
      _singleUpdateFeeInWei,
      overrides || {}
    ) as Promise<
      MockPyth & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockPyth__factory {
    return super.connect(runner) as MockPyth__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPythInterface {
    return new Interface(_abi) as MockPythInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockPyth {
    return new Contract(address, _abi, runner) as unknown as MockPyth;
  }
}
