/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PrimexProxyAdmin,
  PrimexProxyAdminInterface,
} from "../../contracts/PrimexProxyAdmin";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract UpgradeableBeacon",
        name: "beacon",
        type: "address",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeBeaconProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract UpgradeableBeacon",
        name: "beacon",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "upgradeBeacon",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0806040523461011f57602081610afc803803809161001f8285610124565b83398101031261011f57516001600160a01b03811680820361011f5760206024916100493361015d565b6100523061015d565b6040516301ffc9a760e01b8152637965db0b60e01b600482015292839182905afa908115610113576000916100d1575b50156100bf5760805260405161095790816101a582396080518181816102060152818161033f01528181610442015281816105ab01526106850152f35b60405163044aa57560e41b8152600490fd5b6020813d60201161010b575b816100ea60209383610124565b810103126101075751908115158203610104575038610082565b80fd5b5080fd5b3d91506100dd565b6040513d6000823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761014757604052565b634e487b7160e01b600052604160045260246000fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe608080604052600436101561001357600080fd5b60009081803560e01c918263204e1c7a1461070e5750508063715018a6146106b45780637b1039991461066f5780637eff275e14610567578063848bf918146105585780638da5cb5b146105315780639623609d146103a857806399a88ec4146102fb578063edf57887146101d5578063f2fde38b1461010f5763f3b7dead1461009c57600080fd5b3461010c57602036600319011261010c57808060046001600160a01b036100c161074e565b6040516303e1469160e61b815291165afa6100da610809565b90156101085780516020916001600160a01b03916100ff919081018401908401610839565b16604051908152f35b5080fd5b80fd5b503461010c57602036600319011261010c5761012961074e565b6101316108c9565b6001600160a01b031680156101815781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461010c576101e43661077f565b604051632474521560e21b8152600481018490523360248201526020816044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156102f05784916102c1575b50156102af5782916001600160a01b031690813b156102ab5760405163f2fde38b60e01b81526001600160a01b0390911660048201529082908290602490829084905af180156102a05761028f5750f35b81610299916107b5565b61010c5780f35b6040513d84823e3d90fd5b5050fd5b60405163036be76f60e61b8152600490fd5b6102e3915060203d6020116102e9575b6102db81836107b5565b810190610858565b3861023e565b503d6102d1565b6040513d86823e3d90fd5b503461010c57604036600319011261010c5761031561074e565b61031d610769565b604051632474521560e21b8152600481018490523360248201526020816044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156102f0578491610389575b50156102af5761038691610870565b80f35b6103a2915060203d6020116102e9576102db81836107b5565b38610377565b50606036600319011261010c576103bd61074e565b906103c6610769565b6044359267ffffffffffffffff841161050a573660238501121561050a5783600401356103f2816107ed565b9461040060405196876107b5565b818652366024838301011161052d578185926024602093018389013786010152604051632474521560e21b8152600481018490523360248201526020816044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156102f057849161050e575b50156102af576001600160a01b0316803b1561050a576040805163278f794360e11b81526001600160a01b0390931660048401526024830152835160448301819052835b8181106104f457848085818187816064818a86838284010152601f8019910116810103019134905af180156102a05761028f5750f35b80602080928801015160648287010152016104be565b8280fd5b610527915060203d6020116102e9576102db81836107b5565b3861047a565b8480fd5b503461010c578060031936011261010c57546040516001600160a01b039091168152602090f35b503461010c5761031d3661077f565b503461010c57604036600319011261010c5761058161074e565b610589610769565b604051632474521560e21b8152600481018490523360248201526020816044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156102f0578491610650575b50156102af5782916001600160a01b031690813b156102ab576040516308f2839760e41b81526001600160a01b039091166004820152919081908390602490829084905af18015610643576106355780f35b61063e916107b5565b388180f35b50604051903d90823e3d90fd5b610669915060203d6020116102e9576102db81836107b5565b386105e3565b503461010c578060031936011261010c576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461010c578060031936011261010c576106cd6108c9565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b81903461074b57602036600319011261074b5781906004906001600160a01b0361073661074e565b635c60da1b60e01b8352165afa6100da610809565b50fd5b600435906001600160a01b038216820361076457565b600080fd5b602435906001600160a01b038216820361076457565b6040906003190112610764576004356001600160a01b038116810361076457906024356001600160a01b03811681036107645790565b90601f8019910116810190811067ffffffffffffffff8211176107d757604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116107d757601f01601f191660200190565b3d15610834573d9061081a826107ed565b9161082860405193846107b5565b82523d6000602084013e565b606090565b9081602091031261076457516001600160a01b03811681036107645790565b90816020910312610764575180151581036107645790565b6001600160a01b031690813b1561076457604051631b2ce7f360e11b81526001600160a01b03909116600482015260009182908290602490829084905af180156102a0576108bc575050565b816108c6916107b5565b50565b6000546001600160a01b031633036108dd57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea26469706673582212207d10d638bed506cad95d2f4efc6232eeee29ce174ba94718957eb99336a64b7764736f6c634300081a0033";

type PrimexProxyAdminConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrimexProxyAdminConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrimexProxyAdmin__factory extends ContractFactory {
  constructor(...args: PrimexProxyAdminConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_registry, overrides || {});
  }
  override deploy(
    _registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_registry, overrides || {}) as Promise<
      PrimexProxyAdmin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrimexProxyAdmin__factory {
    return super.connect(runner) as PrimexProxyAdmin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrimexProxyAdminInterface {
    return new Interface(_abi) as PrimexProxyAdminInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrimexProxyAdmin {
    return new Contract(address, _abi, runner) as unknown as PrimexProxyAdmin;
  }
}
