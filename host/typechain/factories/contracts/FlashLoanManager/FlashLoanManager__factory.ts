/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FlashLoanManager,
  FlashLoanManagerInterface,
} from "../../../contracts/FlashLoanManager/FlashLoanManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "flashLoanFeeRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "flashLoanProtocolRate",
        type: "uint256",
      },
    ],
    name: "ChangedFlashLoanRates",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "flashLoanFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "flashLoanProtocolFee",
        type: "uint256",
      },
    ],
    name: "FlashLoan",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "buckets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "flashLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "flashLoanFeeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "flashLoanProtocolRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_primexDNS",
        type: "address",
      },
      {
        internalType: "address",
        name: "_whiteBlackList",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_flashLoanFeeRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_flashLoanProtocolRate",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "primexDNS",
    outputs: [
      {
        internalType: "contract IPrimexDNS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFlashLoanFeeRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newFlashLoanProtocolRate",
        type: "uint256",
      },
    ],
    name: "setFlashLoanRates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "whiteBlackList",
    outputs: [
      {
        internalType: "contract IWhiteBlackList",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460bd576000549060ff8260081c16606b575060ff808216036031575b60405161150990816100c38239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a1386022565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146111c2575080633451a8be146111a45780633f4a2d271461117b5780633f4ba83a146110695780635c38449e146105895780635c975abb1461056657806373ead27b146104de5780637b103999146104b55780638456cb59146103cb5780638c9f305f146103ad578063a6b63eb8146100d15763ef379d17146100a357600080fd5b346100cc5760003660031901126100cc5760cb546040516001600160a01b039091168152602090f35b600080fd5b346100cc5760a03660031901126100cc576100ea611215565b6024356001600160a01b038116908190036100cc576044356001600160a01b038116908190036100cc576000549260ff8460081c1615938480956103a0575b8015610389575b1561032d5760ff1981166001176000558461031b575b506040516301ffc9a760e01b8152637965db0b60e01b60048201526001600160a01b03919091169190602081602481865afa908115610298576000916102fc575b50806102a4575b80610230575b1561021e576001600160601b0360a01b60cb54161760cb556001600160601b0360a01b60c954161760c9556001600160601b0360a01b60ca54161760ca556101e0608435606435611456565b6101e657005b61ff0019600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b60405163044aa57560e41b8152600490fd5b506040516301ffc9a760e01b8152633df6cef760e01b6004820152602081602481855afa90811561029857600091610269575b50610194565b61028b915060203d602011610291575b610283818361125c565b810190611294565b85610263565b503d610279565b6040513d6000823e3d90fd5b506040516301ffc9a760e01b815263fa6ab0ef60e01b6004820152602081602481875afa908115610298576000916102dd575b5061018e565b6102f6915060203d60201161029157610283818361125c565b856102d7565b610315915060203d60201161029157610283818361125c565b85610187565b61ffff19166101011760005584610146565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156101305750600160ff821614610130565b50600160ff821610610129565b346100cc5760003660031901126100cc57602060cc54604051908152f35b346100cc5760003660031901126100cc5760c954604051632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb600482015233602482015290602090829060449082906001600160a01b03165afa90811561029857600091610496575b50156104845761044b61137b565b600160ff1960655416176065557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b60405163036be76f60e61b8152600490fd5b6104af915060203d60201161029157610283818361125c565b8161043d565b346100cc5760003660031901126100cc5760c9546040516001600160a01b039091168152602090f35b346100cc5760403660031901126100cc5760c954604051632474521560e21b81526000600482015233602482015290602090829060449082906001600160a01b03165afa90811561029857600091610547575b501561048457610545602435600435611456565b005b610560915060203d60201161029157610283818361125c565b81610531565b346100cc5760003660031901126100cc57602060ff606554166040519015158152f35b346100cc5760803660031901126100cc576105a2611215565b60243567ffffffffffffffff81116100cc576105c290369060040161122b565b60443567ffffffffffffffff81116100cc576105e290369060040161122b565b93909160643567ffffffffffffffff81116100cc57366023820112156100cc5780600401359267ffffffffffffffff84116100cc5736602485840101116100cc5760026001541461102457600260015560cb54604051630723eb0360e51b815233600482015290602090829060249082906001600160a01b03165afa90811561029857600091611005575b50610ff35761067a61137b565b868303610fe15760018311610f75575b60c954604051632474521560e21b81527f7e2a91ef38c2037926294fa16deeaecad0fca6564c0df8ae38e5b0fe42d5cad9600482015233602482015293929190602090859060449082906001600160a01b03165afa93841561029857600094610f54575b506106f8836112ac565b97610706604051998a61125c565b838952610712846112ac565b601f19013660208b0137610725846112c4565b9561072f856112c4565b6001600160a01b0384169690949060005b878110610ba757505060405191632483d72160e21b83528b60a4840160a060048601528151809152602060c4860192019060005b818110610b88575050508381036003190160248501528481526001600160fb1b0385116100cc579083918560051b90818d60208301370192604060208501946003196020868303010160448601528c51809652019360208c019060005b818110610b6f575050506020938285936024869433606487015260031986860301608487015282855201858401376000848284010152601f80199101160103018160008a5af190811561029857600091610b50575b5015610b3e57929673__$183737d697d7aa9b5df9988cbe11bc4947$__939060005b8981106108555760018055005b6001600160a01b0361087061086b838d866112f6565b61131c565b16906001600160a01b03610884828e611367565b511661089182868d6112f6565b3561089c838c611367565b516108a7848a611367565b51906108b560cd54826113bf565b9182820390828211610b285781850190818611610b2857883b156100cc57604051926312ca6d3160e21b845260048401526024830152600082604481838c5af19081156102985761094d92602092610b17575b506040516336b4849f60e11b81526001600160a01b038089166004830152808e1660248301528a16604482015260648101919091529182908e90829081906084820190565b03915af4801561029857600090610ae7575b505060ca546040516361d027b360e01b815290602090829060049082906001600160a01b03165afa9081156102985783918d91600091610aa1575b506040516336b4849f60e11b81526001600160a01b038089166004830152808e1660248301529091166044820152606481019290925260209082908180608481015b03915af4801561029857600090610a6e575b5050853b156100cc5760008096600460405180998193630f0e087d60e21b83525af195861561029857600196610a5d575b5060405192835260208301526040820152897fc58f35ca649f2ebaf8f1189e10cb3c07d7255c417018d4002ad6dceb86d27e7460603393a401610848565b6000610a689161125c565b38610a1f565b6020823d8211610a99575b81610a866020938361125c565b81010312610a96575051386109ee565b80fd5b3d9150610a79565b925090506020823d8211610adf575b81610abd6020938361125c565b81010312610a9657506020838d610ad66109dc94611353565b9193509161099a565b3d9150610ab0565b6020823d8211610b0f575b81610aff6020938361125c565b81010312610a965750513861095f565b3d9150610af2565b6000610b229161125c565b38610908565b634e487b7160e01b600052601160045260246000fd5b604051633ff5379b60e11b8152600490fd5b610b69915060203d60201161029157610283818361125c565b8a610826565b82518752602096870196889650909201916001016107d1565b82516001600160a01b0316845260209384019390920191600101610774565b8b610bbd61086b838b60018060a01b03946112f6565b169060018060a01b0360ca54166040516306fdde0360e01b8152600081600481875afa90811561029857600091610ea9575b50608090604492604051809481809463481d98fb60e11b825260206004830152610c288151809281602486015260208686019101611330565b601f01601f191681010301915afa90811561029857828f8c906000938495610e4b575b509161086b91610c5a936112f6565b6001600160a01b03918216911603610e39576003811015610e2357600103610e115760405163011ddaef60e71b8152602081600481865afa908115610298578f908390600093610dc5575b506001600160a01b0390921691610cbb91611367565b52858c828515610da95750505060005b610cd5828d611367565b52604051637437535960e01b8152602081600481865afa90811561029857878e8b938593600091610d69575b50610d0f84610d1596611367565b526112f6565b35823b156100cc5760009060448c83604051968794859363bf629cb560e01b8552600485015260248401525af191821561029857600192610d58575b5001610740565b6000610d639161125c565b8e610d51565b9450925050506020823d8211610da1575b81610d876020938361125c565b81010312610a965750518890829088908f90610d0f610d01565b3d9150610d7a565b610dc092610db6926112f6565b3560cc54906113bf565b610ccb565b9150506020813d8211610e09575b81610de06020938361125c565b81010312610e055751906001600160a01b0382168203610a9657508e82610cbb610ca5565b5080fd5b3d9150610dd3565b60405163d42bba7f60e01b8152600490fd5b634e487b7160e01b600052602160045260246000fd5b604051636f2f995760e01b8152600490fd5b9394505050506080813d8211610ea1575b81610e696080938361125c565b81010312610e05576020610e7c82611353565b910151916003831015610a96575090610c5a8f92848d61086b92949591935091610c4b565b3d9150610e5c565b903d8082843e610eb9818461125c565b820191602081840312610e055780519067ffffffffffffffff8211610f50570182601f82011215610e055780519167ffffffffffffffff8311610f3c5760405193610f0e601f8501601f19166020018661125c565b83855260208484010111610a96575091610f346044949260809460208085019101611330565b915091610bef565b634e487b7160e01b81526041600452602490fd5b8280fd5b610f6e91945060203d60201161029157610283818361125c565b92886106ee565b60015b838110610f85575061068a565b6000198101818111610b285761086b610f9f91868a6112f6565b6001600160a01b03610fb561086b84888c6112f6565b166001600160a01b039091161015610fcf57600101610f78565b604051634930cce560e11b8152600490fd5b6040516373dea5e360e01b8152600490fd5b6040516333df015b60e01b8152600490fd5b61101e915060203d60201161029157610283818361125c565b8861066d565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b346100cc5760003660031901126100cc5760c954604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8600482015233602482015290602090829060449082906001600160a01b03165afa9081156102985760009161115c575b50156104845760655460ff8116156111205760ff19166065557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b611175915060203d60201161029157610283818361125c565b816110db565b346100cc5760003660031901126100cc5760ca546040516001600160a01b039091168152602090f35b346100cc5760003660031901126100cc57602060cd54604051908152f35b346100cc5760203660031901126100cc576004359063ffffffff60e01b82168092036100cc57602091638964a85d60e01b8114908115611204575b5015158152f35b6301ffc9a760e01b149050836111fd565b600435906001600160a01b03821682036100cc57565b9181601f840112156100cc5782359167ffffffffffffffff83116100cc576020808501948460051b0101116100cc57565b90601f8019910116810190811067ffffffffffffffff82111761127e57604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126100cc575180151581036100cc5790565b67ffffffffffffffff811161127e5760051b60200190565b906112ce826112ac565b6112db604051918261125c565b82815280926112ec601f19916112ac565b0190602036910137565b91908110156113065760051b0190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b03811681036100cc5790565b60005b8381106113435750506000910152565b8181015183820152602001611333565b51906001600160a01b03821682036100cc57565b80518210156113065760209160051b010190565b60ff6065541661138757565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b90600091811591821561141d575b50501561140c576706f05b59d3b20000810190818111610b285781106113fb57670de0b6b3a7640000900490565b630a77254f60e01b60005260046000fd5b631550e8b760e01b60005260046000fd5b81819293945002828104821483151715610b2857809361144057041438806113cd565b634e487b7160e01b600052601260045260246000fd5b9067016345785d8a000082116114c1576706f05b59d3b2000081116114af57816040917f2f511505a3a136b4cafd6a6e6d2fdf872ed9be51aa68c2efe58214867d74627d9360cc558060cd5582519182526020820152a1565b604051630cc9f0a360e01b8152600490fd5b60405163d961681160e01b8152600490fdfea2646970667358221220d0862bffd0b1a17c6ba724756d9d6857844f3ebda890a125d77e8a9fc9f966bb64736f6c634300081a0033";

type FlashLoanManagerConstructorParams =
  | [linkLibraryAddresses: FlashLoanManagerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlashLoanManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class FlashLoanManager__factory extends ContractFactory {
  constructor(...args: FlashLoanManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        FlashLoanManager__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: FlashLoanManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$183737d697d7aa9b5df9988cbe11bc4947\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FlashLoanManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FlashLoanManager__factory {
    return super.connect(runner) as FlashLoanManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlashLoanManagerInterface {
    return new Interface(_abi) as FlashLoanManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FlashLoanManager {
    return new Contract(address, _abi, runner) as unknown as FlashLoanManager;
  }
}

export interface FlashLoanManagerLibraryAddresses {
  ["contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"]: string;
}
