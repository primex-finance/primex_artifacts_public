/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FlashLoanManager,
  FlashLoanManagerInterface,
} from "../../../contracts/FlashLoanManager/FlashLoanManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "flashLoanFeeRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "flashLoanProtocolRate",
        type: "uint256",
      },
    ],
    name: "ChangedFlashLoanRates",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "flashLoanFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "flashLoanProtocolFee",
        type: "uint256",
      },
    ],
    name: "FlashLoan",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "buckets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "flashLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "flashLoanFeeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "flashLoanProtocolRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_primexDNS",
        type: "address",
      },
      {
        internalType: "address",
        name: "_whiteBlackList",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_flashLoanFeeRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_flashLoanProtocolRate",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "primexDNS",
    outputs: [
      {
        internalType: "contract IPrimexDNS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFlashLoanFeeRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newFlashLoanProtocolRate",
        type: "uint256",
      },
    ],
    name: "setFlashLoanRates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "whiteBlackList",
    outputs: [
      {
        internalType: "contract IWhiteBlackList",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100c1576000549060ff8260081c1661006f575060ff80821603610034575b6040516114e690816100c78239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a71461117b575080633451a8be1461115d5780633f4a2d27146111345780633f4ba83a146110235780635c38449e1461055f5780635c975abb1461053c57806373ead27b146104b55780637b1039991461048c5780638456cb59146103a35780638c9f305f14610385578063a6b63eb8146100d15763ef379d17146100a357600080fd5b346100cc5760003660031901126100cc5760cb546040516001600160a01b039091168152602090f35b600080fd5b346100cc5760a03660031901126100cc576100ea6111ce565b6001600160a01b0390602435828116908190036100cc57604435928084168094036100cc576000549260ff8460081c161593848095610378575b8015610361575b156103055760ff198116600117600055846102f3575b506040516301ffc9a760e01b808252637965db0b60e01b600483015260209693909216918682602481865afa918215610277576000926102d4575b5081610283575b81610217575b5015610205576bffffffffffffffffffffffff60a01b918260cb54161760cb558160c954161760c95560ca54161760ca556101c8608435606435611385565b6101ce57005b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989061ff00196000541660005560405160018152a1005b60405163044aa57560e41b8152600490fd5b604051908152633df6cef760e01b600482015290508581602481865afa9081156102775760009161024a575b5086610189565b61026a9150863d8811610270575b6102628183611229565b81019061124b565b86610243565b503d610258565b6040513d6000823e3d90fd5b60405181815263fa6ab0ef60e01b60048201529091508681602481885afa908115610277576000916102b7575b5090610183565b6102ce9150873d8911610270576102628183611229565b876102b0565b6102ec919250873d8911610270576102628183611229565b908761017c565b61ffff19166101011760005585610141565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b15801561012b5750600160ff82161461012b565b50600160ff821610610124565b346100cc5760003660031901126100cc57602060cc54604051908152f35b346100cc5760003660031901126100cc5760c954604051632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb600482015233602482015290602090829060449082906001600160a01b03165afa9081156102775760009161046e575b501561045c57610423611341565b600160ff1960655416176065557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b60405163036be76f60e61b8152600490fd5b610486915060203d8111610270576102628183611229565b81610415565b346100cc5760003660031901126100cc5760c9546040516001600160a01b039091168152602090f35b346100cc5760403660031901126100cc5760c954604051632474521560e21b81526000600482015233602482015290602090829060449082906001600160a01b03165afa9081156102775760009161051e575b501561045c5761051c602435600435611385565b005b610536915060203d8111610270576102628183611229565b81610508565b346100cc5760003660031901126100cc57602060ff606554166040519015158152f35b346100cc5760803660031901126100cc576105786111ce565b60243567ffffffffffffffff81116100cc576105989036906004016111e4565b9060443567ffffffffffffffff81116100cc576105b99036906004016111e4565b93909167ffffffffffffffff606435116100cc573660236064350112156100cc5767ffffffffffffffff60643560040135116100cc57366024606435600401356064350101116100cc57600260015414610fde57600260015560cb54604051630723eb0360e51b815233600482015290602090829060249082906001600160a01b03165afa90811561027757600091610fbf575b50610fad5761065a611341565b848403610f9b5760018411610f26575b60c954604051632474521560e21b81527f7e2a91ef38c2037926294fa16deeaecad0fca6564c0df8ae38e5b0fe42d5cad9600482015233602482015290602090829060449082906001600160a01b03165afa90811561027757600091610f07575b506106d585611263565b956106e36040519788611229565b858752601f196106f287611263565b013660208901376107028661127b565b9261070c8761127b565b9260005b888110610b76575050604051632483d72160e21b815260a06004820152885160a4820181905260c482019060208b019060005b818110610b57575050508181036003190160248301528381526001600160fb1b0384116100cc5781908460051b90818a60208301370160406020820191601c84820301604485015288518093520190602088019060005b818110610b3e5750505090602081819333606483015260031982820301608483015260643560040135815260643560040135602460643501848301376000836064356004013583010152601f19601f60643560040135011601030181600060018060a01b038b165af190811561027757600091610b1f575b5015610b0d5760005b8781106108285760018055005b6001600160a01b0361084361083e838b866112bc565b6112e2565b16906001600160a01b03610857828c61132d565b511661086482868b6112bc565b3561086f838961132d565b5161087a848961132d565b519061088860cd5482611402565b918183810311610af75782820384018411610af757863b156100cc57604051906312ca6d3160e21b825283830360048301526024820152600081604481838b5af1801561027757610ae8575b506040516336b4849f60e11b81526001600160a01b0385811660048301528c81166024830152871660448201528282038401606482015260208160848173__$183737d697d7aa9b5df9988cbe11bc4947$__5af4801561027757610abd575b5060ca546040516361d027b360e01b815290602090829060049082906001600160a01b03165afa8015610277578391600091610a7f575b506040516336b4849f60e11b81526001600160a01b0387811660048301528e81166024830152919091166044820152606481019190915260208160848173__$183737d697d7aa9b5df9988cbe11bc4947$__5af4801561027757610a54575b50853b156100cc5760008096600460405180998193630f0e087d60e21b83525af195861561027757610a4096610a45575b506040519283526020830152604082015233907fc58f35ca649f2ebaf8f1189e10cb3c07d7255c417018d4002ad6dceb86d27e74606060018060a01b038c1692a46112ad565b61081b565b610a4e90611215565b8e6109fa565b602090813d8311610a78575b610a6a8183611229565b810103126100cc578e6109c9565b503d610a60565b9150506020813d602011610ab5575b81610a9b60209383611229565b810103126100cc576020610aaf8492611319565b9061096a565b3d9150610a8e565b602090813d8311610ae1575b610ad38183611229565b810103126100cc578e610933565b503d610ac9565b610af190611215565b8e6108d4565b634e487b7160e01b600052601160045260246000fd5b604051633ff5379b60e11b8152600490fd5b610b38915060203d602011610270576102628183611229565b89610812565b825184528594506020938401939092019160010161079a565b82516001600160a01b0316845260209384019390920191600101610743565b6001600160a01b03610b8c61083e838c876112bc565b169060018060a01b0360ca54166040516306fdde0360e01b8152600081600481875afa90811561027757600091610e54575b50608090604492604051809481809463481d98fb60e11b825260206004830152610bf781518092816024860152602086860191016112f6565b601f01601f191681010301915afa90811561027757828c600092600094610e04575b50610c289161083e91896112bc565b6001600160a01b03918216911603610df2576003811015610ddc57600103610dca5760405163011ddaef60e71b8152602081600481865afa90811561027757600091610d88575b506001600160a01b0316610c83828d61132d565b528215610d6b5760005b610c97828961132d565b52604051637437535960e01b8152602081600481865afa90811561027757600091610d39575b50610cc8828861132d565b52610cd481868b6112bc565b35823b156100cc5760405163bf629cb560e01b81526001600160a01b038a1660048201526024810191909152916000908390604490829084905af191821561027757610d2592610d2a575b506112ad565b610710565b610d3390611215565b8b610d1f565b90506020813d602011610d63575b81610d5460209383611229565b810103126100cc57518c610cbd565b3d9150610d47565b610d83610d7982878c6112bc565b3560cc5490611402565b610c8d565b90506020813d602011610dc2575b81610da360209383611229565b810103126100cc57516001600160a01b03811681036100cc578c610c6f565b3d9150610d96565b60405163d42bba7f60e01b8152600490fd5b634e487b7160e01b600052602160045260246000fd5b604051636f2f995760e01b8152600490fd5b93505050506080813d608011610e4c575b81610e2260809383611229565b810103126100cc576020610e3582611319565b91015160038110156100cc5790828c610c28610c19565b3d9150610e15565b90503d91826000833e610e678383611229565b60208284810103126100cc5781519267ffffffffffffffff84116100cc57808301601f8585010112156100cc57838301519367ffffffffffffffff8511610ef15760405191610ec0601f8701601f191660200184611229565b85835284016020868387010101116100cc576044946080946020610ee9938186019201016112f6565b915091610bbe565b634e487b7160e01b600052604160045260246000fd5b610f20915060203d602011610270576102628183611229565b866106cb565b60015b848110610f36575061066a565b80600019810111610af757610f5361083e600019830187856112bc565b6001600160a01b03610f6961083e8489876112bc565b166001600160a01b039091161015610f8957610f84906112ad565b610f29565b604051634930cce560e11b8152600490fd5b6040516373dea5e360e01b8152600490fd5b6040516333df015b60e01b8152600490fd5b610fd8915060203d602011610270576102628183611229565b8661064d565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b346100cc5760003660031901126100cc5760c954604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8600482015233602482015290602090829060449082906001600160a01b03165afa90811561027757600091611116575b501561045c5760655460ff8116156110da5760ff19166065557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b61112e915060203d8111610270576102628183611229565b81611095565b346100cc5760003660031901126100cc5760ca546040516001600160a01b039091168152602090f35b346100cc5760003660031901126100cc57602060cd54604051908152f35b346100cc5760203660031901126100cc576004359063ffffffff60e01b82168092036100cc57602091638964a85d60e01b81149081156111bd575b5015158152f35b6301ffc9a760e01b149050836111b6565b600435906001600160a01b03821682036100cc57565b9181601f840112156100cc5782359167ffffffffffffffff83116100cc576020808501948460051b0101116100cc57565b67ffffffffffffffff8111610ef157604052565b90601f8019910116810190811067ffffffffffffffff821117610ef157604052565b908160209103126100cc575180151581036100cc5790565b67ffffffffffffffff8111610ef15760051b60200190565b9061128582611263565b6112926040519182611229565b82815280926112a3601f1991611263565b0190602036910137565b6000198114610af75760010190565b91908110156112cc5760051b0190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b03811681036100cc5790565b60005b8381106113095750506000910152565b81810151838201526020016112f9565b51906001600160a01b03821682036100cc57565b80518210156112cc5760209160051b010190565b60ff6065541661134d57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b9067016345785d8a000082116113f0576706f05b59d3b2000081116113de57816040917f2f511505a3a136b4cafd6a6e6d2fdf872ed9be51aa68c2efe58214867d74627d9360cc558060cd5582519182526020820152a1565b604051630cc9f0a360e01b8152600490fd5b60405163d961681160e01b8152600490fd5b906000918115918215611462575b505015611450576706f05b59d3b20000810190818111610af757811061143e57670de0b6b3a7640000900490565b604051630a77254f60e01b8152600490fd5b604051631550e8b760e01b8152600490fd5b9091928183029083820483148415171561149c575080936114865704143880611410565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b81526011600452602490fdfea2646970667358221220e0dcbaf1b6a58bda1be128180c9dea3a70aee7d64e56ff4dfc16ddede9036d2a64736f6c63430008120033";

type FlashLoanManagerConstructorParams =
  | [linkLibraryAddresses: FlashLoanManagerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlashLoanManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class FlashLoanManager__factory extends ContractFactory {
  constructor(...args: FlashLoanManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        FlashLoanManager__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: FlashLoanManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$183737d697d7aa9b5df9988cbe11bc4947\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FlashLoanManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FlashLoanManager__factory {
    return super.connect(runner) as FlashLoanManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlashLoanManagerInterface {
    return new Interface(_abi) as FlashLoanManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FlashLoanManager {
    return new Contract(address, _abi, runner) as unknown as FlashLoanManager;
  }
}

export interface FlashLoanManagerLibraryAddresses {
  ["contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"]: string;
}
