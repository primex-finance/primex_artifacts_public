/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PrimexNFT,
  PrimexNFTInterface,
} from "../../../contracts/PrimexNFT/PrimexNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_deadlines",
        type: "uint256[]",
      },
    ],
    name: "batchSetDeadline",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "hasUserActiveToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_users",
        type: "address[]",
      },
    ],
    name: "haveUsersActiveTokens",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "idToDeadLine",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_newBaseURI",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct IPrimexNFT.SafeMintParams",
        name: "_nftParams",
        type: "tuple",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_sig",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct IPrimexNFT.SafeMintParams",
        name: "_nftParams",
        type: "tuple",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct IPrimexNFT.SafeMintParams[]",
        name: "_nftParams",
        type: "tuple[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0806040523460ca576000549060ff8260081c166078575060ff80821603603e575b4660805260405161292290816100d0823960805181611db30152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a1386022565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146118515750806306fdde03146117a8578063081812fc1461178a578063095ea7b31461160157806318160ddd146115e35780631c204db21461147257806323b872dd1461144e5780632f745c591461142757806342842e0e146113f25780634f6ccce71461136057806355f804b3146111cb5780635f1e6f6d14610c115780636352211e14610be157806370a0823114610bb6578063759825e514610a585780637b10399914610a2f578063946af6191461091b57806395d89b411461084d5780639daf371f14610821578063a22cb4651461074f578063b88d4fde146106db578063b9ea8e7e146106ae578063c8213ad814610501578063c87b56dd14610391578063d73ede431461019d5763e985e9c51461013d57600080fd5b3461019857604036600319011261019857610156611938565b61015e61194e565b9060018060a01b0316600052606a60205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b600080fd5b34610198576020366003190112610198576004356001600160401b03811161019857366023820112156101985780600401356001600160401b038111610198573660248260071b840101116101985760c954604051632474521560e21b81526000805160206128ad8339815191526004820152336024820152906001600160a01b0316602082604481845afa91821561036457600092610370575b5081156102d8575b50156102c65760005b818110156102c45760008160071b8401608060231982360301126102c057604051916102748361199e565b60248201358352604482013560208401526064820135906001600160a01b03821682036102bd57506040830152608401356060820152600191906102b790611daf565b01610249565b80fd5b5080fd5b005b60405163036be76f60e61b8152600490fd5b604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d860048201523360248201529150602090829060449082905afa90811561036457600091610335575b5083610240565b610357915060203d60201161035d575b61034f81836119b9565b810190611ae2565b8361032e565b503d610345565b6040513d6000823e3d90fd5b61038a91925060203d60201161035d5761034f81836119b9565b9084610238565b34610198576020366003190112610198576004356000818152606760205260409020546103c8906001600160a01b03161515611c58565b60405160cb546000926103da82611a6a565b8084526020840192600181169081156104e6575060011461048d575b506104068361046f9503846119b9565b825160009015610473575091602061045b92610424610437956123ac565b90604051958694518092858701906118f0565b830161044b825180938580850191016118f0565b010103601f1981018352826119b9565b604051918291602083526020830190611913565b0390f35b92505050604051906104866020836119b9565b815261045b565b935060cb6000527fa7ce836d032b2bf62b7e2097a8e0a6d8aeb35405ad15271e96d3b0188a1d06fb6000905b8582106104d05750830160200193506104066103f6565b60018160209254838589010152019101906104b9565b60ff1916845250151560051b830160200193506104066103f6565b346101985760a0366003190112610198576004356001600160401b038111610198576105319036906004016119f5565b6080366023190112610198576040519061054a8261199e565b602435825260443560208301908152606435916001600160a01b03831683036101985761062f9261062792604086019182526060860160843581526040519260208401928851845251604085015260018060a01b039051166060840152516080830152608082526105bc60a0836119b9565b61061f6105c983516123ac565b92603a60405193849261044b60208501977f19457468657265756d205369676e6564204d6573736167653a0a0000000000008952610610815180926020888a0191016118f0565b850191518093858401906118f0565b51902061268e565b9190916126c6565b60c954604051632474521560e21b81526000805160206128ad83398151915260048201526001600160a01b0392831660248201529160209183916044918391165afa9081156103645760009161068f575b50156102c6576102c490611daf565b6106a8915060203d60201161035d5761034f81836119b9565b82610680565b346101985760203660031901126101985760206106d16106cc611938565b611d68565b6040519015158152f35b34610198576080366003190112610198576106f4611938565b6106fc61194e565b90606435906044356001600160401b038311610198576102c49361072761074a9436906004016119f5565b9261073a6107358433611f9c565b611afa565b61074583838361206f565b612635565b612388565b3461019857604036600319011261019857610768611938565b60243590811515809203610198576001600160a01b0316903382146107dc5733600052606a602052604060002082600052602052604060002060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b60405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606490fd5b346101985760203660031901126101985760043560005260ca6020526020604060002054604051908152f35b3461019857600036600319011261019857604051600060665461086f81611a6a565b80845290600181169081156108f75750600114610897575b61046f8361045b818503826119b9565b91905060666000527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e94354916000905b8082106108dd5750909150810160200161045b610887565b9192600181602092548385880101520191019092916108c5565b60ff191660208086019190915291151560051b8401909101915061045b9050610887565b34610198576020366003190112610198576004356001600160401b0381116101985761094b903690600401611a3a565b9061095582611d51565b9061096360405192836119b9565b82825261096f83611d51565b602083019390601f190136853760005b8181106109ce575050506040519182916020830190602084525180915260408301919060005b8181106109b3575050500390f35b825115158452859450602093840193909201916001016109a5565b6109dc818385969795611d41565b356001600160a01b0381168103610198576109f690611d68565b908551811015610a1957600191151560208260051b88010152019392919361097f565b634e487b7160e01b600052603260045260246000fd5b346101985760003660031901126101985760c9546040516001600160a01b039091168152602090f35b34610198576040366003190112610198576004356001600160401b03811161019857610a88903690600401611a3a565b906024356001600160401b03811161019857610aa8903690600401611a3a565b60c954604051632474521560e21b81526000805160206128ad833981519152600482015233602482015292939290602090829060449082906001600160a01b03165afa90811561036457600091610b97575b50156102c657808403610b855760005b848110610b1357005b610b3f610b21828786611d41565b356000908152606760205260409020546001600160a01b0316151590565b15610b735780610b526001928487611d41565b35610b5e828887611d41565b3560005260ca60205260406000205501610b0a565b60405163bbfb81b760e01b8152600490fd5b60405163554a08d160e11b8152600490fd5b610bb0915060203d60201161035d5761034f81836119b9565b85610afa565b34610198576020366003190112610198576020610bd9610bd4611938565b611cca565b604051908152f35b34610198576020366003190112610198576020610bff600435611ca4565b6040516001600160a01b039091168152f35b3461019857608036600319011261019857610c2a611938565b6024356001600160401b03811161019857610c499036906004016119f5565b906044356001600160401b03811161019857610c699036906004016119f5565b906064356001600160401b03811161019857610c899036906004016119f5565b906000549060ff8260081c1615918280936111be575b80156111a7575b1561114b5760ff19811660011760005582611139575b506040516301ffc9a760e01b8152637965db0b60e01b60048201526001600160a01b039190911690602081602481855afa9081156103645760009161111a575b5015611108576001600160601b0360a01b60c954161760c955610d2f60ff60005460081c16610d2a816122d5565b6122d5565b83516001600160401b038111610f0a57610d4a606554611a6a565b601f81116110a3575b50602094601f821160011461101f57610d88929394958291600092611014575b50508160011b916000199060031b1c19161790565b6065555b82516001600160401b038111610f0a57610da7606654611a6a565b601f8111610faf575b506020601f8211600114610f2b578190610de2939495600092610f205750508160011b916000199060031b1c19161790565b6066555b81516001600160401b038111610f0a57610e0a81610e0560cb54611a6a565b611c05565b602092601f8211600114610e8857610e3b92938291600092610e7d5750508160011b916000199060031b1c19161790565b60cb555b610e4557005b61ff0019600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b015190508480610d73565b601f1982169360cb6000527fa7ce836d032b2bf62b7e2097a8e0a6d8aeb35405ad15271e96d3b0188a1d06fb9160005b868110610ef25750836001959610610ed9575b505050811b0160cb55610e3f565b015160001960f88460031b161c19169055838080610ecb565b91926020600181928685015181550194019201610eb8565b634e487b7160e01b600052604160045260246000fd5b015190508580610d73565b601f1982169060666000527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e943549160005b818110610f9757509583600195969710610f7e575b505050811b01606655610de6565b015160001960f88460031b161c19169055848080610f70565b9192602060018192868b015181550194019201610f5b565b60666000527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e94354601f830160051c8101916020841061100a575b601f0160051c01905b818110610ffe5750610db0565b60008155600101610ff1565b9091508190610fe8565b015190508680610d73565b601f1982169560656000527f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c79160005b88811061108b57508360019596979810611072575b505050811b01606555610d8c565b015160001960f88460031b161c19169055858080611064565b9192602060018192868501518155019401920161104f565b60656000527f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c7601f830160051c810191602084106110fe575b601f0160051c01905b8181106110f25750610d53565b600081556001016110e5565b90915081906110dc565b60405163044aa57560e41b8152600490fd5b611133915060203d60201161035d5761034f81836119b9565b86610cfc565b61ffff19166101011760005585610cbc565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015610ca65750600160ff821614610ca6565b50600160ff821610610c9f565b34610198576020366003190112610198576004356001600160401b03811161019857366023820112156101985780600401356001600160401b0381116101985736602482840101116101985760c954604051632474521560e21b81526000805160206128ad833981519152600482015233602482015290602090829060449082906001600160a01b03165afa90811561036457600091611341575b50156102c65760009061127e81610e0560cb54611a6a565b81601f82116001146112c057819083946112ac94926112b25750508160011b916000199060031b1c19161790565b60cb5580f35b602492500101358480610d73565b601f198216937fa7ce836d032b2bf62b7e2097a8e0a6d8aeb35405ad15271e96d3b0188a1d06fb91845b8681106113265750836001959610611309575b505050811b0160cb5580f35b0160240135600019600384901b60f8161c191690558380806112fd565b909260206001819260248787010135815501940191016112ea565b61135a915060203d60201161035d5761034f81836119b9565b83611266565b346101985760203660031901126101985760043560995481101561139857611389602091611bea565b90549060031b1c604051908152f35b60405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608490fd5b34610198576102c461074a61140636611964565b90604051926114166020856119b9565b6000845261073a6107358433611f9c565b34610198576040366003190112610198576020610bd9611445611938565b60243590611b5c565b34610198576102c461145f36611964565b9161146d6107358433611f9c565b61206f565b34610198573660031901608081126101985760c954604051632474521560e21b81526000805160206128ad8339815191526004820152336024820152600092916001600160a01b0316602082604481845afa9182156115d85784926115b7575b508115611531575b50156102c6576080136102bd576040516114f38161199e565b60043581526024356020820152604435906001600160a01b038216820361152d5761152a9160408201526064356060820152611daf565b80f35b8280fd5b604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d860048201523360248201529150602090829060449082905afa9081156115ac57839161158d575b50836114da565b6115a6915060203d60201161035d5761034f81836119b9565b83611586565b6040513d85823e3d90fd5b6115d191925060203d60201161035d5761034f81836119b9565b90846114d2565b6040513d86823e3d90fd5b34610198576000366003190112610198576020609954604051908152f35b346101985760403660031901126101985761161a611938565b602435906001600160a01b0361162f83611ca4565b6001600160a01b03909216911681811461173b57803314908115611716575b50156116ab57600082815260696020526040902080546001600160a01b031916821790556001600160a01b0361168383611ca4565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4005b60405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608490fd5b6000908152606a6020908152604080832033845290915290205460ff1690508361164e565b60405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608490fd5b34610198576020366003190112610198576020610bff600435611aa4565b346101985760003660031901126101985760405160006065546117ca81611a6a565b80845290600181169081156108f757506001146117f15761046f8361045b818503826119b9565b91905060656000527f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c7916000905b8082106118375750909150810160200161045b610887565b91926001816020925483858801015201910190929161181f565b34610198576020366003190112610198576004359063ffffffff60e01b8216809203610198576020916351c19f7560e01b8114908115611893575b5015158152f35b63780e9d6360e01b8114915081156118ad575b508361188c565b6380ac58cd60e01b8114915081156118df575b81156118ce575b50836118a6565b6301ffc9a760e01b149050836118c7565b635b5e139f60e01b811491506118c0565b60005b8381106119035750506000910152565b81810151838201526020016118f3565b9060209161192c815180928185528580860191016118f0565b601f01601f1916010190565b600435906001600160a01b038216820361019857565b602435906001600160a01b038216820361019857565b6060906003190112610198576004356001600160a01b038116810361019857906024356001600160a01b0381168103610198579060443590565b608081019081106001600160401b03821117610f0a57604052565b90601f801991011681019081106001600160401b03821117610f0a57604052565b6001600160401b038111610f0a57601f01601f191660200190565b81601f8201121561019857602081359101611a0f826119da565b92611a1d60405194856119b9565b828452828201116101985781600092602092838601378301015290565b9181601f84011215610198578235916001600160401b038311610198576020808501948460051b01011161019857565b90600182811c92168015611a9a575b6020831014611a8457565b634e487b7160e01b600052602260045260246000fd5b91607f1691611a79565b600081815260676020526040902054611ac7906001600160a01b03161515611c58565b6000908152606960205260409020546001600160a01b031690565b90816020910312610198575180151581036101985790565b15611b0157565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b611b6581611cca565b821015611b915760018060a01b0316600052609760205260406000209060005260205260406000205490565b60405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608490fd5b609954811015610a1957609960005260206000200190600090565b601f8111611c11575050565b60cb6000526020600020906020601f840160051c83019310611c4e575b601f0160051c01905b818110611c42575050565b60008155600101611c37565b9091508190611c2e565b15611c5f57565b60405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6000908152606760205260409020546001600160a01b0316611cc7811515611c58565b90565b6001600160a01b03168015611cea57600052606860205260406000205490565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b9190811015610a195760051b0190565b6001600160401b038111610f0a5760051b60200190565b60005b611d7482611cca565b811015611da857611d858183611b5c565b60005260ca6020526040600020544210611da157600101611d6b565b5050600190565b5050600090565b80517f000000000000000000000000000000000000000000000000000000000000000003611f8a5760608101805115611f7857602060018060a01b03604084015116920191825191602060405191611e0782846119b9565b600083528315611f3557600085815260676020526040902054611e36906001600160a01b031615155b15612860565b6099549480600052609a835285604060002055600160401b861015610f0a5761074a60ca9482611e8e611f2b94611e758b600160409d01609955611bea565b90919082549060031b91821b91600019901b1916179055565b600097611e9a81611cca565b818a52609788528a8a20818b5288528a8a20839055828a52609888528a8a2055600082815260676020526040902054611edd906001600160a01b03161515611e30565b80895260688752898920805460010190558189526067875289892080546001600160a01b0319166001600160a01b03831617905581818a6000805160206128cd8339815191528180a461251b565b5194518352522055565b6064826040519062461bcd60e51b825280600483015260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b60405163dcde51f560e01b8152600490fd5b604051633bf6843f60e01b8152600490fd5b906001600160a01b03611fae82611ca4565b6001600160a01b0390931692168281149291908315611fee575b508215611fd457505090565b9091506001600160a01b0390611fe990611aa4565b161490565b909250600052606a60205260406000208160005260205260ff604060002054169138611fc8565b1561201c57565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b9061207983611ca4565b6001600160a01b03838116929161209291168314612015565b6001600160a01b03811692831561228457826121ad57506099549084600052609a60205281604060002055600160401b821015610f0a576120ec85611e758460016000805160206128cd8339815191529601609955611bea565b600090838503612179575b50612114836001600160a01b0361210d88611ca4565b1614612015565b8481526069602052604081206001600160601b0360a01b8154169055828152606860205260408120600019815401905583815260686020526040812060018154019055848152606760205260408120846001600160601b0360a01b82541617905580a4565b61218290611cca565b84825260976020526040822081835260205285604083205585825260986020526040822055386120f7565b8383036121cb575b506000805160206128cd833981519152906120ec565b6121d490611cca565b60001981019190821161226e576000805160206128cd8339815191529185600052609860205260406000205481810361223b575b508560005260986020526000604081205583600052609760205260406000209060005260205260006040812055906121b5565b60008581526097602090815260408083208584528252808320548484528184208190558352609890915290205538612208565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b156122dc57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b1561238f57565b60405162461bcd60e51b8152806123a860048201612335565b0390fd5b8060009172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8210156124f8575b806d04ee2d6d415b85acef8100000000600a9210156124dd575b662386f26fc100008110156124c9575b6305f5e1008110156124b8575b6127108110156124a9575b606481101561249b575b1015612490575b600a60216001840193612434856119da565b9461244260405196876119b9565b808652612451601f19916119da565b013660208701378401015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304801561248b57600a909161245c565b505090565b600190910190612422565b60646002910493019261241b565b61271060049104930192612411565b6305f5e10060089104930192612406565b662386f26fc10000601091049301926123f9565b6d04ee2d6d415b85acef8100000000602091049301926123e9565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b81046123cf565b91823b1561262d57612561926020926000604051809681958294630a85bd0160e11b84523360048501528460248501526044840152608060648401526084830190611913565b03926001600160a01b03165af180916000916125ea575b50906125d4573d156125cd573d61258e816119da565b9061259c60405192836119b9565b81523d6000602083013e5b805190816125c85760405162461bcd60e51b8152806123a860048201612335565b602001fd5b60606125a7565b6001600160e01b031916630a85bd0160e11b1490565b6020813d602011612625575b81612603602093836119b9565b810103126102c05751906001600160e01b0319821682036102bd575038612578565b3d91506125f6565b505050600190565b919290803b156126855761256193600060209460405196879586948593630a85bd0160e11b855233600486015260018060a01b031660248501526044840152608060648401526084830190611913565b50505050600190565b9060418151146000146126bc576126b8916020820151906060604084015193015160001a906127e0565b9091565b5050600090600290565b60058110156127ca57806126d75750565b600181036127245760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b600281036127715760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b60031461277a57565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116128545760209360009360ff60809460405194855216868401526040830152606082015282805260015afa15610364576000516001600160a01b0381161561284b5790600090565b50600090600190565b50505050600090600390565b1561286757565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fdfeaeaa1900807496622919380e44cfa49d0f4572fa02867dcea7748d8c9a507866ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220868bed3a86568973205f7bd56a9637bd09b5d131c7ff848481b1c50e1100c90364736f6c634300081a0033";

type PrimexNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrimexNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrimexNFT__factory extends ContractFactory {
  constructor(...args: PrimexNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PrimexNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrimexNFT__factory {
    return super.connect(runner) as PrimexNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrimexNFTInterface {
    return new Interface(_abi) as PrimexNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PrimexNFT {
    return new Contract(address, _abi, runner) as unknown as PrimexNFT;
  }
}
