/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PrimexNFT,
  PrimexNFTInterface,
} from "../../../contracts/PrimexNFT/PrimexNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_deadlines",
        type: "uint256[]",
      },
    ],
    name: "batchSetDeadline",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "hasUserActiveToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_users",
        type: "address[]",
      },
    ],
    name: "haveUsersActiveTokens",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "idToDeadLine",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_newBaseURI",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct IPrimexNFT.SafeMintParams",
        name: "_nftParams",
        type: "tuple",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_sig",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct IPrimexNFT.SafeMintParams",
        name: "_nftParams",
        type: "tuple",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct IPrimexNFT.SafeMintParams[]",
        name: "_nftParams",
        type: "tuple[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0806040523460ca576000549060ff8260081c166078575060ff80821603603e575b46608052604051612a5f90816100d0823960805181611f110152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a1386022565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146119af5750806306fdde0314611906578063081812fc146118e8578063095ea7b31461175f57806318160ddd146117415780631c204db2146115e257806323b872dd146115be5780632f745c591461159757806342842e0e146115625780634f6ccce7146114d057806355f804b3146112ca5780635f1e6f6d14610d105780636352211e14610ce057806370a0823114610cb5578063759825e514610ae65780637b10399914610abd578063946af619146109a957806395d89b41146108db5780639daf371f146108af578063a22cb465146107dd578063b88d4fde14610769578063b9ea8e7e1461073c578063c8213ad814610547578063c87b56dd1461037f578063d73ede431461019d5763e985e9c51461013d57600080fd5b3461019857604036600319011261019857610156611a96565b61015e611aac565b9060018060a01b0316600052606a60205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b600080fd5b34610198576020366003190112610198576004356001600160401b03811161019857366023820112156101985780600401356001600160401b038111610198573660248260071b840101116101985760c954604051632474521560e21b81526000805160206129ca8339815191526004820152336024820152906001600160a01b0316602082604481845afa9182156103525760009261035e575b5081156102d8575b50156102c65760005b818110156102c45760008160071b8401608060231982360301126102c0576040519161027483611afc565b60248201358352604482013560208401526064820135906001600160a01b03821682036102bd57506040830152608401356060820152600191906102b790611f0d565b01610249565b80fd5b5080fd5b005b60405163036be76f60e61b8152600490fd5b604051632474521560e21b81526000805160206129ea83398151915260048201523360248201529150602090829060449082905afa90811561035257600091610323575b5083610240565b610345915060203d60201161034b575b61033d8183611b17565b810190611c40565b8361031c565b503d610333565b6040513d6000823e3d90fd5b61037891925060203d60201161034b5761033d8183611b17565b9084610238565b34610198576020366003190112610198576004356000818152606760205260409020546103b6906001600160a01b03161515611db6565b60405160cb5490916000836103ca84611bc8565b91828252602082019460018116908160001461052b57506001146104ca575b6103f592500384611b17565b8251600090156104ac575061040981612801565b90600a602161041a6001850161250a565b938401015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530490811561044e57600a9061041f565b50506104a8926020610494926104709460405195869451809285870190611a4e565b830161048482518093858085019101611a4e565b010103601f198101835282611b17565b604051918291602083526020830190611a71565b0390f35b9150506104a89150604051906104c3602083611b17565b8152610494565b509060cb6000527fa7ce836d032b2bf62b7e2097a8e0a6d8aeb35405ad15271e96d3b0188a1d06fb906000915b81831061050f5750509060206103f5928201016103e9565b6020919350806001915483858a010152019101909185926104f7565b60ff19168652506103f592151560051b820160200190506103e9565b346101985760a0366003190112610198576004356001600160401b03811161019857610577903690600401611b53565b6080366023190112610198576040519061059082611afc565b60243582526044356020830190815290606435906001600160a01b038216820361019857604084019182526060840160843581526040519260208401948651865251604085015260018060a01b039051166060840152516080830152608082526105fb60a083611b17565b815161060681612801565b90600a60216106176001850161250a565b938401015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530490811561064b57600a9061061c565b50506106bd936106ad6106b594603a60405193849261048460208501977f19457468657265756d205369676e6564204d6573736167653a0a000000000000895261069e815180926020888a019101611a4e565b85019151809385840190611a4e565b5190206126af565b9190916126e7565b60c954604051632474521560e21b81526000805160206129ca83398151915260048201526001600160a01b0392831660248201529160209183916044918391165afa9081156103525760009161071d575b50156102c6576102c490611f0d565b610736915060203d60201161034b5761033d8183611b17565b8261070e565b3461019857602036600319011261019857602061075f61075a611a96565b611ec6565b6040519015158152f35b3461019857608036600319011261019857610782611a96565b61078a611aac565b90606435906044356001600160401b038311610198576102c4936107b56107d8943690600401611b53565b926107c86107c384336120fa565b611c58565b6107d38383836121cd565b612656565b6124e6565b34610198576040366003190112610198576107f6611a96565b60243590811515809203610198576001600160a01b03169033821461086a5733600052606a602052604060002082600052602052604060002060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b60405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606490fd5b346101985760203660031901126101985760043560005260ca6020526020604060002054604051908152f35b346101985760003660031901126101985760405160006066546108fd81611bc8565b80845290600181169081156109855750600114610925575b6104a88361049481850382611b17565b91905060666000527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e94354916000905b80821061096b57509091508101602001610494610915565b919260018160209254838588010152019101909291610953565b60ff191660208086019190915291151560051b840190910191506104949050610915565b34610198576020366003190112610198576004356001600160401b038111610198576109d9903690600401611b98565b906109e382611eaf565b906109f16040519283611b17565b8282526109fd83611eaf565b602083019390601f190136853760005b818110610a5c575050506040519182916020830190602084525180915260408301919060005b818110610a41575050500390f35b82511515845285945060209384019390920191600101610a33565b610a6a818385969795611e9f565b356001600160a01b038116810361019857610a8490611ec6565b908551811015610aa757600191151560208260051b880101520193929193610a0d565b634e487b7160e01b600052603260045260246000fd5b346101985760003660031901126101985760c9546040516001600160a01b039091168152602090f35b34610198576040366003190112610198576004356001600160401b03811161019857610b16903690600401611b98565b906024356001600160401b03811161019857610b36903690600401611b98565b60c954604051632474521560e21b81526000805160206129ca8339815191526004820152336024820152929392906001600160a01b0316602082604481845afa91821561035257600092610c94575b508115610c2a575b50156102c657808403610c185760005b848110610ba657005b610bd2610bb4828786611e9f565b356000908152606760205260409020546001600160a01b0316151590565b15610c065780610be56001928487611e9f565b35610bf1828887611e9f565b3560005260ca60205260406000205501610b9d565b60405163bbfb81b760e01b8152600490fd5b60405163554a08d160e11b8152600490fd5b604051632474521560e21b81526000805160206129ea83398151915260048201523360248201529150602090829060449082905afa90811561035257600091610c75575b5085610b8d565b610c8e915060203d60201161034b5761033d8183611b17565b85610c6e565b610cae91925060203d60201161034b5761033d8183611b17565b9086610b85565b34610198576020366003190112610198576020610cd8610cd3611a96565b611e28565b604051908152f35b34610198576020366003190112610198576020610cfe600435611e02565b6040516001600160a01b039091168152f35b3461019857608036600319011261019857610d29611a96565b6024356001600160401b03811161019857610d48903690600401611b53565b906044356001600160401b03811161019857610d68903690600401611b53565b906064356001600160401b03811161019857610d88903690600401611b53565b906000549060ff8260081c1615918280936112bd575b80156112a6575b1561124a5760ff19811660011760005582611238575b506040516301ffc9a760e01b8152637965db0b60e01b60048201526001600160a01b039190911690602081602481855afa90811561035257600091611219575b5015611207576001600160601b0360a01b60c954161760c955610e2e60ff60005460081c16610e2981612433565b612433565b83516001600160401b03811161100957610e49606554611bc8565b601f81116111a2575b50602094601f821160011461111e57610e87929394958291600092611113575b50508160011b916000199060031b1c19161790565b6065555b82516001600160401b03811161100957610ea6606654611bc8565b601f81116110ae575b506020601f821160011461102a578190610ee193949560009261101f5750508160011b916000199060031b1c19161790565b6066555b81516001600160401b03811161100957610f0981610f0460cb54611bc8565b611d63565b602092601f8211600114610f8757610f3a92938291600092610f7c5750508160011b916000199060031b1c19161790565b60cb555b610f4457005b61ff0019600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b015190508480610e72565b601f1982169360cb6000527fa7ce836d032b2bf62b7e2097a8e0a6d8aeb35405ad15271e96d3b0188a1d06fb9160005b868110610ff15750836001959610610fd8575b505050811b0160cb55610f3e565b015160001960f88460031b161c19169055838080610fca565b91926020600181928685015181550194019201610fb7565b634e487b7160e01b600052604160045260246000fd5b015190508580610e72565b601f1982169060666000527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e943549160005b8181106110965750958360019596971061107d575b505050811b01606655610ee5565b015160001960f88460031b161c1916905584808061106f565b9192602060018192868b01518155019401920161105a565b60666000527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e94354601f830160051c81019160208410611109575b601f0160051c01905b8181106110fd5750610eaf565b600081556001016110f0565b90915081906110e7565b015190508680610e72565b601f1982169560656000527f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c79160005b88811061118a57508360019596979810611171575b505050811b01606555610e8b565b015160001960f88460031b161c19169055858080611163565b9192602060018192868501518155019401920161114e565b60656000527f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c7601f830160051c810191602084106111fd575b601f0160051c01905b8181106111f15750610e52565b600081556001016111e4565b90915081906111db565b60405163044aa57560e41b8152600490fd5b611232915060203d60201161034b5761033d8183611b17565b86610dfb565b61ffff19166101011760005585610dbb565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015610da55750600160ff821614610da5565b50600160ff821610610d9e565b34610198576020366003190112610198576004356001600160401b03811161019857366023820112156101985780600401356001600160401b0381116101985736602482840101116101985760c954604051632474521560e21b81526000805160206129ca8339815191526004820152336024820152906001600160a01b0316602082604481845afa918215610352576000926114af575b508115611445575b50156102c65760009061138281610f0460cb54611bc8565b81601f82116001146113c457819083946113b094926113b65750508160011b916000199060031b1c19161790565b60cb5580f35b602492500101358480610e72565b601f198216937fa7ce836d032b2bf62b7e2097a8e0a6d8aeb35405ad15271e96d3b0188a1d06fb91845b86811061142a575083600195961061140d575b505050811b0160cb5580f35b0160240135600019600384901b60f8161c19169055838080611401565b909260206001819260248787010135815501940191016113ee565b604051632474521560e21b81526000805160206129ea83398151915260048201523360248201529150602090829060449082905afa90811561035257600091611490575b508361136a565b6114a9915060203d60201161034b5761033d8183611b17565b83611489565b6114c991925060203d60201161034b5761033d8183611b17565b9084611362565b3461019857602036600319011261019857600435609954811015611508576114f9602091611d48565b90549060031b1c604051908152f35b60405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608490fd5b34610198576102c46107d861157636611ac2565b9060405192611586602085611b17565b600084526107c86107c384336120fa565b34610198576040366003190112610198576020610cd86115b5611a96565b60243590611cba565b34610198576102c46115cf36611ac2565b916115dd6107c384336120fa565b6121cd565b34610198573660031901608081126101985760c954604051632474521560e21b81526000805160206129ca8339815191526004820152336024820152600092916001600160a01b0316602082604481845afa918215611736578492611715575b5081156116a1575b50156102c6576080136102bd5760405161166381611afc565b60043581526024356020820152604435906001600160a01b038216820361169d5761169a9160408201526064356060820152611f0d565b80f35b8280fd5b604051632474521560e21b81526000805160206129ea83398151915260048201523360248201529150602090829060449082905afa90811561170a5783916116eb575b508361164a565b611704915060203d60201161034b5761033d8183611b17565b836116e4565b6040513d85823e3d90fd5b61172f91925060203d60201161034b5761033d8183611b17565b9084611642565b6040513d86823e3d90fd5b34610198576000366003190112610198576020609954604051908152f35b3461019857604036600319011261019857611778611a96565b602435906001600160a01b0361178d83611e02565b6001600160a01b03909216911681811461189957803314908115611874575b501561180957600082815260696020526040902080546001600160a01b031916821790556001600160a01b036117e183611e02565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4005b60405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608490fd5b6000908152606a6020908152604080832033845290915290205460ff169050836117ac565b60405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608490fd5b34610198576020366003190112610198576020610cfe600435611c02565b3461019857600036600319011261019857604051600060655461192881611bc8565b8084529060018116908115610985575060011461194f576104a88361049481850382611b17565b91905060656000527f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c7916000905b80821061199557509091508101602001610494610915565b91926001816020925483858801015201910190929161197d565b34610198576020366003190112610198576004359063ffffffff60e01b8216809203610198576020916351c19f7560e01b81149081156119f1575b5015158152f35b63780e9d6360e01b811491508115611a0b575b50836119ea565b6380ac58cd60e01b811491508115611a3d575b8115611a2c575b5083611a04565b6301ffc9a760e01b14905083611a25565b635b5e139f60e01b81149150611a1e565b60005b838110611a615750506000910152565b8181015183820152602001611a51565b90602091611a8a81518092818552858086019101611a4e565b601f01601f1916010190565b600435906001600160a01b038216820361019857565b602435906001600160a01b038216820361019857565b6060906003190112610198576004356001600160a01b038116810361019857906024356001600160a01b0381168103610198579060443590565b608081019081106001600160401b0382111761100957604052565b90601f801991011681019081106001600160401b0382111761100957604052565b6001600160401b03811161100957601f01601f191660200190565b81601f8201121561019857602081359101611b6d82611b38565b92611b7b6040519485611b17565b828452828201116101985781600092602092838601378301015290565b9181601f84011215610198578235916001600160401b038311610198576020808501948460051b01011161019857565b90600182811c92168015611bf8575b6020831014611be257565b634e487b7160e01b600052602260045260246000fd5b91607f1691611bd7565b600081815260676020526040902054611c25906001600160a01b03161515611db6565b6000908152606960205260409020546001600160a01b031690565b90816020910312610198575180151581036101985790565b15611c5f57565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b611cc381611e28565b821015611cef5760018060a01b0316600052609760205260406000209060005260205260406000205490565b60405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608490fd5b609954811015610aa757609960005260206000200190600090565b601f8111611d6f575050565b60cb6000526020600020906020601f840160051c83019310611dac575b601f0160051c01905b818110611da0575050565b60008155600101611d95565b9091508190611d8c565b15611dbd57565b60405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6000908152606760205260409020546001600160a01b0316611e25811515611db6565b90565b6001600160a01b03168015611e4857600052606860205260406000205490565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b9190811015610aa75760051b0190565b6001600160401b0381116110095760051b60200190565b60005b611ed282611e28565b811015611f0657611ee38183611cba565b60005260ca6020526040600020544210611eff57600101611ec9565b5050600190565b5050600090565b80517f0000000000000000000000000000000000000000000000000000000000000000036120e857606081018051156120d657602060018060a01b03604084015116920191825191602060405191611f658284611b17565b60008352831561209357600085815260676020526040902054611f94906001600160a01b031615155b1561297d565b6099549480600052609a835285604060002055600160401b861015611009576107d860ca9482611fec61208994611fd38b600160409d01609955611d48565b90919082549060031b91821b91600019901b1916179055565b600097611ff881611e28565b818a52609788528a8a20818b5288528a8a20839055828a52609888528a8a205560008281526067602052604090205461203b906001600160a01b03161515611f8e565b80895260688752898920805460010190558189526067875289892080546001600160a01b0319166001600160a01b03831617905581818a600080516020612a0a8339815191528180a461253c565b5194518352522055565b6064826040519062461bcd60e51b825280600483015260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b60405163dcde51f560e01b8152600490fd5b604051633bf6843f60e01b8152600490fd5b906001600160a01b0361210c82611e02565b6001600160a01b039093169216828114929190831561214c575b50821561213257505090565b9091506001600160a01b039061214790611c02565b161490565b909250600052606a60205260406000208160005260205260ff604060002054169138612126565b1561217a57565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b906121d783611e02565b6001600160a01b0383811692916121f091168314612173565b6001600160a01b0381169283156123e2578261230b57506099549084600052609a60205281604060002055600160401b8210156110095761224a85611fd3846001600080516020612a0a8339815191529601609955611d48565b6000908385036122d7575b50612272836001600160a01b0361226b88611e02565b1614612173565b8481526069602052604081206001600160601b0360a01b8154169055828152606860205260408120600019815401905583815260686020526040812060018154019055848152606760205260408120846001600160601b0360a01b82541617905580a4565b6122e090611e28565b8482526097602052604082208183526020528560408320558582526098602052604082205538612255565b838303612329575b50600080516020612a0a8339815191529061224a565b61233290611e28565b6000198101919082116123cc57600080516020612a0a83398151915291856000526098602052604060002054818103612399575b50856000526098602052600060408120558360005260976020526040600020906000526020526000604081205590612313565b60008581526097602090815260408083208584528252808320548484528184208190558352609890915290205538612366565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b1561243a57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b156124ed57565b60405162461bcd60e51b81528061250660048201612493565b0390fd5b9061251482611b38565b6125216040519182611b17565b8281528092612532601f1991611b38565b0190602036910137565b91823b1561264e57612582926020926000604051809681958294630a85bd0160e11b84523360048501528460248501526044840152608060648401526084830190611a71565b03926001600160a01b03165af1809160009161260b575b50906125f5573d156125ee573d6125af81611b38565b906125bd6040519283611b17565b81523d6000602083013e5b805190816125e95760405162461bcd60e51b81528061250660048201612493565b602001fd5b60606125c8565b6001600160e01b031916630a85bd0160e11b1490565b6020813d602011612646575b8161262460209383611b17565b810103126102c05751906001600160e01b0319821682036102bd575038612599565b3d9150612617565b505050600190565b919290803b156126a65761258293600060209460405196879586948593630a85bd0160e11b855233600486015260018060a01b031660248501526044840152608060648401526084830190611a71565b50505050600190565b9060418151146000146126dd576126d9916020820151906060604084015193015160001a906128fd565b9091565b5050600090600290565b60058110156127eb57806126f85750565b600181036127455760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b600281036127925760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b60031461279b57565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b60009072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8110156128db575b806d04ee2d6d415b85acef8100000000600a9210156128c0575b662386f26fc100008110156128ac575b6305f5e10081101561289b575b61271081101561288c575b606481101561287e575b10156128785790565b60010190565b60646002910492019161286f565b61271060049104920191612865565b6305f5e1006008910492019161285a565b662386f26fc100006010910492019161284d565b6d04ee2d6d415b85acef81000000006020910492019161283d565b6040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b9004612823565b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116129715760209360009360ff60809460405194855216868401526040830152606082015282805260015afa15610352576000516001600160a01b038116156129685790600090565b50600090600190565b50505050600090600390565b1561298457565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fdfeaeaa1900807496622919380e44cfa49d0f4572fa02867dcea7748d8c9a5078665a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220b1538aa93f1783c14071fb90eb2ac03532631a99ba8474a6b76e9874ad917d7464736f6c634300081a0033";

type PrimexNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrimexNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrimexNFT__factory extends ContractFactory {
  constructor(...args: PrimexNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PrimexNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrimexNFT__factory {
    return super.connect(runner) as PrimexNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrimexNFTInterface {
    return new Interface(_abi) as PrimexNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PrimexNFT {
    return new Contract(address, _abi, runner) as unknown as PrimexNFT;
  }
}
