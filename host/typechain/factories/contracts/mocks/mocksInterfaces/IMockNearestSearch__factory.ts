/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IMockNearestSearch,
  IMockNearestSearchInterface,
} from "../../../../contracts/mocks/mocksInterfaces/IMockNearestSearch";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bonusDeadline",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_timetamps",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_currentIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_bucket",
        type: "address",
      },
    ],
    name: "searchNearestIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_timestamps",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_indexes",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "_bucket",
        type: "address",
      },
    ],
    name: "setIndexes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IMockNearestSearch__factory {
  static readonly abi = _abi;
  static createInterface(): IMockNearestSearchInterface {
    return new Interface(_abi) as IMockNearestSearchInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IMockNearestSearch {
    return new Contract(address, _abi, runner) as unknown as IMockNearestSearch;
  }
}
