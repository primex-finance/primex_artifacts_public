/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PrimexPricingLibraryMock,
  PrimexPricingLibraryMockInterface,
} from "../../../contracts/mocks/PrimexPricingLibraryMock";

const _abi = [
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
        ],
        internalType: "struct IDexAdapter.AmountParams",
        name: "_params",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "_isThirdAsset",
        type: "bool",
      },
      {
        internalType: "address payable",
        name: "_dexAdapter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_oracleData",
        type: "bytes",
      },
    ],
    name: "getDepositAmountInBorrowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bucket",
        type: "address",
      },
      {
        internalType: "address",
        name: "_positionAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_positionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_positionDebt",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_primexDNS",
        type: "address",
      },
    ],
    name: "getLiquidationPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bucket",
        type: "address",
      },
      {
        internalType: "address",
        name: "_positionAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_limitPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_leverage",
        type: "uint256",
      },
    ],
    name: "getLiquidationPriceByOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountAssetA",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_oracleData",
        type: "bytes",
      },
    ],
    name: "getOracleAmountsOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountTokenA",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct PrimexPricingLibrary.MegaSwapParams",
        name: "_params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_maximumOracleTolerableLimit",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_dexAdapter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_needOracleTolerableLimitCheck",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "_oracleData",
        type: "bytes",
      },
    ],
    name: "megaSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610deb908161001c8239f35b600080fdfe608060408181526004908136101561001657600080fd5b600092833560e01c90816360e7c0e41461042f57508063735aad251461036157806388e9d31b1461031f5780639c6ab21f146101f15763f1803dff1461005b57600080fd5b346101c7576003199160a0368401126101ed57803567ffffffffffffffff938482116101e9578183019460808284360301126101e557602435918215158093036101e1576100a7610554565b966100b06104fc565b926084359081116101dd576100c89036908801610526565b9390958851998a98630e6e928f60e41b8a52890160a09052600160a01b60019003938492836100f683610512565b1660a48c01528361010960248301610512565b1660c48c0152604481013560e48c0152606401610125916105a2565b6101048b01608090526101248b019061013d9261063e565b9660248a015216604488015216606486015284830301608485015261016192610609565b038273__$75df3f6366b0557754cd3ba14359105414$__91815a93602094f49182156101d3578392610198575b6020838351908152f35b9091506020813d82116101cb575b816101b36020938361056a565b810103126101c7576020925051903861018e565b8280fd5b3d91506101a6565b81513d85823e3d90fd5b8980fd5b8780fd5b8680fd5b8580fd5b8380fd5b50346101c7576003199160c0368401126101ed5767ffffffffffffffff81358181116101e9578083019460c08183360301126101e55761022f610554565b906102386104fc565b93608435908115158092036101dd5760a4359081116101dd5761025e9036908801610526565b9390958851998a98632489c00560e21b8a52890160c09052600160a01b6001900392818461028c8194610512565b1660c48c01528261029f60248b01610512565b1660e48c015260448901356101048c0152606489016102bd916105a2565b6101248c0160c090526101848c01906102d59261063e565b97826102e360848301610512565b166101448c015260a401356101648b015260243560248b015216604489015216606487015260848601528483030160a485015261016192610609565b83823461035d57608036600319011261035d576020906103566103406104cb565b6103486104e6565b9060643591604435916107e1565b9051908152f35b5080fd5b50346101c75760a03660031901126101c75761037b6104cb565b916103846104e6565b9261038d6104fc565b9360843567ffffffffffffffff81116101e5576020936103b36103ff9236908301610526565b875163735aad2560e01b81526001600160a01b03968716938101939093529385166024830152604480359083015293909616606487015260a060848701528592839260a4840191610609565b038173__$75df3f6366b0557754cd3ba14359105414$__5af49182156101d3578392610198576020838351908152f35b929050346101ed5760a03660031901126101ed5761044b6104cb565b6104536104e6565b6001600160a01b03608435818116949193908590036101e157631839f03960e21b875283169086015216602484015260448035908401526064803590840152608483015260208260a48173__$75df3f6366b0557754cd3ba14359105414$__5af49182156101d3578392610198576020838351908152f35b600435906001600160a01b03821682036104e157565b600080fd5b602435906001600160a01b03821682036104e157565b606435906001600160a01b03821682036104e157565b35906001600160a01b03821682036104e157565b9181601f840112156104e15782359167ffffffffffffffff83116104e157602083818601950101116104e157565b604435906001600160a01b03821682036104e157565b90601f8019910116810190811067ffffffffffffffff82111761058c57604052565b634e487b7160e01b600052604160045260246000fd5b9035601e19823603018112156104e157016020813591019167ffffffffffffffff82116104e1578160051b360383136104e157565b9035601e19823603018112156104e157016020813591019167ffffffffffffffff82116104e15781360383136104e157565b908060209392818452848401376000828201840152601f01601f1916010190565b9035603e19823603018112156104e1570190565b90916020818481520192600591602082841b82010194846000925b84841061066a575050505050505090565b90919293949596601f19828203018452610684888461062a565b61069a60408301918035845260208101906105a2565b839192604060208396015252606081016060848b1b83010193836000905b8282106106dc57505050505050602080600192990194019401929594939190610659565b909192939495605f9e9d9e198682030185526106f8878361062a565b6040820191908e90610722906001600160a01b0361071582610512565b16845260208101906105a2565b839194604060208396015252606083818301931b8201019380936000925b8184106107685750505050505060209d9e9d80600192980195019201909493949291926106b8565b909192939495605f198282030186528635605e19853603018112156104e15760206107d360019387839401906107c56107b26107a484806105d7565b606085526060850191610609565b92858101358684015260408101906105d7565b916040818503910152610609565b980196019401929190610740565b906001600160a01b0390818116908115610cf057670de0b6b3a764000095868114610ce4576040918251906080820182811067ffffffffffffffff82111761058c57845260209081830197600097888a52868501948986526024888360608401958d87521680845281519283809263a4c1cccb60e01b825260049e8f8301525afa908115610b78578b91610cac575b5015610c9c578885838351168a5192838092631e46e62f60e21b82525afa908115610b78578c848c9389938f91610c5f575b50168091528a5192838092632630c12f60e01b82525afa908115610b78579083918c91610c25575b501686528885838351168a519283809263011ddaef60e71b82525afa908115610b78578a92879285928e91610be6575b5082168652511689519283809263280188b760e21b82525afa908115610bdc578a91610baf575b50670de0b6b3a763ffff19870190878211610b34576109448e9261094992610d66565b610d22565b04998885838351168a51928380926301ddf49360e61b82525afa908115610b78578b91610b82575b508d03908d8211610b3457518351895163a8905dab60e01b81526001600160a01b03808816828e0190815292861616602083015291879183918616908290819060400103915afa908115610b78578b91610b47575b508d03908d8211610b345791808e6109e7610944899795610a229997610d66565b04975116915116918851809581948293631dae49b960e21b84528d840190602090939293604083019460018060a01b03809216845216910152565b03915afa918215610b2a578792610afc575b5050880390888211610ae957889283610a56610944610a5c9561094495610d66565b04610d66565b049386810290808204881481151715610ad65787820403610ac8578460011c810193848211610ab557508310610aa857505091610a9f61094492610aa494610d02565b610d66565b0490565b51630a77254f60e01b8152fd5b634e487b7160e01b815260118452602490fd5b5051631550e8b760e01b8152fd5b634e487b7160e01b855260118452602485fd5b634e487b7160e01b865260118552602486fd5b90809250813d8311610b23575b610b13818361056a565b810103126101e957513880610a34565b503d610b09565b85513d89823e3d90fd5b634e487b7160e01b8b5260118a5260248bfd5b90508581813d8311610b71575b610b5e818361056a565b81010312610b6d5751386109c6565b8a80fd5b503d610b54565b89513d8d823e3d90fd5b90508581813d8311610ba8575b610b99818361056a565b81010312610b6d575138610971565b503d610b8f565b90508481813d8311610bd5575b610bc6818361056a565b810103126101dd575138610921565b503d610bbc565b88513d8c823e3d90fd5b93925050925081813d8311610c1e575b610c00818361056a565b81010312610b6d57518281168103610b6d57828a92818893906108fa565b503d610bf6565b809250878092503d8311610c58575b610c3e818361056a565b81010312610b6d57518281168103610b6d578290386108ca565b503d610c34565b945050505081813d8311610c95575b610c78818361056a565b81010312610b6d57518281168103610b6d57858c848c93386108a2565b503d610c6e565b8751630859dc9b60e31b81528990fd5b90508881813d8311610cdd575b610cc3818361056a565b81010312610b6d578501518015158103610b6d5738610870565b503d610cb9565b50505050505050600090565b60405163044aa57560e41b8152600490fd5b8115610d0c570490565b634e487b7160e01b600052601260045260246000fd5b906706f05b59d3b20000820191828111610d50578210610d3e57565b604051630a77254f60e01b8152600490fd5b634e487b7160e01b600052601160045260246000fd5b600092918015918215610d8f575b505015610d7d57565b604051631550e8b760e01b8152600490fd5b80820294509150811582850482141715610d5057610dad9084610d02565b143880610d7456fea264697066735822122050c55a51922bf3b7712020fcd11e5d7368b6903b54bf957c888ee65633a1a90964736f6c63430008120033";

type PrimexPricingLibraryMockConstructorParams =
  | [
      linkLibraryAddresses: PrimexPricingLibraryMockLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrimexPricingLibraryMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PrimexPricingLibraryMock__factory extends ContractFactory {
  constructor(...args: PrimexPricingLibraryMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PrimexPricingLibraryMock__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PrimexPricingLibraryMockLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$75df3f6366b0557754cd3ba14359105414\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PrimexPricingLibraryMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PrimexPricingLibraryMock__factory {
    return super.connect(runner) as PrimexPricingLibraryMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrimexPricingLibraryMockInterface {
    return new Interface(_abi) as PrimexPricingLibraryMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrimexPricingLibraryMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PrimexPricingLibraryMock;
  }
}

export interface PrimexPricingLibraryMockLibraryAddresses {
  ["contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"]: string;
}
