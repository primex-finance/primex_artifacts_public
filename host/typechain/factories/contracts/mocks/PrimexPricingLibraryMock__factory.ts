/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PrimexPricingLibraryMock,
  PrimexPricingLibraryMockInterface,
} from "../../../contracts/mocks/PrimexPricingLibraryMock";

const _abi = [
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
        ],
        internalType: "struct IDexAdapter.AmountParams",
        name: "_params",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "_isThirdAsset",
        type: "bool",
      },
      {
        internalType: "address payable",
        name: "_dexAdapter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_oracleData",
        type: "bytes",
      },
    ],
    name: "getDepositAmountInBorrowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bucket",
        type: "address",
      },
      {
        internalType: "address",
        name: "_positionAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_positionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_positionDebt",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_primexDNS",
        type: "address",
      },
    ],
    name: "getLiquidationPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bucket",
        type: "address",
      },
      {
        internalType: "address",
        name: "_positionAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_limitPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_leverage",
        type: "uint256",
      },
    ],
    name: "getLiquidationPriceByOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountAssetA",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_oracleData",
        type: "bytes",
      },
    ],
    name: "getOracleAmountsOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountTokenA",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct PrimexPricingLibrary.MegaSwapParams",
        name: "_params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_maximumOracleTolerableLimit",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_dexAdapter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_needOracleTolerableLimitCheck",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "_oracleData",
        type: "bytes",
      },
    ],
    name: "megaSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601557610e65908161001b8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816360e7c0e41461042657508063735aad251461038657806388e9d31b1461034a5780639c6ab21f146101f15763f1803dff1461005657600080fd5b346101d85760a03660031901126101d85760043567ffffffffffffffff81116101d8578060040190608060031982360301126101d857602435908115158092036101d8576100a261054b565b906100ab6104f3565b926084359067ffffffffffffffff82116101d8576020946064946100d661017b94369060040161051d565b92909161014c6101396040519b8c9a8b9a630e6e928f60e41b8c5260a060048d015260018060a01b0361010884610509565b1660a48d01526001600160a01b0361012260248301610509565b1660c48d0152604481013560e48d01520190610b8b565b60806101048b01526101248a0191610c06565b60248801959095526001600160a01b039081166044880152166064860152848303600319016084860152610599565b038173__$75df3f6366b0557754cd3ba14359105414$__5af480156101e5576000906101ad575b602090604051908152f35b506020813d6020116101dd575b816101c760209383610561565b810103126101d857602090516101a2565b600080fd5b3d91506101ba565b6040513d6000823e3d90fd5b346101d85760c03660031901126101d85760043567ffffffffffffffff81116101d857806004019060c060031982360301126101d85761022f61054b565b906102386104f3565b92608435918215158093036101d85760a4359067ffffffffffffffff82116101d8576102f2956020956102df9561027661017b95369060040161051d565b604051632489c00560e21b815260c060048201529a8b998a99929693959260a49291906001600160a01b036102aa82610509565b1660c48d01526001600160a01b036102c460248c01610509565b1660e48d015260448a01356101048d015260648a0190610b8b565b60c06101248d01526101848c0191610c06565b966001600160a01b0361030760848301610509565b166101448b0152013561016489015260248035908901526001600160a01b03908116604489015216606487015260848601528483036003190160a4860152610599565b346101d85760803660031901126101d857602061037e6103686104c7565b6103706104dd565b9060643591604435916105ba565b604051908152f35b346101d85760a03660031901126101d85761039f6104c7565b6103a76104dd565b906103b06104f3565b916084359167ffffffffffffffff83116101d85761017b6103d7602094369060040161051d565b60405163735aad2560e01b81526001600160a01b0394851660048201529484166024860152604480359086015295909216606484015260a06084840152919384928392909160a4840191610599565b346101d85760a03660031901126101d85761043f6104c7565b6104476104dd565b6084356001600160a01b03811692908390036101d857631839f03960e21b84526001600160a01b03908116600485015216602483015260448035908301526064803590830152608482015260208160a48173__$75df3f6366b0557754cd3ba14359105414$__5af480156101e5576000906101ad57602090604051908152f35b600435906001600160a01b03821682036101d857565b602435906001600160a01b03821682036101d857565b606435906001600160a01b03821682036101d857565b35906001600160a01b03821682036101d857565b9181601f840112156101d85782359167ffffffffffffffff83116101d857602083818601950101116101d857565b604435906001600160a01b03821682036101d857565b90601f8019910116810190811067ffffffffffffffff82111761058357604052565b634e487b7160e01b600052604160045260246000fd5b908060209392818452848401376000828201840152601f01601f1916010190565b926000916001600160a01b038116908115610b7957670de0b6b3a76400008314610b7057604051956080870187811067ffffffffffffffff821117610b5c57604052602087019685885260408101938685526040606083019388855260018060a01b031691828452602482518094819363a4c1cccb60e01b835260048301525afa9081156109c6578791610b1e575b5015610b0c578051604051631e46e62f60e21b815290602090829060049082906001600160a01b03165afa9081156109c6578791610ac9575b506001600160a01b0316808952604051632630c12f60e01b815290602090829060049082905afa9081156109c6578791610a87575b506001600160a01b039081168552815160405163011ddaef60e71b81529160209183916004918391165afa9081156109c6578791610a44575b506001600160a01b039081168352905160405163280188b760e21b81529160209183916004918391165afa908115610a39578691610a03575b50670de0b6b3a763ffff1985019085821161097c579061074891610dce565b87516040516301ddf49360e61b815291989190602090829060049082906001600160a01b03165afa9081156109c65787916109d1575b50670de0b6b3a76400000390670de0b6b3a7640000821161097c5751825160405163a8905dab60e01b81526001600160a01b03868116600483015291821660248201529160209183916044918391165afa9081156109c6578791610990575b50670de0b6b3a76400000390670de0b6b3a7640000821161097c57916108096108449492602094610dce565b94519051604051631dae49b960e21b81526001600160a01b039384166004820152908316602482015293849290911690829081906044820190565b03915afa90811561097157849161093b575b50670de0b6b3a76400000390670de0b6b3a7640000821161092757610884929161087f91610dce565b610dce565b92670de0b6b3a7640000810291818304670de0b6b3a764000014821517156109135750670de0b6b3a7640000820403610902578260011c8101908181116108ec5781106108db576108d89261087f91610dae565b90565b630a77254f60e01b60005260046000fd5b634e487b7160e01b600052601160045260246000fd5b631550e8b760e01b60005260046000fd5b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b84526011600452602484fd5b90506020813d602011610969575b8161095660209383610561565b81010312610965575138610856565b8380fd5b3d9150610949565b6040513d86823e3d90fd5b634e487b7160e01b87526011600452602487fd5b90506020813d6020116109be575b816109ab60209383610561565b810103126109ba5751386107dd565b8680fd5b3d915061099e565b6040513d89823e3d90fd5b90506020813d6020116109fb575b816109ec60209383610561565b810103126109ba57513861077e565b3d91506109df565b90506020813d602011610a31575b81610a1e60209383610561565b81010312610a2d575138610729565b8580fd5b3d9150610a11565b6040513d88823e3d90fd5b90506020813d602011610a7f575b81610a5f60209383610561565b810103126109ba57516001600160a01b03811681036109ba5760046106f0565b3d9150610a52565b90506020813d602011610ac1575b81610aa260209383610561565b810103126109ba57516001600160a01b03811681036109ba57386106b7565b3d9150610a95565b90506020813d602011610b04575b81610ae460209383610561565b810103126109ba57516001600160a01b03811681036109ba576020610682565b3d9150610ad7565b604051630859dc9b60e31b8152600490fd5b90506040813d604011610b54575b81610b3960409383610561565b810103126109ba576020015180151581036109ba5738610649565b3d9150610b2c565b634e487b7160e01b86526041600452602486fd5b50505091505090565b60405163044aa57560e41b8152600490fd5b9035601e19823603018112156101d857016020813591019167ffffffffffffffff82116101d8578160051b360383136101d857565b9035601e19823603018112156101d857016020813591019167ffffffffffffffff82116101d85781360383136101d857565b9035603e19823603018112156101d8570190565b8183526020600583901b8401810193926000918401835b828410610c2d5750505050505090565b90919293949695601f19888203018352610c478683610bf2565b610c5d6040830191803584526020810190610b8b565b839192604060208396015252606081019060608460051b82010193836000905b828210610ca3575050505050506020806001929701930194019291939096949596610c1d565b909192939495605f9d9c9b9d19858203018652610cc08783610bf2565b604082019190610ce8906001600160a01b03610cdb82610509565b1683526020810190610b8b565b829193604060208395015252606081019060608360051b820101938093600092605e1983360301925b828510610d3957505050505050506020809d9e9c9d6001929801960192019093929193610c7d565b90919293949596605f198382030187528735858112156101d8576020610d9f6001938583940190610d91610d7e610d708480610bc0565b606085526060850191610599565b9285810135868401526040810190610bc0565b916040818503910152610599565b99019701950193929190610d11565b8115610db8570490565b634e487b7160e01b600052601260045260246000fd5b6000918015918215610e09575b505015610902576706f05b59d3b200008101908181116108ec5781106108db57670de0b6b3a7640000900490565b808202935091508115828404821417156108ec57610e279083610dae565b143880610ddb56fea2646970667358221220b396b05f4f450622471816ea1fdf3e81e9be15126946e061b026fc27b0eb825664736f6c634300081a0033";

type PrimexPricingLibraryMockConstructorParams =
  | [
      linkLibraryAddresses: PrimexPricingLibraryMockLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrimexPricingLibraryMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PrimexPricingLibraryMock__factory extends ContractFactory {
  constructor(...args: PrimexPricingLibraryMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PrimexPricingLibraryMock__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PrimexPricingLibraryMockLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$75df3f6366b0557754cd3ba14359105414\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PrimexPricingLibraryMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PrimexPricingLibraryMock__factory {
    return super.connect(runner) as PrimexPricingLibraryMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrimexPricingLibraryMockInterface {
    return new Interface(_abi) as PrimexPricingLibraryMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrimexPricingLibraryMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PrimexPricingLibraryMock;
  }
}

export interface PrimexPricingLibraryMockLibraryAddresses {
  ["contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"]: string;
}
