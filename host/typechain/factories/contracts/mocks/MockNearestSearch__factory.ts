/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockNearestSearch,
  MockNearestSearchInterface,
} from "../../../contracts/mocks/MockNearestSearch";

const _abi = [
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "activateBonus",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bucketBonusCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bucket",
        type: "address",
      },
    ],
    name: "deactivateBonus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getAccumulatedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftId",
        type: "uint256",
      },
    ],
    name: "getAvailableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftId",
        type: "uint256",
      },
    ],
    name: "getBonus",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nftId",
            type: "uint256",
          },
          {
            internalType: "contract IBucketV3",
            name: "bucket",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "percent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "accumulatedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdatedIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IFeeExecutorStorage.ActivatedBonus",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "indexes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPMXBonusNFT",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_primexDNS",
        type: "address",
      },
      {
        internalType: "contract IWhiteBlackList",
        name: "_whiteBlackList",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nft",
    outputs: [
      {
        internalType: "contract IPMXBonusNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "primexDNS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bonusDeadline",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_timetamps",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_currentIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_bucket",
        type: "address",
      },
    ],
    name: "searchNearestIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_timestamps",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_indexes",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "_bucket",
        type: "address",
      },
    ],
    name: "setIndexes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bucket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxCount",
        type: "uint256",
      },
    ],
    name: "setMaxBonusCount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bucket",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_tiers",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "percent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
        ],
        internalType: "struct IFeeExecutorStorage.NFTBonusParams[]",
        name: "_bonuses",
        type: "tuple[]",
      },
    ],
    name: "setTierBonus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tierBonus",
    outputs: [
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "updateBonus",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "updateBonus",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_users",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_oldBalances",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "_bucket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_currentIndex",
        type: "uint256",
      },
    ],
    name: "updateBonuses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "updatedTimestamps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460bd576000549060ff8260081c16606b575060ff808216036031575b60405161179e90816100c38239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a1386022565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a71461110d57508063171a89641461102c57806319f6c21f14610f29578063227a87dd14610ee05780632911438d14610e3957806332353ae814610d785780633ce917ab14610d565780633f4a2d2714610d2d5780633f4ba83a14610c1b578063442b4a2614610b505780634485b50114610ab257806347ccca0214610a895780635c975abb14610a665780636f7ee4da14610a235780637b103999146109fa5780638004298e146109d55780638456cb59146108c45780639f8dbb7b146108b1578063a13a944b14610857578063bd6846aa146106a2578063c34902631461068f578063c4ee93661461066b578063ced3f0291461060b578063ec1dfe71146104835763f8c8765e1461013257600080fd5b3461047e57608036600319011261047e576004356001600160a01b0381169081900361047e5761016061120e565b6101686111cc565b6064356001600160a01b03811692919083900361047e576000549260ff8460081c161593848095610471575b801561045a575b156103fe5760ff198116600117600055846103ec575b506000549460ff8660081c16926101c7846115e5565b60018060a01b03166001600160601b0360a01b60ff54161760ff556101eb836115e5565b6040516301ffc9a760e01b8152633694124d60e21b6004820152602081602481855afa908115610360576000916103cd575b508061036c575b806102f8575b156102e6576102ab9360018060a01b03166001600160601b0360a01b60ca54161760ca556001600160601b0360a01b60c954161760c9556001600160601b0360a01b60cc54161760cc5561027d816115e5565b610286816115e5565b60018055610293816115e5565b61029c816115e5565b60ff19606554166065556115e5565b6102b157005b61ff0019166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b60405163044aa57560e41b8152600490fd5b506040516301ffc9a760e01b8152633df6cef760e01b6004820152602081602481865afa90811561036057600091610331575b5061022a565b610353915060203d602011610359575b61034b8183611194565b8101906112c3565b3861032b565b503d610341565b6040513d6000823e3d90fd5b506040516301ffc9a760e01b8152637965db0b60e01b60048201526020816024816001600160a01b0389165afa908115610360576000916103ae575b50610224565b6103c7915060203d6020116103595761034b8183611194565b386103a8565b6103e6915060203d6020116103595761034b8183611194565b3861021d565b61ffff191661010117600055386101b1565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b15801561019b5750600160ff82161461019b565b50600160ff821610610194565b600080fd5b3461047e57604036600319011261047e5761049c6111f8565b600060e06040516104ac81611178565b8281528260208201528260408201528260608201528260808201528260a08201528260c0820152015260018060a01b031660005261010360205260406000206024600060018060a01b0360c95416604051928380926341f63bfd60e01b8252823560048301525afa91821561036057610100926040926000916105e8575b50516001600160a01b031660009081526020919091522060405161054d81611178565b81549182825260018060a01b0360018201541660208301908152600282015460408401908152600383015460608501908152608085019160058501549360a0870194855260e0600760068801549760c08a01988952015497019687526000845260405197885260018060a01b0390511660208801525160408701525160608601525160808501525160a08401525160c08301525160e0820152f35b61060591503d806000833e6105fd8183611194565b8101906112ef565b8461052a565b3461047e57604036600319011261047e576001600160a01b0361062c6111f8565b16600052610100602052604060002060243560005260205260606040600020805490600260018201549101549060405192835260208301526040820152f35b3461047e57608036600319011261047e576106846111f8565b5061068d6111cc565b005b3461047e57604036600319011261047e57005b3461047e57606036600319011261047e576106bb6111f8565b602435906001600160401b03821161047e573660238301121561047e5781600401356001600160401b03811161047e573660248260051b8501011161047e57604435926001600160401b03841161047e573660238501121561047e5783600401356001600160401b03811161047e576024850194602436916060840201011161047e5760ca54604051632474521560e21b81526000600482015233602482015290602090829060449082906001600160a01b03165afa90811561036057600091610838575b5015610826578083036108145791926001600160a01b03169160005b8481101561068d576107af8183886113f9565b351561080257806107c360019284896113f9565b8560005261010060205260026040808060002060009060248760051b8b010135825260205220928035845560208101358685015501359101550161079c565b604051637000f68560e11b8152600490fd5b604051632aa3c3bf60e11b8152600490fd5b60405163036be76f60e61b8152600490fd5b610851915060203d6020116103595761034b8183611194565b86610780565b3461047e57604036600319011261047e576108706111f8565b6001600160a01b03166000908152610102602052604090208054602435919082101561047e576020916108a291611281565b90549060031b1c604051908152f35b3461047e57602036600319011261047e57005b3461047e57600036600319011261047e5760ca54604051632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb600482015233602482015290602090829060449082906001600160a01b03165afa908115610360576000916109b6575b50156108265760655460ff811661097e5760019060ff1916176065557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b6109cf915060203d6020116103595761034b8183611194565b81610936565b3461047e57604036600319011261047e576109ee6111f8565b50602060405160008152f35b3461047e57600036600319011261047e5760ca546040516001600160a01b039091168152602090f35b3461047e57602036600319011261047e576001600160a01b03610a446111f8565b1660005260cb6020526040806000206001815491015482519182526020820152f35b3461047e57600036600319011261047e57602060ff606554166040519015158152f35b3461047e57600036600319011261047e5760c9546040516001600160a01b039091168152602090f35b3461047e57604036600319011261047e57610acb6111f8565b610ad361120e565b60c9546001600160a01b03163303610b3e57604060079160009360018060a01b03168452610103602052818420849160018060a01b03168252602052208281558260018201558260028201558260038201558260048201558260058201558260068201550155600080f35b604051632a4b45b760e11b8152600490fd5b3461047e57604036600319011261047e576001600160a01b03610b716111f8565b1660005261010360205260406000206024600060018060a01b0360c95416604051928380926341f63bfd60e01b8252823560048301525afa90811561036057600091610c00575b50516001600160a01b0316600090815260209190915260408120600701549081900390610bea57602090604051908152f35b634e487b7160e01b600052601160045260246000fd5b610c1591503d806000833e6105fd8183611194565b82610bb8565b3461047e57600036600319011261047e5760ca54604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8600482015233602482015290602090829060449082906001600160a01b03165afa90811561036057600091610d0e575b50156108265760655460ff811615610cd25760ff19166065557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b610d27915060203d6020116103595761034b8183611194565b81610c8d565b3461047e57600036600319011261047e5760ff546040516001600160a01b039091168152602090f35b3461047e57608036600319011261047e57610d6f6111cc565b5061068d6111e2565b3461047e57604036600319011261047e57610d916111f8565b60ca54604051632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b63600482015233602482015290602090829060449082906001600160a01b03165afa90811561036057600091610e1a575b5015610826576001600160a01b0316600090815260cb60205260409020602435600190910155005b610e33915060203d6020116103595761034b8183611194565b82610df2565b3461047e57606036600319011261047e576004356001600160401b03811161047e57610e69903690600401611224565b6024356001600160401b03811161047e57610e88903690600401611224565b90610e916111cc565b6001600160a01b031660005b825181101561068d5780610eb3600192866112af565b51836000526101016020526040600020610ecd83876112af565b5160005260205260406000205501610e9d565b3461047e57604036600319011261047e576001600160a01b03610f016111f8565b1660005261010160205260406000206024356000526020526020604060002054604051908152f35b3461047e57608036600319011261047e576024356001600160401b03811161047e57610f59903690600401611224565b610f616111e2565b6001600160a01b038116600090815261010260205260409020825191926001600160401b03831161101657680100000000000000008311611016578154838355808410610fed575b5060200190600052602060002060005b838110610fd9576020610fd186604435600435611436565b604051908152f35b600190602084519401938184015501610fb9565b8260005283602060002091820191015b81811061100a5750610fa9565b60008155600101610ffd565b634e487b7160e01b600052604160045260246000fd5b3461047e57608036600319011261047e576004356001600160401b03811161047e573660238201121561047e578060040135611067816111b5565b916110756040519384611194565b8183526024602084019260051b8201019036821161047e57602401915b8183106110ed57836024356001600160401b03811161047e576110b9903690600401611224565b6110c16111cc565b5060005b825181101561068d57806110db600192856112af565b506110e681846112af565b50016110c5565b82356001600160a01b038116810361047e57815260209283019201611092565b3461047e57602036600319011261047e576004359063ffffffff60e01b821680920361047e576020916301ffc9a760e01b8114908115611167575b8115611156575b5015158152f35b636c91bd0560e11b1490508361114f565b63cedc502360e01b81149150611148565b61010081019081106001600160401b0382111761101657604052565b90601f801991011681019081106001600160401b0382111761101657604052565b6001600160401b0381116110165760051b60200190565b604435906001600160a01b038216820361047e57565b606435906001600160a01b038216820361047e57565b600435906001600160a01b038216820361047e57565b602435906001600160a01b038216820361047e57565b9080601f8301121561047e57813561123b816111b5565b926112496040519485611194565b81845260208085019260051b82010192831161047e57602001905b8282106112715750505090565b8135815260209182019101611264565b80548210156112995760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b80518210156112995760209160051b010190565b9081602091031261047e5751801515810361047e5790565b51906001600160a01b038216820361047e57565b60208183031261047e578051906001600160401b03821161047e57019060a08282031261047e576040519160a083018381106001600160401b038211176110165760405261133c816112db565b8352602081015160208401526040810151604084015261135e606082016112db565b60608401526080810151906001600160401b03821161047e570181601f8201121561047e578051906001600160401b03821161101657604051926113ac601f8401601f191660200185611194565b8284526020838301011161047e5760005b8281106113d7575050602060009183010152608082015290565b806020809284010151828287010152016113bd565b91908203918211610bea57565b9190811015611299576060020190565b91908201809211610bea57565b8115611420570490565b634e487b7160e01b600052601260045260246000fd5b6001600160a01b0390921660008181526101026020526040812054919493926000198301928311610bea57828660005261010260205261147a816040600020611281565b90549060031b1c908186119081156115dc575b506115b05750505b818110611523575b906114da6114be869361152096976000526101026020526040600020611281565b90549060031b1c91836000526101026020526040600020611281565b90549060031b1c91806000526101016020526040600020826000526020526040600020549060005261010160205260406000208360005260205260406000205490611645565b90565b906000198101818111610bea5782146115aa576115408183611409565b60011c908560005261010260205261155c826040600020611281565b90549060031b1c80851060001461157557505090611495565b909250808411156115865750611495565b93949250505060005261010160205260406000209060005260205260406000205490565b9061149d565b915091506115209394600052610101602052604060002081600052602052604060002054914292611645565b9050153861148d565b156115ec57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b929161165e8161165886611664956113ec565b966113ec565b926113ec565b6000916b033b2e3c9fd0803ce80000008102928184046b033b2e3c9fd0803ce8000000148215171561175457506b033b2e3c9fd0803ce800000083040361171d576116b28160011c83611409565b91821061170c576116c291611416565b91600092801591821561172e575b50501561171d576b019d971e4fe8401e74000000820191828111610bea57821061170c576b033b2e3c9fd0803ce8000000611520920490611409565b630a77254f60e01b60005260046000fd5b631550e8b760e01b60005260046000fd5b80820294509150811582850482141715610bea5761174c9084611416565b1438806116d0565b634e487b7160e01b81526011600452602490fdfea2646970667358221220c7d996ac48d5db795d7dba9960722cfb41bb88ed7a6583fd4ec3ad54258aca7564736f6c634300081a0033";

type MockNearestSearchConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockNearestSearchConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockNearestSearch__factory extends ContractFactory {
  constructor(...args: MockNearestSearchConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockNearestSearch & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockNearestSearch__factory {
    return super.connect(runner) as MockNearestSearch__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockNearestSearchInterface {
    return new Interface(_abi) as MockNearestSearchInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockNearestSearch {
    return new Contract(address, _abi, runner) as unknown as MockNearestSearch;
  }
}
