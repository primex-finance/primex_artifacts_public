/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ReserveV2,
  ReserveV2Interface,
} from "../../../../contracts/mocks/upgradeMocks/ReserveV2";

const _abi = [
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
    ],
    name: "BurnAmountCalculated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferFromReserve",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "minAmountToBeLeft",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minPercentOfTotalSupplyToBeLeft",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IReserveStorage.TransferRestrictions",
        name: "newTransferRestrictions",
        type: "tuple",
      },
    ],
    name: "TransferRestrictionsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IPrimexDNSV3",
        name: "_dns",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_bucketName",
        type: "string",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "payBonus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBucketV3",
        name: "_bucket",
        type: "address",
      },
    ],
    name: "paybackPermanentLoss",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "minAmountToBeLeft",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minPercentOfTotalSupplyToBeLeft",
            type: "uint256",
          },
        ],
        internalType: "struct IReserveStorage.TransferRestrictions",
        name: "newTransferRestrictions",
        type: "tuple",
      },
    ],
    name: "setTransferRestrictions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testUpgrade",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "transferRestrictions",
    outputs: [
      {
        internalType: "uint256",
        name: "minAmountToBeLeft",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minPercentOfTotalSupplyToBeLeft",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferToTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460bd576000549060ff8260081c16606b575060ff808216036031575b60405161169790816100c38239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a1386022565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816301ffc9a714611404575080633f4ba83a146112d75780633fa4f245146112b9578063485cc955146110095780635524107714610fee5780635c975abb14610fcb578063600a330d14610e8d5780638456cb5914610d9a5780639607853c14610ab35780639d6aed0b14610a6a5780639dd267e6146104a4578063acc468b2146104615763f7480349146100b057600080fd5b34610271576020366003190112610271576004356001600160a01b0381169081900361045d576100de61161d565b60026065541461041857600260655560c9546040516306fdde0360e01b81526001600160a01b03909116908381600481865afa9081156102d457849161038d575b5060809061014292604051808095819463481d98fb60e11b8352600483016114fc565b03915afa801561033e578291849161035b575b506001600160a01b03160361034957604051634872d32760e01b8152602081600481855afa90811561033e57839161030c575b506040516358a06f0760e01b8152602081600481865afa9081156102d45760249160209186916102df575b506040516370a0823160e01b815230600482015292839182906001600160a01b03165afa9081156102d457849161029d575b508082116102955750905b7f5110ca98aa61b28a2d94d7c3b7c2ed00a1db4336fecf3857e3766d3ee97278946020604051848152a18115610283578291813b1561027f578291602483926040519485938492634f43f23960e01b845260048401525af180156102745761025c575b50600160655580f35b8161026691611485565b610271578038610253565b80fd5b6040513d84823e3d90fd5b5050fd5b604051633ce1751760e21b8152600490fd5b9050906101f0565b90506020813d6020116102cc575b816102b860209383611485565b810103126102c75751386101e5565b600080fd5b3d91506102ab565b6040513d86823e3d90fd5b6102ff9150823d8411610305575b6102f78183611485565b81019061157b565b386101b3565b503d6102ed565b90506020813d602011610336575b8161032760209383611485565b810103126102c7575138610188565b3d915061031a565b6040513d85823e3d90fd5b604051631b7091f560e01b8152600490fd5b61037d915060803d608011610386575b6103758183611485565b810190611549565b50505038610155565b503d61036b565b90503d8085833e61039e8183611485565b8101906020818303126104145780519067ffffffffffffffff821161041057019181601f84011215610414578251916103d6836114bd565b906103e46040519283611485565b838252602084860101116104105761040860809361014295602080850191016114d9565b91509161011f565b8580fd5b8480fd5b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b5080fd5b50346102715760203660031901126102715760409081906001600160a01b0361048861146f565b16815260cb602052206001815491015482519182526020820152f35b5034610271576040366003190112610271576104be61146f565b602435906104ca61161d565b60ca54604051632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b63600482015233602482015290602090829060449082906001600160a01b03165afa9081156102d4578491610a30575b5015610a1e57604051634c66358f60e11b81526001600160a01b03919091169061012081600481855afa80156102d457849061094e575b6020915001511561093c576040516358a06f0760e01b8152602081600481855afa9081156102d457849161091d575b506040516370a0823160e01b81523060048201526001600160a01b03919091169190602081602481865afa9081156109125785916108e0575b5082855260cb60205260408520906105e285835461159a565b81101591826107aa575b5050156107985760c9546040516361d027b360e01b81528591602090829060049082906001600160a01b03165afa90811561027457829161075e575b50823b1561045d5760405163f3fef3a360e01b81526001600160a01b0391909116600482015260248101859052918290604490829084905af180156102d45761074a575b5060c9546040516361d027b360e01b815290602090829060049082906001600160a01b03165afa9081156102d45784916106e4575b50907f478dbd1afe37404eb4ec0d3c4e3e89bfea0891deacfaf6c6b9686831ab253bec9260609260405192835260018060a01b031660208301526040820152a180f35b9190506020823d602011610742575b8161070060209383611485565b8101031261073e577f478dbd1afe37404eb4ec0d3c4e3e89bfea0891deacfaf6c6b9686831ab253bec92610735606093611535565b919250926106a1565b8380fd5b3d91506106f3565b8361075791949294611485565b913861066c565b90506020813d602011610790575b8161077960209383611485565b8101031261045d5761078a90611535565b38610628565b3d915061076c565b60405163d56f855960e01b8152600490fd5b6040516318160ddd60e01b8152919250602082600481885afa9182156108d557879261089c575b506001015486918115918215610851575b505015610842576706f05b59d3b2000081019081811161082e57811061081f5784670de0b6b3a7640000610816920461159a565b111538806105ec565b630a77254f60e01b8652600486fd5b634e487b7160e01b87526011600452602487fd5b631550e8b760e01b8652600486fd5b8181929394500282810482148315171561088857809361087457041438806107e2565b634e487b7160e01b89526012600452602489fd5b634e487b7160e01b89526011600452602489fd5b9091506020813d6020116108cd575b816108b860209383611485565b810103126108c957519060016107d1565b8680fd5b3d91506108ab565b6040513d89823e3d90fd5b90506020813d60201161090a575b816108fb60209383611485565b810103126104145751386105c9565b3d91506108ee565b6040513d87823e3d90fd5b610936915060203d602011610305576102f78183611485565b38610590565b6040516379bb149f60e11b8152600490fd5b50610120813d8211610a16575b816109696101209383611485565b8101031261073e57604051610120810181811067ffffffffffffffff821117610a025760405281516001600160a01b0381168103610410576020926101009183526109b5848201611528565b8484015260408101516040840152606081015160608401526080810151608084015260a081015160a084015260c081015160c084015260e081015160e08401520151610100820152610561565b634e487b7160e01b86526041600452602486fd5b3d915061095b565b60405163036be76f60e61b8152600490fd5b90506020813d602011610a62575b81610a4b60209383611485565b8101031261073e57610a5c90611528565b3861052a565b3d9150610a3e565b503461027157806003193601126102715750610aaf604051610a8d604082611485565b60098152682932b9b2b93b32ab1960b91b6020820152604051918291826114fc565b0390f35b50346102715760603660031901126102715760043567ffffffffffffffff811161045d573660238201121561045d5781816004013591610af2836114bd565b92610b006040519485611485565b8084523660248284010111610d9657806024602093018386013783010152610b526080610b2b611459565b9260018060a01b0360c95416604051808095819463481d98fb60e11b8352600483016114fc565b03915afa90811561033e578391610d74575b506040516358a06f0760e01b8152906001600160a01b0316602082600481845afa9182156102d4578492610d4f575b50602060049160405192838092631f1b131360e31b82525afa9081156102d4578491610d0c575b50604051637988abe160e11b815290602090829060049082906001600160a01b03165afa9081156102d4578491610ced575b506001600160a01b031633148015610c8f575b15610c7d5760405163a9059cbb60e01b81526001600160a01b039283166004820152604480356024830152909260209284929183918791165af1801561027457610c47575080f35b6020813d602011610c75575b81610c6060209383611485565b8101031261045d57610c7190611528565b5080f35b3d9150610c53565b60405163f6bcc85960e01b8152600490fd5b50604051631c585d4d60e21b81526020816004816001600160a01b0386165afa9081156102d4578491610cce575b506001600160a01b03163314610bff565b610ce7915060203d602011610305576102f78183611485565b38610cbd565b610d06915060203d602011610305576102f78183611485565b38610bec565b90506020813d602011610d47575b81610d2760209383611485565b8101031261073e57516001600160a01b038116810361073e576020610bba565b3d9150610d1a565b6004919250610d6c602091823d8411610305576102f78183611485565b929150610b93565b610d8d915060803d608011610386576103758183611485565b50505038610b64565b8280fd5b503461027157806003193601126102715760ca54604051632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb600482015233602482015290602090829060449082906001600160a01b03165afa908115610274578291610e53575b5015610a1e57610e1961161d565b600160ff1960335416176033557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b90506020813d602011610e85575b81610e6e60209383611485565b8101031261045d57610e7f90611528565b38610e0b565b3d9150610e61565b503461027157606036600319011261027157610ea761146f565b604036602319011261045d5760ca54604051632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b63600482015233602482015290602090829060449082906001600160a01b03165afa90811561033e578391610f91575b5015610a1e5760443590670de0b6b3a76400008211610f7f5760407fdcb30d139e0205cf87041969dcdac479c90699e67d7c0e969c66348b792dbe519160018060a01b03169283855260cb6020528185209080600160243593848155015582519182526020820152a280f35b6040516380febb2d60e01b8152600490fd5b90506020813d602011610fc3575b81610fac60209383611485565b81010312610d9657610fbd90611528565b38610f13565b3d9150610f9f565b5034610271578060031936011261027157602060ff603354166040519015158152f35b50346102715760203660031901126102715760043560cc5580f35b5034610271576040366003190112610271576004356001600160a01b0381169081900361045d57611038611459565b9082549160ff8360081c1615928380946112ac575b8015611295575b156112395760ff198116600117855583611228575b506040516301ffc9a760e01b8152633f9940a760e11b6004820152602081602481865afa9081156109125785916111ee575b5080611173575b156111615760018060a01b03166bffffffffffffffffffffffff60a01b60ca54161760ca556bffffffffffffffffffffffff60a01b60c954161760c95581549061111f60ff8360081c166110f5816115bd565b6110fe816115bd565b60ff1960335416603355611111816115bd565b61111a816115bd565b6115bd565b600160655561112c575080f35b61ff00191681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b60405163044aa57560e41b8152600490fd5b506040516301ffc9a760e01b8152637965db0b60e01b60048201526020816024816001600160a01b0386165afa9081156109125785916111b4575b506110a2565b90506020813d6020116111e6575b816111cf60209383611485565b81010312610414576111e090611528565b386111ae565b3d91506111c2565b90506020813d602011611220575b8161120960209383611485565b810103126104145761121a90611528565b3861109b565b3d91506111fc565b61ffff191661010117845538611069565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156110545750600160ff821614611054565b50600160ff82161061104d565b5034610271578060031936011261027157602060cc54604051908152f35b503461027157806003193601126102715760ca54604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8600482015233602482015290602090829060449082906001600160a01b03165afa9081156102745782916113ca575b5015610a1e5760335460ff81161561138e5760ff19166033557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b90506020813d6020116113fc575b816113e560209383611485565b8101031261045d576113f690611528565b38611348565b3d91506113d8565b90503461045d57602036600319011261045d5760043563ffffffff60e01b8116809103610d96576020925063d4cb1bcb60e01b8114908115611448575b5015158152f35b6301ffc9a760e01b14905038611441565b602435906001600160a01b03821682036102c757565b600435906001600160a01b03821682036102c757565b90601f8019910116810190811067ffffffffffffffff8211176114a757604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116114a757601f01601f191660200190565b60005b8381106114ec5750506000910152565b81810151838201526020016114dc565b6040916020825261151c81518092816020860152602086860191016114d9565b601f01601f1916010190565b519081151582036102c757565b51906001600160a01b03821682036102c757565b91908260809103126102c75761155e82611535565b91602081015160038110156102c757916060604083015192015190565b908160209103126102c757516001600160a01b03811681036102c75790565b919082018092116115a757565b634e487b7160e01b600052601160045260246000fd5b156115c457565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b60ff6033541661162957565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fdfea26469706673582212206f3b884d7b93063ad634e081e1aa5d89d44fc9ee7052b2a1b0432ac33fd4180a64736f6c634300081a0033";

type ReserveV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReserveV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReserveV2__factory extends ContractFactory {
  constructor(...args: ReserveV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ReserveV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ReserveV2__factory {
    return super.connect(runner) as ReserveV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReserveV2Interface {
    return new Interface(_abi) as ReserveV2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): ReserveV2 {
    return new Contract(address, _abi, runner) as unknown as ReserveV2;
  }
}
