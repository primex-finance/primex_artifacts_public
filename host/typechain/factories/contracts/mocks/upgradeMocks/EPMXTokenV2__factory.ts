/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  EPMXTokenV2,
  EPMXTokenV2Interface,
} from "../../../../contracts/mocks/upgradeMocks/EPMXTokenV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "WhitelistedAddressAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "WhitelistedAddressRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addAddressToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
    ],
    name: "addAddressesToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "removeAddressFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
    ],
    name: "removeAddressesFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testUpgrade",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604090808252346200055c578181620018f1803803809162000024828562000593565b8339810103126200055c576200003a81620005b7565b906200004a6020809201620005b7565b83518391620000598262000561565b601282527122b0b9363c90283934b6b2bc102a37b5b2b760711b84830152855194620000858662000561565b6004808752630caa09ab60e31b868801528351969094906001600160401b03908189116200054757600390815499600197888c811c9c1680156200053c575b8b8d1014620005275781908b601f9d8e8111620004ce575b50508b908d831160011462000467576000926200045b575b505060001982851b1c191690881b1782555b8051928311620004465787548781811c911680156200043b575b8a821014620004265790818b85949311620003ce575b5089908b8411600114620003635760009362000357575b505082871b92600019911b1c19161785555b87516301ffc9a760e01b8152637965db0b60e01b868201526001600160a01b03939087816024818886165afa9081156200034c5760009162000308575b5015620002f857608052821615620002f0575b16938415620002af5750600080526005835260ff8560002054169081156200029a575b811562000291575b501562000283576002546b033b2e3c9fd0803ce8000000918282018092116200026e575060025560008381528083528481208054830190558451918252917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a3516113249081620005cd82396080518181816101b9015281816106820152818161076301528181610a470152610b6a0152f35b601190634e487b7160e01b6000525260246000fd5b8351636a556bdb60e01b8152fd5b905038620001da565b90508360005260ff85600020541690620001d2565b905060649285519262461bcd60e51b845283015260248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b5033620001af565b885163044aa57560e41b81528690fd5b8881813d831162000344575b62000320818362000593565b810103126200034057519081151582036200033d5750386200019c565b80fd5b5080fd5b503d62000314565b8a513d6000823e3d90fd5b0151915038806200014d565b9190889450601f198416928a6000528b6000209360005b8d828210620003b757505085116200039c575b50505050811b0185556200015f565b01519060f884600019921b161c19169055388080806200038d565b8385015187558c989096019593840193016200037a565b9091925088600052896000208b80860160051c8201928c87106200041c575b918a9187969594930160051c01915b8281106200040c57505062000136565b600081558695508a9101620003fc565b92508192620003ed565b602289634e487b7160e01b6000525260246000fd5b90607f169062000120565b604188634e487b7160e01b6000525260246000fd5b015190503880620000f4565b60008681528d81208c9550929190601f198516908f5b828210620004b657505084116200049d575b505050811b01825562000106565b015160001983871b60f8161c191690553880806200048f565b8385015186558e979095019493840193018f6200047d565b90919250856000528d826000209181860160051c83019386106200051d575b918c91869594930160051c01915b8281106200050d57508d9150620000dc565b600081558594508c9101620004fb565b92508192620004ed565b60228a634e487b7160e01b6000525260246000fd5b9b607f169b620000c4565b604187634e487b7160e01b6000525260246000fd5b600080fd5b604081019081106001600160401b038211176200057d57604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b038211908210176200057d57604052565b51906001600160a01b03821682036200055c5756fe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a714610eda5750806306fdde0314610de6578063095ea7b314610dbc57806318160ddd14610d9d57806323b872dd14610cd357806324953eaa14610af7578063286dd3f514610a02578063313ce567146109e6578063395093511461097f5780633af32abf146104ff5780633fa4f2451461096057806342966c68146107e357806355241077146107c957806370a08231146107925780637b1039991461074e5780637b9417c81461063d57806395d89b411461053d5780639b19251a146104ff5780639d6aed0b14610491578063a457c2d7146103ea578063a9059cbb146103b9578063dd62ed3e1461036c5763e2ec6ec31461012057600080fd5b3461036857602091826003193601126103645781359167ffffffffffffffff938484116103605736602385011215610360578382013594851161034d5760059185831b9484519661017384880189610fc0565b87528287016024809783010191368311610349578701905b8282106103265750508451632474521560e21b8082528382018a905233888301526001600160a01b039890977f00000000000000000000000000000000000000000000000000000000000000008a169350909160449086818381885afa90811561031c578c916102ff575b50156102ef578a5b83518110156102eb578a87828a1b86010151168c8a518c815281898201523386820152898186818b5afa9182156102e057916102b3575b50156102a35760ff8a8e8381528b8b5220541661029357808d52888852898d20805460ff1916600117905561028e91907fd1bba68c128cc3f427e5831b3c6f99f480b6efa6b9e80c757768f6124158cc3f8e80a26112c9565b6101fe565b895163503d101f60e11b81528790fd5b895163036be76f60e61b81528790fd5b6102d39150893d8b116102d9575b6102cb8183610fc0565b8101906112b1565b38610235565b503d6102c1565b8c51903d90823e3d90fd5b8b80f35b875163036be76f60e61b81528590fd5b6103169150873d89116102d9576102cb8183610fc0565b386101f6565b89513d8e823e3d90fd5b81356001600160a01b038116810361034557815290840190840161018b565b8a80fd5b8980fd5b634e487b7160e01b865260418252602486fd5b8580fd5b8380fd5b8280fd5b5050346103b557806003193601126103b5578060209261038a610f8f565b610392610faa565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b5050346103b557806003193601126103b5576020906103e36103d9610f8f565b6024359033610ff8565b5160018152f35b50823461048e578260031936011261048e57610404610f8f565b918360243592338152600160205281812060018060a01b038616825260205220549082821061043d576020856103e385850387336111af565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b509190346103b557816003193601126103b5578051918183019083821067ffffffffffffffff8311176104ec57506104e893508152600b82526a22a826ac2a37b5b2b72b1960a91b60208301525191829182610f46565b0390f35b634e487b7160e01b815260418552602490fd5b5050346103b55760203660031901126103b55760209160ff9082906001600160a01b0361052a610f8f565b1681526005855220541690519015158152f35b509190346103b557816003193601126103b557805191809380549160019083821c92828516948515610633575b6020958686108114610620578589529081156105fc57506001146105a4575b6104e8878761059a828c0383610fc0565b5191829182610f46565b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106105e957505050826104e89461059a92820101943880610589565b80548685018801529286019281016105cb565b60ff19168887015250505050151560051b830101925061059a826104e83880610589565b634e487b7160e01b845260228352602484fd5b93607f169361056a565b5090346103685760208060031936011261036457610659610f8f565b8251632474521560e21b81528481018690523360248201526001600160a01b03919083816044817f000000000000000000000000000000000000000000000000000000000000000087165afa908115610744578791610727575b50156107175716928385526005825260ff83862054166107095750828452600590528220805460ff191660011790557fd1bba68c128cc3f427e5831b3c6f99f480b6efa6b9e80c757768f6124158cc3f8280a280f35b825163503d101f60e11b8152fd5b5050505163036be76f60e61b8152fd5b61073e9150843d86116102d9576102cb8183610fc0565b386106b3565b85513d89823e3d90fd5b5050346103b557816003193601126103b557517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346103b55760203660031901126103b55760209181906001600160a01b036107ba610f8f565b16815280845220549051908152f35b8382346103b55760203660031901126103b5573560065580f35b5090346103685760209081600319360112610364578235923315610915573385526005835260ff82862054168015610905575b80156108fe575b156108f05733855284835281852054908482106108a2575090837fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59392338752868452038186205583600254036002558481518581527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a3519283523392a280f35b825162461bcd60e51b8152908101849052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b9051636a556bdb60e01b8152fd5b508461081d565b5084805260ff8286205416610816565b82608492519162461bcd60e51b8352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152fd5b5050346103b557816003193601126103b5576020906006549051908152f35b50913461048e578160031936011261048e57610999610f8f565b338252600160209081528383206001600160a01b03831684529052828220546024358101929083106109d3576020846103e38585336111af565b634e487b7160e01b815260118552602490fd5b5050346103b557816003193601126103b5576020905160128152f35b5090346103685760208060031936011261036457610a1e610f8f565b8251632474521560e21b81528481018690523360248201526001600160a01b03919083816044817f000000000000000000000000000000000000000000000000000000000000000087165afa908115610744578791610ada575b50156107175716928385526005825260ff838620541615610acc5750828452600590528220805460ff191690557ff1abf01a1043b7c244d128e8595cf0c1d10743b022b03a02dffd8ca3bf729f5a8280a280f35b82516335876baf60e01b8152fd5b610af19150843d86116102d9576102cb8183610fc0565b38610a78565b503461036857602091826003193601126103645781359167ffffffffffffffff93848411610360573660238501121561036057838201359485116103605760059160243687851b8701820111610ccf578451632474521560e21b8082528382018a905233828401526001600160a01b03977f000000000000000000000000000000000000000000000000000000000000000089169391926044919087818481895afa908115610cc5578d91610ca8575b5015610c98578b5b8b8110610bba578c80f35b83818a1b830101358b8116809103610c94578d8b51878152818a82015233878201528a8187818c5afa918215610c895791610c6c575b5015610c5c5760ff8b8f8381528c8c5220541615610c4c57808e528989528a8e20805460ff19169055610c4791907ff1abf01a1043b7c244d128e8595cf0c1d10743b022b03a02dffd8ca3bf729f5a8f80a26112c9565b610baf565b8a516335876baf60e01b81528890fd5b8a5163036be76f60e61b81528890fd5b610c8391508a3d8c116102d9576102cb8183610fc0565b38610bf0565b8d51903d90823e3d90fd5b8d80fd5b885163036be76f60e61b81528690fd5b610cbf9150883d8a116102d9576102cb8183610fc0565b38610ba7565b8a513d8f823e3d90fd5b8780fd5b508290346103b55760603660031901126103b557610cef610f8f565b610cf7610faa565b91846044359460018060a01b038416815260016020528181203382526020522054906000198203610d31575b6020866103e3878787610ff8565b848210610d5a5750918391610d4f602096956103e3950333836111af565b919394819350610d23565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346103b557816003193601126103b5576020906002549051908152f35b5050346103b557806003193601126103b5576020906103e3610ddc610f8f565b60243590336111af565b509034610368578260031936011261036857805191836003549060019082821c928281168015610ed0575b6020958686108214610ebd5750848852908115610e9b5750600114610e42575b6104e8868661059a828b0383610fc0565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610e8857505050826104e89461059a928201019438610e31565b8054868501880152928601928101610e6b565b60ff191687860152505050151560051b830101925061059a826104e838610e31565b634e487b7160e01b845260229052602483fd5b93607f1693610e11565b92505034610368576020366003190112610368573563ffffffff60e01b8116809103610368576020925063ede5d28360e01b8114908115610f35575b8115610f24575b5015158152f35b6301ffc9a760e01b14905038610f1d565b6336372b0760e01b81149150610f16565b6020808252825181830181905290939260005b828110610f7b57505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610f59565b600435906001600160a01b0382168203610fa557565b600080fd5b602435906001600160a01b0382168203610fa557565b90601f8019910116810190811067ffffffffffffffff821117610fe257604052565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0390811691821561115c571691821561110b576000828152600560205260409060ff828220541680156110fb575b80156110f4575b156110e35783815280602052818120548381106110905791808285602095887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef98965282875203828220558781522082815401905551908152a3565b825162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b8151636a556bdb60e01b8152600490fd5b5080611034565b5084815260ff828220541661102d565b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561126057169182156112105760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b90816020910312610fa557518015158103610fa55790565b60001981146112d85760010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220b95f37d7968975a95d7e283a684dcfd7a8fe0c981ebeebe4178d785a7a72b49664736f6c63430008120033";

type EPMXTokenV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EPMXTokenV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EPMXTokenV2__factory extends ContractFactory {
  constructor(...args: EPMXTokenV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _recipient: AddressLike,
    _registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_recipient, _registry, overrides || {});
  }
  override deploy(
    _recipient: AddressLike,
    _registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_recipient, _registry, overrides || {}) as Promise<
      EPMXTokenV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EPMXTokenV2__factory {
    return super.connect(runner) as EPMXTokenV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EPMXTokenV2Interface {
    return new Interface(_abi) as EPMXTokenV2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): EPMXTokenV2 {
    return new Contract(address, _abi, runner) as unknown as EPMXTokenV2;
  }
}
