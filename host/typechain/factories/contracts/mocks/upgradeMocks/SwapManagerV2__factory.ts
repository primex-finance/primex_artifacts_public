/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  SwapManagerV2,
  SwapManagerV2Interface,
} from "../../../../contracts/mocks/upgradeMocks/SwapManagerV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "boughtAsset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum IPrimexDNSStorageV3.FeeRateType",
        name: "feeRateType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInPositionAsset",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInPmx",
        type: "uint256",
      },
    ],
    name: "PaidProtocolFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountSold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountBought",
        type: "uint256",
      },
    ],
    name: "SpotSwap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_primexDNS",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_traderBalanceVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_whiteBlackList",
        type: "address",
      },
    ],
    name: "initializeAfterUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOracle",
    outputs: [
      {
        internalType: "contract IPriceOracleV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "primexDNS",
    outputs: [
      {
        internalType: "contract IPrimexDNSV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountTokenA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSwapFromWallet",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSwapToWallet",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSwapFeeInPmx",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "tokenAtokenBOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "pmxPositionAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "nativePositionAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes[][]",
            name: "pullOracleData",
            type: "bytes[][]",
          },
          {
            internalType: "uint256[]",
            name: "pullOracleTypes",
            type: "uint256[]",
          },
        ],
        internalType: "struct ISwapManager.SwapParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maximumOracleTolerableLimit",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "needOracleTolerableLimitCheck",
        type: "bool",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "depositAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "positionAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeperRewardDistributor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gasSpent",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "depositPositionAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "pmxPositionAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "nativePositionAssetOracleData",
            type: "bytes",
          },
        ],
        internalType: "struct ISwapManager.SwapInLimitOrderParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maximumOracleTolerableLimit",
        type: "uint256",
      },
    ],
    name: "swapInLimitOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testUpgrade",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "traderBalanceVault",
    outputs: [
      {
        internalType: "contract ITraderBalanceVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whiteBlackList",
    outputs: [
      {
        internalType: "contract IWhiteBlackList",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460bd576000549060ff8260081c16606b575060ff808216036031575b60405161284190816100c38239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a1386022565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe61024080604052600436101561001457600080fd5b60006101e0526101e0513560e01c90816301ffc9a71461209a575080632630c12f1461206f5780633f4a2d27146120445780633f4ba83a14611f295780633fa4f24514611f095780635017324814611bfb5780635524107714611bdd57806356b3ae0314610d915780635c975abb14610d6c5780637b10399914610d415780638456cb5914610c605780639968861e14610c355780639d6aed0b14610bde578063c4d66de814610a7b578063ca4de5a51461010a5763ef379d17146100d857600080fd5b34610103576101e0513660031901126101035760cc546040516001600160a01b039091168152602090f35b6101e05180fd5b34610103576040366003190112610103576001600160401b03600435116101035761018060043536036003190112610103576101446127c7565b60c954604051632474521560e21b81527f8f8b3dc194d940c9ce77bea0cf23855523a0d7b641973e714d9dc5f3528a573a600482015233602482015290602090829060449082906001600160a01b03165afa9081156107da576101e05191610a4c575b5015610a3a5760cb546040516391f03efd60e01b815290602090829060049082906001600160a01b03165afa9081156107da576101e05191610a0b575b5060ca546001600160a01b03166101fe600480350161228f565b60446004350135610180526040519061021682612144565b3382526001600160a01b03848116602084015216604082015261018051606082015260016080820152813b15610103576040518092637da77a3360e11b825281806102686101e05195600483016122a3565b03916101e051905af180156107da576109f0575b5061028b60043560040161228f565b9061029a60246004350161228f565b6102eb6102b1606460043501600435600401612315565b9190604051956102c087612175565b60018060a01b03168652602086019360018060a01b03168452604086019261018051845236916123a7565b60608501908152608085019130835260a086019360a46004350135855260018060a01b0360cd541660805261032b61012460043501600435600401612638565b61012052610100526040516101a052632489c00560e21b6101a051526101e0515060c060046101a05101526101846101a051019660018060a01b0390511660c46101a051015260018060a01b0390511660e46101a0510152516101046101a0510152519360c06101246101a051015284518091526101a46101a051019060206101a060048360051b82510101019601610160526101e0515b81811061087f5760206104418888888860018060a01b039051166101446101a0510152516101646101a051015260243560246101a051015260018060a01b031660446101a051015260805160646101a05101526101e05160846101a05101526003196101a05182030160a46101a0510152610120516101005161266a565b6101a051908190038173__$75df3f6366b0557754cd3ba14359105414$__5af480156107da576101e05190610840575b6105ad90604061051261058e61048b60c46004350161228f565b61049960846004350161228f565b60cd5460ca54610581916001600160a01b0390811691166104be60043560e40161228f565b60cb546001600160a01b03166104d860043560240161228f565b916104ee61014460043501600435600401612638565b94909561050661016460043501600435600401612638565b99909a8e519d8e612190565b6001600160a01b039081168e5290811660208e01528d8d0191909152600660608d015260808c01919091523060a08c015290811660c08b015260e08a019190915216610100880152610120870189905260043561010401356101408801526101e0516101608801523691612361565b6101808501523691612361565b6101a082015281518094819263f1c55e3f60e01b8352600483016126a1565b038173__$75df3f6366b0557754cd3ba14359105414$__5af49081156107da576101e051928392610803575b506105e6836006926127a4565b916001600160a01b036105fd60043560240161228f565b16906040519085825260208201527fd864e4c29b5db75923b952a9774db749266cdd69f205b143caf29dd96321735360403392a473__$183737d697d7aa9b5df9988cbe11bc4947$__61065460246004350161228f565b60ca546001600160a01b0316823b1561010357604051636336129b60e11b81526101e0516001600160a01b039384166004830152919092166024830152604482018490529091829060649082905af480156107da576107e8575b5060ca546001600160a01b03166106c960043560840161228f565b6106d760246004350161228f565b823b156101035760405163220eb46560e11b81526101e0516001600160a01b0393841660048301529290911660248201526044810184905291829081806064810103916101e051905af180156107da576107bf575b5060409161073e60846004350161228f565b61074c60043560040161228f565b907f5fcf6637f014854f918b233372226c5492e6a5157e517674a8588675550c40c68461077d60246004350161228f565b8751610180516001600160a01b03968716825291861660208201526040810191909152606081019190915291909216913391608090a382519182526020820152f35b6101e0516107cc916121c7565b6101e051610103578261072c565b6040513d6101e051823e3d90fd5b6101e0516107f5916121c7565b6101e05161010357826106ae565b6105e69350600691925061082e9060403d604011610839575b61082681836121c7565b81019061268b565b9093909291506105d9565b503d61081c565b5060203d602011610878575b8061085c6020926101a0516121c7565b6101a0519081010312610873576101a05151610471565b600080fd5b503d61084c565b90919561019f196003196101a0518303010187526101605151906020604082019280518352015161020052604060208201526102005151809252606081019060608360051b8201016101c05260206102005101906101e051915b848310610903575050505050600160206101c05197816101605101610160520191019190916103c3565b605f19826101c051030184528051602060406101c051019160018060a01b038151166101c05152015161014052604060206101c0510152610140515180915260606101c0510160608260051b6101c051010160c0526020610140510160a0526101e051905b82821061098b5750505060208060019260c0516101c052019401920191926108d9565b6020600191605f196101c05160c051030181526109dc60a0515160406109be8251606060c05152606060c0510190612103565b91858101518660c0510152015160c0518203604060c0510152612103565b60c0528160a0510160a05201910190610968565b6101e0516109fd916121c7565b6101e051610103578161027c565b610a2d915060203d602011610a33575b610a2581836121c7565b810190612263565b816101e4565b503d610a1b565b60405163036be76f60e61b8152600490fd5b610a6e915060203d602011610a74575b610a6681836121c7565b8101906121e8565b816101a7565b503d610a5c565b3461010357602036600319011261010357610a946120ed565b6101e051549060ff8260081c161591828093610bd1575b8015610bba575b610abb90612200565b82600160ff198316176101e05155610ba5575b506040516301ffc9a760e01b8152637965db0b60e01b60048201526001600160a01b039190911690602081602481855afa9081156107da576101e05191610b86575b5015610b74576001600160601b0360a01b60c954161760c955610b35575b6101e05180f35b61ff00196101e05154166101e051557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1610b2e565b60405163044aa57560e41b8152600490fd5b610b9f915060203d602011610a7457610a6681836121c7565b83610b10565b6101019061ffff1916176101e0515582610ace565b50303b158015610ab2575060ff8116600114610ab2565b50600160ff821610610aab565b34610103576101e0513660031901126101035760408051610c3191610c0390826121c7565b600d81526c29bbb0b826b0b730b3b2b92b1960991b6020820152604051918291602083526020830190612103565b0390f35b34610103576101e0513660031901126101035760ca546040516001600160a01b039091168152602090f35b34610103576101e0513660031901126101035760c954604051632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb600482015233602482015290602090829060449082906001600160a01b03165afa9081156107da576101e05191610d22575b5015610a3a57610ce46127c7565b600160ff1960655416176065557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a16101e05180f35b610d3b915060203d602011610a7457610a6681836121c7565b81610cd6565b34610103576101e0513660031901126101035760c9546040516001600160a01b039091168152602090f35b34610103576101e05136600319011261010357602060ff606554166040519015158152f35b6060366003190112610103576004356001600160401b0381116101035780600401906101e060031982360301126101035760443591821515830361010357600260015414611b9857600260015560cc54604051630723eb0360e51b815233600482015290602090829060249082906001600160a01b03165afa9081156107da576101e05191611b79575b50611b6757604492610e2b6127c7565b60c954604051632474521560e21b81527feca86ef56bcb7cd81d804bccc8125619ec5f1165527a63674e7136120af31f3060048201523360248201529460209186919082906001600160a01b03165afa9283156107da576004946101e05194611b46575b5060cb546040516391f03efd60e01b81529560209187919082906001600160a01b03165afa9485156107da576101e05195611b25575b50610ed260e48201612282565b15611a8357610ee08361228f565b6040516336b4849f60e11b81526001600160a01b039182166004820152336024820152908616604480830191909152820135606482015260208160848173__$183737d697d7aa9b5df9988cbe11bc4947$__5af480156107da57611a54575b505b610f4a8361228f565b916024820192610faa86610f5d8661228f565b93604486013599610f71608488018a612315565b949060405196610f8088612175565b6001600160a01b0390811688529790971660208701908152604087018d81529097909536916123a7565b946060810195865230608082015260c488013560a082015260018060a01b0360cd54169284611a4c575b50610fe361014489018b612638565b96909560405160e052632489c00560e21b60e051526101e0515060c0600460e051015261018460e051019860018060a01b0384511660c460e051015260018060a01b0390511660e460e05101525161010460e0510152519660c061012460e051015287518091526101a460e051019060206101a060048360051b60e0510101019901916101e051905b8282106119225750505050916110e195939160a06020989694600180831b0360808201511661014460e0510152015161016460e0510152602435602460e051015260018060a01b0316604460e0510152606460e05101521515608460e051015260031960e05184030160a460e051015261266a565b60e051908190038173__$75df3f6366b0557754cd3ba14359105414$__5af480156107da576101e051906118eb575b8094606483013582106118d957156113a6575b506111316101048201612282565b1561124b5773__$183737d697d7aa9b5df9988cbe11bc4947$__6111548361228f565b61116060a4840161228f565b823b1561010357604051636336129b60e11b81526101e0516001600160a01b039384166004830152919092166024830152604482018790529091829060649082905af480156107da57611230575b506020946111f26111ec6111e660a47f5fcf6637f014854f918b233372226c5492e6a5157e517674a8588675550c40c6955b0161228f565b9561228f565b9361228f565b604080516001600160a01b0395861681529185166020830152810191909152606081018590529290911691339190608090a360018055604051908152f35b6101e05161123d916121c7565b6101e05161010357856111ae565b73__$183737d697d7aa9b5df9988cbe11bc4947$__6112698361228f565b60ca546001600160a01b0316823b1561010357604051636336129b60e11b81526101e0516001600160a01b039384166004830152919092166024830152604482018790529091829060649082905af480156107da5761138b575b5060ca546001600160a01b03166112dc60a4830161228f565b6112e58461228f565b823b156101035760405163220eb46560e11b81526101e0516001600160a01b0393841660048301529290911660248201526044810187905291829081806064810103916101e051905af180156107da57611370575b506020946111f26111ec6111e660a47f5fcf6637f014854f918b233372226c5492e6a5157e517674a8588675550c40c6956111e0565b6101e05161137d916121c7565b6101e051610103578561133a565b6101e051611398916121c7565b6101e05161010357856112c3565b60cb5460405163bcad341960e01b81526001600160a01b0390911690602081600481855afa9081156107da576101e05191611896575b5060405163304f823d60e11b815233600482015290602090829060249082906001600160a01b03165afa80156107da576101e05190611863575b6040516345a1aa4160e11b81526007600482015260248101919091529160209150829060449082905afa9081156107da576101e05191611831575b50156111235760cd549094506001600160a01b03166114746101a4830185612315565b916114836101c4850187612315565b8291923b15610103576040949394519463f197ce3560e01b865284604487016040600489015252606486019060648660051b8801019581926101e051925b8284106117475750505050508484036003190160248601528084526001600160fb1b038111610103576020858094819360051b8091848901376101e051960103019134905af180156107da5761172c575b506115206101248201612282565b156117185760cb54604051630460f0f360e01b81529490602090869060049082906001600160a01b03165afa9485156107da57611649956040916101e051916116f9575b505b60cd5460ca5460cb5461162a926001600160a01b0390811692811691610581918991610184918d91166115b461159b8e61228f565b926115aa610164870182612638565b9590960190612638565b9690978b519a6115c38c612190565b60018060a01b03168b523360208c01528b8b0152600760608b015260808a01526101e05160a08a01526101e05160c08a015260e089015260018060a01b0316610100880152886101208801526101e0516101408801526101e0516101608801523691612361565b6101a082015281518097819263f1c55e3f60e01b8352600483016126a1565b038173__$75df3f6366b0557754cd3ba14359105414$__5af49081156107da576101e0519586926116ce575b5090611683866007936127a4565b956001600160a01b036116958661228f565b169160405191825260208201527fd864e4c29b5db75923b952a9774db749266cdd69f205b143caf29dd96321735360403392a485611123565b6116839650600792506116ef9060403d6040116108395761082681836121c7565b9096909250611675565b611712915060203d602011610a3357610a2581836121c7565b88611564565b6116499360406117278461228f565b611566565b6101e051611739916121c7565b6101e0516101035785611512565b90919293976063198a82030183528835601e198336030181121561010357602083820101916001600160401b038483013511610103578382013560051b908136038413610103579184810135835260208084019284010193926101e05191603e198782013603015b8782013584106117d4575050505050506020806001929a0193019401929193906114c1565b909192939495601f19848203018652863582811215610103578884010190604060208301359201916001600160401b03811161010357803603831361010357611823602092839260019561266a565b9801960194019291906117af565b90506020813d60201161185b575b8161184c602093836121c7565b81010312610873575187611451565b3d915061183f565b506020813d60201161188e575b8161187d602093836121c7565b810103126108735760209051611416565b3d9150611870565b90506020813d6020116118d1575b816118b1602093836121c7565b8101031261010357516001600160a01b03811681036101035760206113dc565b3d91506118a4565b604051637974230960e11b8152600490fd5b5060203d60201161191b575b8061190660209260e0516121c7565b60e05190810103126108735760e05151611110565b503d6118f7565b9091929961019f1960031960e0518303010182528a519060206040820192805183520151916040602083015282518091526060820190602060608260051b8501019401926101e0515b82811061198b5750505050506020806001929c019201920190929161106c565b9091929394605f1983820301855285516020604083019160018060a01b0381511684520151916040602082015282518092526060810190602060608460051b8301019401926101e051915b8183106119f75750505050506020806001929701950191019291909261196b565b9091929394602080611a3f600193605f198682030189528951906040611a268351606084526060840190612103565b9285810151868401520151906040818403910152612103565b97019501930191906119d6565b93508c610fd4565b611a759060203d602011611a7c575b611a6d81836121c7565b810190612306565b5085610f3f565b503d611a63565b60ca546001600160a01b0316611a988461228f565b60405190611aa582612144565b3382526001600160a01b0388811660208401521660408201526044830135606082015260016080820152813b15610103576040518092637da77a3360e11b82528180611af86101e05195600483016122a3565b03916101e051905af180156107da57611b12575b50610f41565b6101e051611b1f916121c7565b85611b0c565b611b3f91955060203d602011610a3357610a2581836121c7565b9385610ec5565b611b6091945060203d602011610a7457610a6681836121c7565b9285610e8f565b6040516333df015b60e01b8152600490fd5b611b92915060203d602011610a7457610a6681836121c7565b84610e1b565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b346101035760203660031901126101035760043560ce556101e05180f35b3461010357608036600319011261010357611c146120ed565b6024356001600160a01b0381169190829003610103576044356001600160a01b03811690819003610103576064356001600160a01b03811693908490036101035760c954604051632474521560e21b81526101e051600482015233602482015290602090829060449082906001600160a01b03165afa9081156107da576101e05191611eea575b5015610a3a576101e0515460ff8160081c161580611edd575b611cbd90612200565b6101e05161010261ffff199290921691821790556040516301ffc9a760e01b8152633f9940a760e11b600482015290936001600160a01b031690602081602481855afa9081156107da576101e05191611ebe575b5080611e64575b80611e0a575b80611db0575b15610b74576002946001600160601b0360a01b60cc54161760cc556001600160601b0360a01b60cb54161760cb556001600160601b0360a01b60ca54161760ca556001600160601b0360a01b60cd54161760cd55176101e051557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160028152a16101e05180f35b506040516301ffc9a760e01b8152633df6cef760e01b6004820152602081602481895afa9081156107da576101e05191611deb575b50611d24565b611e04915060203d602011610a7457610a6681836121c7565b86611de5565b506040516301ffc9a760e01b81526333ca6d2360e21b6004820152602081602481875afa9081156107da576101e05191611e45575b50611d1e565b611e5e915060203d602011610a7457610a6681836121c7565b86611e3f565b506040516301ffc9a760e01b81526312b3ed2b60e01b6004820152602081602481865afa9081156107da576101e05191611e9f575b50611d18565b611eb8915060203d602011610a7457610a6681836121c7565b86611e99565b611ed7915060203d602011610a7457610a6681836121c7565b86611d11565b50600260ff821610611cb4565b611f03915060203d602011610a7457610a6681836121c7565b85611c9b565b34610103576101e05136600319011261010357602060ce54604051908152f35b34610103576101e0513660031901126101035760c954604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8600482015233602482015290602090829060449082906001600160a01b03165afa9081156107da576101e05191612025575b5015610a3a5760655460ff811615611fe95760ff19166065557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a16101e05180f35b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b61203e915060203d602011610a7457610a6681836121c7565b81611f9f565b34610103576101e0513660031901126101035760cb546040516001600160a01b039091168152602090f35b34610103576101e0513660031901126101035760cd546040516001600160a01b039091168152602090f35b34610103576020366003190112610103576004359063ffffffff60e01b82168092036101035760209163041f8a0360e11b81149081156120dc575b5015158152f35b6301ffc9a760e01b149050836120d5565b600435906001600160a01b038216820361087357565b919082519283825260005b84811061212f575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161210e565b60a081019081106001600160401b0382111761215f57604052565b634e487b7160e01b600052604160045260246000fd5b60c081019081106001600160401b0382111761215f57604052565b6101c081019081106001600160401b0382111761215f57604052565b604081019081106001600160401b0382111761215f57604052565b90601f801991011681019081106001600160401b0382111761215f57604052565b90816020910312610873575180151581036108735790565b1561220757565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b9081602091031261087357516001600160a01b03811681036108735790565b3580151581036108735790565b356001600160a01b03811681036108735790565b81516001600160a01b039081168252602080840151821690830152604080840151909116908201526060808301519082015260809091015160a08201929160038210156122f05760800152565b634e487b7160e01b600052602160045260246000fd5b90816020910312610873575190565b903590601e198136030182121561087357018035906001600160401b03821161087357602001918160051b3603831361087357565b6001600160401b03811161215f5760051b60200190565b9291926001600160401b03821161215f576040519161238a601f8201601f1916602001846121c7565b829481845281830111610873578281602093846000960137010152565b909291610220526123b78361234a565b926123c560405194856121c7565b6020848281520191610220518260051b8201116108735780925b8260051b820184106123f15750505050565b83356001600160401b038111610873578201604081610220510312610873576040519061241d826121ac565b803582526020810135906001600160401b038211610873570161022051601f8201121561087357803561244f8161234a565b9161245d60405193846121c7565b81835260208084019260051b820101906102205182116108735760208101925b82841061249d5750505050918160209384809401528152019301926123df565b83356001600160401b0381116108735782016040601f19826102205103011261087357604051906124cd826121ac565b60208101356001600160a01b038116810361087357825260408101356001600160401b03811161087357602091010161022051601f820112156108735780356125158161234a565b9161252360405193846121c7565b81835260208084019260051b820101906102205182116108735760208101925b82841061256357505050509181602093848094015281520193019261247d565b83356001600160401b038111610873578201906060601f1983610220510301126108735760405191606083018381106001600160401b0382111761215f5760405260208101356001600160401b0381116108735760209082010161022051601f8201121561087357610220516125de91803590602001612361565b83526040810135602084015260608101356001600160401b0381116108735760209101019061022051601f8301121561087357602092612628849361022051908581359101612361565b6040820152815201930192612543565b903590601e198136030182121561087357018035906001600160401b0382116108735760200191813603831361087357565b908060209392818452848401376000828201840152601f01601f1916010190565b9190826040910312610873576020825192015190565b602080825282516001600160a01b039081168284015290830151811660408084019190915283015116606080830191909152820151919060088310156122f0576127a192608082015260018060a01b0360808301511660a082015260018060a01b0360a08301511660c082015260018060a01b0360c08301511660e082015260018060a01b0360e08301511661010082015260018060a01b036101008301511661012082015261012082015161014082015261014082015161016082015261016082015115156101808201526101a061278b6101808401516101c0838501526101e0840190612103565b920151906101c0601f1982850301910152612103565b90565b919082039182116127b157565b634e487b7160e01b600052601160045260246000fd5b60ff606554166127d357565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fdfea2646970667358221220b606b02959c86366d616ee15b79a7e4ec3e48af7bc333c7138aac36aa145348d64736f6c634300081a0033";

type SwapManagerV2ConstructorParams =
  | [linkLibraryAddresses: SwapManagerV2LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapManagerV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SwapManagerV2__factory extends ContractFactory {
  constructor(...args: SwapManagerV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SwapManagerV2__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SwapManagerV2LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$75df3f6366b0557754cd3ba14359105414\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$183737d697d7aa9b5df9988cbe11bc4947\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SwapManagerV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SwapManagerV2__factory {
    return super.connect(runner) as SwapManagerV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapManagerV2Interface {
    return new Interface(_abi) as SwapManagerV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SwapManagerV2 {
    return new Contract(address, _abi, runner) as unknown as SwapManagerV2;
  }
}

export interface SwapManagerV2LibraryAddresses {
  ["contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"]: string;
  ["contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"]: string;
}
