/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  SwapManagerV2,
  SwapManagerV2Interface,
} from "../../../../contracts/mocks/upgradeMocks/SwapManagerV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "boughtAsset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum IPrimexDNSStorageV3.FeeRateType",
        name: "feeRateType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInPositionAsset",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInPmx",
        type: "uint256",
      },
    ],
    name: "PaidProtocolFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountSold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountBought",
        type: "uint256",
      },
    ],
    name: "SpotSwap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_primexDNS",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_traderBalanceVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_whiteBlackList",
        type: "address",
      },
    ],
    name: "initializeAfterUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOracle",
    outputs: [
      {
        internalType: "contract IPriceOracleV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "primexDNS",
    outputs: [
      {
        internalType: "contract IPrimexDNSV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountTokenA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSwapFromWallet",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSwapToWallet",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSwapFeeInPmx",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "tokenAtokenBOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "pmxPositionAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "nativePositionAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes[][]",
            name: "pullOracleData",
            type: "bytes[][]",
          },
          {
            internalType: "uint256[]",
            name: "pullOracleTypes",
            type: "uint256[]",
          },
        ],
        internalType: "struct ISwapManager.SwapParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maximumOracleTolerableLimit",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "needOracleTolerableLimitCheck",
        type: "bool",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "depositAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "positionAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeperRewardDistributor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gasSpent",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "depositPositionAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "pmxPositionAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "nativePositionAssetOracleData",
            type: "bytes",
          },
        ],
        internalType: "struct ISwapManager.SwapInLimitOrderParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maximumOracleTolerableLimit",
        type: "uint256",
      },
    ],
    name: "swapInLimitOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testUpgrade",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "traderBalanceVault",
    outputs: [
      {
        internalType: "contract ITraderBalanceVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whiteBlackList",
    outputs: [
      {
        internalType: "contract IWhiteBlackList",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100c1576000549060ff8260081c1661006f575060ff80821603610034575b6040516127d890816100c78239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe6102a080604052600436101561001457600080fd5b60006101805260003560e01c90816301ffc9a714611f28575080632630c12f14611efc5780633f4a2d2714611ed05780633f4ba83a14611db55780633fa4f24514611d945780635017324814611ad55780635524107714611ab757806356b3ae0314610ce55780635c975abb14610cbf5780637b10399914610c935780638456cb5914610bb25780639968861e14610b865780639d6aed0b14610b31578063c4d66de8146109cc578063ca4de5a51461010c5763ef379d17146100d657600080fd5b346101055761018051806003193601126101025760cc546040516001600160a01b039091168152602090f35b80fd5b6101805180fd5b34610105576040366003190112610105576001600160401b036004351161010557610180600435360360031901126101055761014661275e565b60c954604051632474521560e21b81527f8f8b3dc194d940c9ce77bea0cf23855523a0d7b641973e714d9dc5f3528a573a600482015233602482015290602090829060449082906001600160a01b03165afa90811561078057610180519161099d575b501561098b5760cb546040516391f03efd60e01b815290602090829060049082906001600160a01b03165afa90811561078057610180519161095c575b5060ca546001600160a01b0316610200600480350161212f565b6040519061020d82612034565b3382526001600160a01b03848116602084015216604082015260043560440135606082015260016080820152813b15610105576040518092637da77a3360e11b82528180610262610180519560048301612143565b039161018051905af1801561078057610946575b5061028560043560040161212f565b6102df61029660246004350161212f565b6102aa6064600435016004356004016121a3565b9091604051946102b986612078565b6001600160a01b0390811686521660208501526004356044013560408501523691612235565b60608201523060808201526004803560a481013560a084015260cd546001600160a01b0316939161031691610124810191016125f5565b90604051948593632489c00560e21b855260c0600486015260018060a01b0386511660c486015260018060a01b0360208701511660e4860152604086015161010486015260608601519560c0610124870152610184860187518091526101a4906020828901928260051b8a01019901916000905b82821061081a5760808501516001600160a01b039081166101448c015260a08601516101648c015260248035908c0152861660448b015260648a01879052600060848b0152898b036003190160a48b015289602081806103eb8f8e8e612627565b038173__$75df3f6366b0557754cd3ba14359105414$__5af480156107805761018051906107e1575b610551915060406104b661053261042f60c46004350161212f565b61043d60846004350161212f565b60cd5460ca54610525916001600160a01b03908116911661046260043560e40161212f565b60cb546001600160a01b031661047c60043560240161212f565b91610492610144600435016004356004016125f5565b9490956104aa610164600435016004356004016125f5565b99909a8e519d8e612093565b6001600160a01b039081168e5290811660208e01528d8d0191909152600660608d015260808c01919091523060a08c015290811660c08b015260e08a019190915216610100880152610120870189905260043561010401356101408801526101805161016088015236916121ef565b61018085015236916121ef565b6101a082015281518094819263f1c55e3f60e01b83526004830161265e565b038173__$75df3f6366b0557754cd3ba14359105414$__5af490811561078057610180519283926107a4575b5061058a8360069261273b565b916001600160a01b036105a160043560240161212f565b16906040519085825260208201527fd864e4c29b5db75923b952a9774db749266cdd69f205b143caf29dd96321735360403392a473__$183737d697d7aa9b5df9988cbe11bc4947$__6105f860246004350161212f565b60ca546001600160a01b0316823b1561010557604051636336129b60e11b8152610180516001600160a01b039384166004830152919092166024830152604482018490529091829060649082905af480156107805761078e575b5060ca546001600160a01b031661066d60043560840161212f565b61067b60246004350161212f565b823b156101055760405163220eb46560e11b8152610180516001600160a01b03938416600483015292909116602482015260448101849052918290818060648101039161018051905af1801561078057610763575b506040916106e260846004350161212f565b6106f060043560040161212f565b907f5fcf6637f014854f918b233372226c5492e6a5157e517674a8588675550c40c68461072160246004350161212f565b87516001600160a01b0395861681529085166020820152600435604401356040820152606081019190915291909216913391608090a382519182526020820152f35b61076c90612065565b61018051918261077c57916106d0565b8280fd5b6040513d61018051823e3d90fd5b61079790612065565b6101805180156106525780fd5b61058a935060069192506107cf9060403d6040116107da575b6107c781836120ca565b810190612648565b90939092915061057d565b503d6107bd565b506020813d602011610812575b816107fb602093836120ca565b8101031261080d576105519051610414565b600080fd5b3d91506107ee565b919394959697985091986101a3198b820301825289519060206040820192805183520151916040602083015282518091526060820190602060608260051b85010194019260005b8281106108875750505050506020806001929b01920192018a989796959493919261038a565b9091929394605f1983820301855285516020604083019160018060a01b0381511684520151916040602082015282518092526060810190602060608460051b8301019401926000915b8183106108f157505050505060208060019297019501910192919092610861565b9091929394602080610939600193605f1986820301895289519060406109208351606084526060840190611f91565b9285810151868401520151906040818403910152611f91565b97019501930191906108d0565b61094f90612065565b6101805180156102765780fd5b61097e915060203d602011610984575b61097681836120ca565b810190612103565b816101e6565b503d61096c565b60405163036be76f60e61b8152600490fd5b6109bf915060203d6020116109c5575b6109b781836120ca565b8101906120eb565b816101a9565b503d6109ad565b34610105576020366003190112610105576109e5611f7b565b61018051549060ff8260081c161591828093610b24575b8015610b0d575b610a0c90611fd1565b6101805160ff19821660011781559083610afb575b50506040516301ffc9a760e01b8152637965db0b60e01b60048201526001600160a01b039190911690602081602481855afa908115610780576101805191610add575b5015610acb576bffffffffffffffffffffffff60a01b60c954161760c955610a8e575b6101805180f35b6101805161ff001981541690557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1610a87565b60405163044aa57560e41b8152600490fd5b610af5915060203d81116109c5576109b781836120ca565b83610a64565b61ffff19166101011790558280610a21565b50303b158015610a03575060ff8116600114610a03565b50600160ff8216106109fc565b3461010557610180518060031936011261010257610b82604051610b54816120af565b600d81526c29bbb0b826b0b730b3b2b92b1960991b6020820152604051918291602083526020830190611f91565b0390f35b346101055761018051806003193601126101025760ca546040516001600160a01b039091168152602090f35b346101055761018051806003193601126101025760c954604051632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb600482015233602482015290602090829060449082906001600160a01b03165afa908115610780576101805191610c75575b501561098b57610c3761275e565b600160ff1960655416176065557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a16101805180f35b610c8d915060203d81116109c5576109b781836120ca565b81610c29565b346101055761018051806003193601126101025760c9546040516001600160a01b039091168152602090f35b3461010557610180518060031936011261010257602060ff606554166040519015158152f35b6060366003190112610105576001600160401b0360043511610105576101e0600435360360031901126101055760443515156044350361010557600260015414611a7257600260015560cc54604051630723eb0360e51b815233600482015290602090829060249082906001600160a01b03165afa908115610780576101805191611a53575b50611a4157610d7861275e565b60c954604051632474521560e21b81527feca86ef56bcb7cd81d804bccc8125619ec5f1165527a63674e7136120af31f30600482015233602482015290602090829060449082906001600160a01b03165afa80156107805761018051608052611a20575b5060cb546040516391f03efd60e01b815290602090829060049082906001600160a01b03165afa908115610780576101805191611a01575b50610e2360e460043501612122565b1561195d57610e3660043560040161212f565b604051906336b4849f60e11b825260018060a01b0316600482015233602482015260018060a01b038216604482015260446004350135606482015260208160848173__$183737d697d7aa9b5df9988cbe11bc4947$__5af4801561078057611932575b505b610ea960043560040161212f565b90610f04610ebb60246004350161212f565b610ecf6084600435016004356004016121a3565b909160405195610ede87612078565b6001600160a01b0390811687521660208601526004356044013560408601523691612235565b606083015230608083015260c4600435013560a083015260018060a01b0360cd541690608051806101c052611926575b610f49610144600435016004356004016125f5565b6101e052610160526040518061012052632489c00560e21b905260c0600461012051015260018060a01b0383511660c461012051015260018060a01b0360208401511660e4610120510152604083015161010461012051015260608301519260c061012461012051015261018461012051018451809152610120519060206101a4808401938360051b0101960160e05260005b8181106117c657602061106388888860a089600180831b036080820151166101446101205101520151610164610120510152602435602461012051015260018060a01b0316604461012051015260646101205101526101c051151560846101205101526101205160a460031982840301910152610120519182916101e05161016051612627565b036101205173__$75df3f6366b0557754cd3ba14359105414$__5af48015610780576101805190611790575b8060646004350135811061177e576080511561131f575b506110b661010460043501612122565b156111ec5773__$183737d697d7aa9b5df9988cbe11bc4947$__6110de60246004350161212f565b6110ec60a46004350161212f565b823b1561010557604051636336129b60e11b8152610180516001600160a01b039384166004830152919092166024830152604482018490529091829060649082905af48015610780576111cf575b506020905b61114d60a46004350161212f565b61115b60043560040161212f565b907f5fcf6637f014854f918b233372226c5492e6a5157e517674a8588675550c40c68361118c60246004350161212f565b604080516001600160a01b03968716815291861660208301526004356044013590820152606081019190915291909216913391608090a360018055604051908152f35b6111d890612065565b6101805190816111e8579061113a565b5080fd5b73__$183737d697d7aa9b5df9988cbe11bc4947$__61120f60246004350161212f565b60ca546001600160a01b0316823b1561010557604051636336129b60e11b8152610180516001600160a01b039384166004830152919092166024830152604482018490529091829060649082905af4801561078057611309575b5060ca546001600160a01b031661128460043560a40161212f565b61129260246004350161212f565b823b156101055760405163220eb46560e11b8152610180516001600160a01b03938416600483015292909116602482015260448101849052918290818060648101039161018051905af18015610780576112f0575b5060209061113f565b6112f990612065565b6101805190816111e857906112e7565b61131290612065565b6101805180156112695780fd5b60cb5460405163fa11ed3760e01b81526007600482015290602090829060249082906001600160a01b03165afa90811561078057610180519161174c575b50156110a65760cd549091506001600160a01b0316611385600480356101a4810191016121a3565b9161139b6101c4600435016004356004016121a3565b8291923b15610105576040949394519463f197ce3560e01b865284604487016040600489015252606486019060648660051b88010195819261018051925b8284106116555750505050508484036003190160248601528084526001600160fb1b038111610105576020858094819360051b80918489013761018051960103019134905af180156107805761163f575b5061143a60043561012401612122565b156116265760cb54604051630460f0f360e01b81529190602090839060049082906001600160a01b03165afa91821561078057611552926040916101805191611607575b505b60cd5460ca5460cb54610532926001600160a01b039081169281169161052591166114af60043560240161212f565b6114c4610164600435016004356004016125f5565b9190926114dc610184600435016004356004016125f5565b9690978b519a6114eb8c612093565b60018060a01b03168b523360208c01528b8b0152600760608b015260808a01526101805160a08a01526101805160c08a015260e089015260018060a01b031661010088015288610120880152610180516101408801526101805161016088015236916121ef565b038173__$75df3f6366b0557754cd3ba14359105414$__5af490811561078057610180519283926115dc575b509061158c8360079361273b565b926001600160a01b036115a360043560240161212f565b169160405191825260208201527fd864e4c29b5db75923b952a9774db749266cdd69f205b143caf29dd96321735360403392a4816110a6565b61158c9350600792506115fd9060403d6040116107da576107c781836120ca565b909390925061157e565b611620915060203d6020116109845761097681836120ca565b8461147e565b61155290604061163a60246004350161212f565b611480565b61164890612065565b61018051801561142a5780fd5b90919293976063198a82030183528835601e1983360301811215610105576001600160401b038382013511610105578281013560051b36036020848301011361010557908282013581526020810160208484013560051b830101926020858201019261018051915b8681013583106116e15750505050506020806001929a0193019401929193906113d9565b9091929394601f19838203018552603e1987830136030186351215610105578682018635016001600160401b036020820135116101055760208101353603604082011361010557602061173f60019383604084809601359101612627565b97019501930191906116bd565b90506020813d602011611776575b81611767602093836120ca565b8101031261080d57518361135d565b3d915061175a565b604051637974230960e11b8152600490fd5b5060203d6020116117bf575b6117a981610120516120ca565b60206101205180928101031261080d575161108f565b503d61179c565b9091956101a31961012051820301875260e05151906020604082019280518352015190610100918252604060208201528151518093526020606082019260608560051b84010160a0525101906000915b84831061183d5750505050506001602060a051978160e0510160e052019101919091610fdc565b605f198260a051030184528051602060a05191604083019260018060a01b038251169052015160c0526040602060a051015260c0515180915260a0516060808201918360051b01016101a052602060c05101610140526000905b8282106118ba575050506020806001926101a05160a05201940192019192611816565b6020600191605f1960a0516101a0510301815261190f610140515160406118f0825160606101a0515260606101a0510190611f91565b9185810151866101a051015201516101a0516040818403910152611f91565b6101a0528161014051016101405201910190611897565b6044356101c052610f34565b602090813d8311611956575b61194881836120ca565b8101031261080d5781610e99565b503d61193e565b60ca546001600160a01b0316611976600480350161212f565b6040519061198382612034565b3382526001600160a01b03848116602084015216604082015260043560440135606082015260016080820152813b15610105576040518092637da77a3360e11b825281806119d8610180519560048301612143565b039161018051905af18015610780576119f2575b50610e9b565b6119fb90612065565b816119ec565b611a1a915060203d6020116109845761097681836120ca565b81610e14565b611a389060203d6020116109c5576109b781836120ca565b60805280610ddc565b6040516333df015b60e01b8152600490fd5b611a6c915060203d6020116109c5576109b781836120ca565b81610d6b565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b346101055760203660031901126101055760043560ce556101805180f35b3461010557608036600319011261010557611aee611f7b565b6001600160a01b036024803582811693908490036101055760443583811680910361010557606435848116809103610105578460c95416946040518096632474521560e21b825261018051600483015233878301528160446020998a935afa908115610780576101805191611d77575b501561098b57610180515460ff8160081c161580611d6a575b611b8090611fd1565b61ffff191693610102851761018051551693604051906301ffc9a760e01b9182815263081e57a760e31b6004820152878183818a5afa9283156107805788916101805194611d4b575b5083611cf8575b83611ca5575b83611c52575b50505015610acb577f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498956002946bffffffffffffffffffffffff60a01b928360cc54161760cc558260cb54161760cb558160ca54161760ca5560cd54161760cd5517610180515560405160028152a16101805180f35b604051908152633df6cef760e01b6004820152925090829081855afa908115610780576101805191611c88575b50878681611bdc565b611c9f9150863d88116109c5576109b781836120ca565b87611c7f565b9250506040518281526333ca6d2360e21b600482015287818381885afa80156107805788916101805191611cdb575b5092611bd6565b611cf29150823d84116109c5576109b781836120ca565b8a611cd4565b9250506040518281526312b3ed2b60e01b6004820152878183818c5afa80156107805788916101805191611d2e575b5092611bd0565b611d459150823d84116109c5576109b781836120ca565b8a611d27565b611d63919450823d84116109c5576109b781836120ca565b928a611bc9565b50600260ff821610611b77565b611d8e9150873d89116109c5576109b781836120ca565b88611b5e565b3461010557610180518060031936011261010257602060ce54604051908152f35b346101055761018051806003193601126101025760c954604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8600482015233602482015290602090829060449082906001600160a01b03165afa908115610780576101805191611eb2575b501561098b5760655460ff811615611e765760ff19166065557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a16101805180f35b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b611eca915060203d81116109c5576109b781836120ca565b81611e2c565b346101055761018051806003193601126101025760cb546040516001600160a01b039091168152602090f35b346101055761018051806003193601126101025760cd546040516001600160a01b039091168152602090f35b3461080d57602036600319011261080d576004359063ffffffff60e01b821680920361080d5760209163041f8a0360e11b8114908115611f6a575b5015158152f35b6301ffc9a760e01b14905083611f63565b600435906001600160a01b038216820361080d57565b919082519283825260005b848110611fbd575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611f9c565b15611fd857565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b60a081019081106001600160401b0382111761204f57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161204f57604052565b60c081019081106001600160401b0382111761204f57604052565b6101c081019081106001600160401b0382111761204f57604052565b604081019081106001600160401b0382111761204f57604052565b90601f801991011681019081106001600160401b0382111761204f57604052565b9081602091031261080d5751801515810361080d5790565b9081602091031261080d57516001600160a01b038116810361080d5790565b35801515810361080d5790565b356001600160a01b038116810361080d5790565b919091608060a082019360018060a01b03808251168452806020830151166020850152604082015116604084015260608101516060840152015190600382101561218d5760800152565b634e487b7160e01b600052602160045260246000fd5b903590601e198136030182121561080d57018035906001600160401b03821161080d57602001918160051b3603831361080d57565b6001600160401b03811161204f5760051b60200190565b9291926001600160401b03821161204f5760405191612218601f8201601f1916602001846120ca565b82948184528183011161080d578281602093846000960137010152565b9291909261026052826102005261024052602061225861022093600085526121d8565b61226560405191826120ca565b808452610200518152019161024051916102005192610260519360051b84011161080d57926102809283525b6102005160051b610260519084519082018110156125ec5735906001600160401b03821161080d570160408161024051031261080d57604051906122d4826120af565b8035825260208101356001600160401b03811161080d5761024051601f82840101121561080d5780820135612308816121d8565b9261231660405194856120ca565b81845260208401906102405160208460051b86840101011161080d57602084820101915b60208460051b8684010101831061236857505050506020808401929092525090825283518101845201612291565b82356001600160401b03811161080d576040601f1982888601016102405103011261080d576040519061239a826120af565b8387018101602001356001600160a01b038116810361080d5782526001600160401b036040828987010101351161080d57610240518488018201604081013501603f01121561080d578387018101604081013501602001356123fb816121d8565b9161240960405193846120ca565b818352610240516020840191908a88018201604081810135909101600586901b01011161080d5760408a88018201818101350101915b8a88018201604081810135909101600586901b0101831061247357505050509181602093848094015281520192019161233a565b6001600160401b0383351161080d5761024051906060898d0184016040810135018535018303603f19011261080d57604051918260608101106001600160401b0360608501111761204f576060830160409081528a8e01850180820135018635010135906001600160401b03821161080d578a8e0185016040810135018635018201605f0181131561080d57612524918e8c01860160408181013590910188350190910190810135906060016121ef565b82528b89018301604081013501843501606081013560208401526001600160401b036080909101351161080d576102405190898d018401604081013501853501608081013501605f0182131561080d576020926125dc84938f60608e604060808c35828d8786010101358d87860101010101358c35828d8786010101358d8786010101010101359260808c3560408d8486010101358d8486010101010135918b8d3592604082828501010135920101010101016121ef565b604082015281520192019161243f565b50505090505190565b903590601e198136030182121561080d57018035906001600160401b03821161080d5760200191813603831361080d57565b908060209392818452848401376000828201840152601f01601f1916010190565b919082604091031261080d576020825192015190565b906020825260018060a01b0391828251166020820152826020830151166040820152826040830151166060820152606082015192600884101561218d576127389360808301528060808401511660a08301528060a08401511660c08301528060c08401511660e08301528060e08401511661010090818401528301511661012090818301528201516101409081830152820151610160908183015282015115156101809081830152820151906101c0916127256101a09184838501526101e0840190611f91565b93015191601f1982850301910152611f91565b90565b9190820391821161274857565b634e487b7160e01b600052601160045260246000fd5b60ff6065541661276a57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fdfea264697066735822122086c9a01ee68590f6591ff9be3f5ff1bddebf66485f17a6a6300ab467a0e340e664736f6c63430008120033";

type SwapManagerV2ConstructorParams =
  | [linkLibraryAddresses: SwapManagerV2LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapManagerV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SwapManagerV2__factory extends ContractFactory {
  constructor(...args: SwapManagerV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SwapManagerV2__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SwapManagerV2LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$75df3f6366b0557754cd3ba14359105414\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$183737d697d7aa9b5df9988cbe11bc4947\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SwapManagerV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SwapManagerV2__factory {
    return super.connect(runner) as SwapManagerV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapManagerV2Interface {
    return new Interface(_abi) as SwapManagerV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SwapManagerV2 {
    return new Contract(address, _abi, runner) as unknown as SwapManagerV2;
  }
}

export interface SwapManagerV2LibraryAddresses {
  ["contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"]: string;
  ["contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"]: string;
}
