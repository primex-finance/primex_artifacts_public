/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  DebtTokenV2,
  DebtTokenV2Interface,
} from "../../../../contracts/mocks/upgradeMocks/DebtTokenV2";

const _abi = [
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_users",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_length",
        type: "uint256",
      },
    ],
    name: "batchBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bucket",
    outputs: [
      {
        internalType: "contract IBucketV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeDecreaser",
    outputs: [
      {
        internalType: "contract IFeeExecutor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_bucketsFactory",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "scaledBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "scaledTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBucket",
        name: "_bucket",
        type: "address",
      },
    ],
    name: "setBucket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFeeExecutor",
        name: "_feeDecreaser",
        type: "address",
      },
    ],
    name: "setFeeDecreaser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IActivityRewardDistributor",
        name: "_traderRewardDistributor",
        type: "address",
      },
    ],
    name: "setTraderRewardDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testUpgrade",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "traderRewardDistributor",
    outputs: [
      {
        internalType: "contract IActivityRewardDistributor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100c1576000549060ff8260081c1661006f575060ff80821603610034575b604051611df090816100c78239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe60806040818152600436101561001457600080fd5b600091823560e01c90816301ffc9a7146118055750806306fdde031461175c578063095ea7b314610fd25780630a3f0f0014611613578063156e29f61461137057806318160ddd146112cc5780631da24f3e1461128a57806323b872dd14611264578063313ce567146112405780633950935114610fd25780633fa4f24514611222578063552410771461120757806370a082311461114c5780637ed095fe1461112457806395d89b41146110485780639d6aed0b14610fd7578063a457c2d714610fd2578063a9059cbb14610fa8578063b1bf962d14610f8a578063c029e86814610f62578063dd62ed3e14610f15578063de7ea79d14610aa3578063e4a24bc0146109d5578063eb1738e5146105a1578063ed18aea9146103ff578063f31157c2146103d75763f5298aca1461014b57600080fd5b346103d357610159366118fa565b6097546001600160a01b039081169493913386036103c2578183169586156103b15784156103a05761018b8286611d33565b90811561038f579083929189946098541690816102d4575b50506101b0915084611abd565b806099541690816101eb575b82877fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca56020888a51908152a280f35b6097546001600160a01b038516600090815260336020526040902054911691803b156102d057865163266aa8a560e01b81526001600160a01b03938416600482015294909216602485015260448401526001606484015281908390608490829084905af191826102b4575b5050907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca592602092156000146102af57600080516020611d9b8339815191528382516312df74af60e21b8152a15b9250908438806101bc565b6102a4565b6102c090939293611924565b6102cc57908438610256565b8480fd5b8380fd5b6001600160a01b03871660009081526033602052604090205490823b1561038b57895163627749b360e11b81526001600160a01b0389811660048301526024820193909352911660448201526064810193909352849081908490608490829084905af19283610377575b50506101b0911560001461037257600080516020611d9b8339815191526020885163303a98e360e21b8152a15b38806101a3565b61036b565b61038090611924565b6102d057833861033e565b8680fd5b8651630512674560e41b8152600490fd5b8551633abe877f60e11b8152600490fd5b855163044aa57560e41b8152600490fd5b845163d291739b60e01b8152600490fd5b5080fd5b50346103d357816003193601126103d35760985490516001600160a01b039091168152602090f35b50346103d3576020908160031936011261059d576004356001600160a01b0381811693918490036102cc576004828260975416855192838092637b10399960e01b82525afa908115610593579083918791610566575b506044855180948193632474521560e21b83528a6004840152336024840152165afa90811561052e578591610549575b50156105385782159081156104c7575b50156104b757506bffffffffffffffffffffffff60a01b609854161760985580f35b5163044aa57560e41b8152600490fd5b82516301ffc9a760e01b8152636c91bd0560e11b60048201529091508181602481875afa91821561052e578592610501575b505038610495565b6105209250803d10610527575b6105188183611938565b810190611a63565b38806104f9565b503d61050e565b83513d87823e3d90fd5b815163036be76f60e61b8152600490fd5b6105609150823d8411610527576105188183611938565b38610485565b6105869150823d841161058c575b61057e8183611938565b810190611a7b565b38610455565b503d610574565b84513d88823e3d90fd5b8280fd5b50346103d35760803660031901126103d35767ffffffffffffffff6004358181116102d057366023820112156102d05780600401356105df816119b1565b916105ec85519384611938565b8183526024602084019260051b8201019036821161038b57602401915b8183106109b0575050506024359182116102d057366023830112156102d057816004013591610637836119b1565b9261064485519485611938565b8084526024602085019160051b8301019136831161038b57602401905b8282106109a05750506097546001600160a01b0316905033810361098f5761068a606435611bb6565b610695606435611bb6565b60985460995491956001600160a01b0392831615159490929091899116801515825b606435811061092f5750610883575b50949392919050845b60643581106107a2575050506106e3575080f35b6099546097546001600160a01b039081169116803b156102d0578392836107309361074289519889968795869463c88157e360e01b8652600486015260a0602486015260a4850190611c21565b83810360031901604485015290611c5e565b60643560648301526001608483015203925af1918261078e575b505061078857516312df74af60e21b8152600080516020611d9b83398151915290602090a15b38808280f35b50610782565b61079790611924565b61059d57823861075c565b82939495506107b5816108089394611bf7565b51610813575b6001600160a01b036107cd8288611bf7565b51167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca560206107fc8487611bf7565b518b51908152a2611be8565b9087949392916106cf565b8461083c6001600160a01b03610829848a611bf7565b51166108358488611bf7565b5190611abd565b156107bb576108736001600160a01b036108568389611bf7565b51166001600160a01b031660009081526033602052604090205490565b61087d8289611bf7565b526107bb565b803b156103d3578782916108ba838a6108cc978e51988996879586946305c6a25960e21b8652608060048701526084860190611c21565b84810360031901602486015290611c5e565b906044830152604435606483015203925af19182610917575b505061091257600080516020611d9b8339815191526020875163303a98e360e21b8152a15b3887816106c6565b61090a565b61092090611924565b61092b5787386108e5565b8780fd5b816109619293945061094d604435610947848a611bf7565b51611d33565b610957838a611bf7565b5261096a57611be8565b908a92916106b7565b61097f6001600160a01b03610856838c611bf7565b610989828c611bf7565b52611be8565b835163d291739b60e01b8152600490fd5b8135815260209182019101610661565b82356001600160a01b03811681036109d057815260209283019201610609565b600080fd5b50346103d35760203660031901126103d3576001600160a01b0360043581811692908390036102d05781609a54163303610a9357609754918216610a835780516301ffc9a760e01b8152633aa17d5560e11b6004820152602081602481875afa908115610a79578591610a5b575b50156104b757506001600160a01b0319161760975580f35b610a73915060203d8111610527576105188183611938565b38610a43565b82513d87823e3d90fd5b516307d64eb160e21b8152600490fd5b5163036be76f60e61b8152600490fd5b50346103d35760803660031901126103d35767ffffffffffffffff6004358181116102d057610ad690369060040161195a565b6024358281116102cc57610aee90369060040161195a565b6044359260ff84168403610f11576064356001600160a01b03811691908290036109d05786549360ff8560081c161593848095610f04575b8015610eed575b15610e9257600195858760ff198316178b55610e81575b50610b5e60ff8a5460081c16610b5981611a03565b611a03565b8151838111610e6d5780610b736036546119c9565b93601f94858111610dff575b50602090858311600114610d80578c92610d75575b5050600019600383901b1c191690871b176036555b8051928311610d6157908291610bc06037546119c9565b828111610cf1575b506020918311600114610c72578992610c67575b5050600019600383901b1c191690841b176037555b855493610c0360ff8660081c16611a03565b609a549060ff60a01b9060a01b16906affffffffffffffffffffff60a81b161717609a55610c2f578380f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989260209261ff001916855551908152a13880808380f35b015190503880610bdc565b60378a528693507f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae9190601f1984168b5b818110610cd957508411610cc0575b505050811b01603755610bf1565b015160001960f88460031b161c19169055388080610cb2565b82840151855589969094019360209384019301610ca3565b9091925060378a527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae8380860160051c82019260208710610d58575b9186958a929594930160051c01915b828110610d4a575050610bc8565b8c8155869550899101610d3c565b92508192610d2d565b634e487b7160e01b89526041600452602489fd5b015190503880610b94565b60368d528993507f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b89190601f1984168e5b818110610de757508411610dce575b505050811b01603655610ba9565b015160001960f88460031b161c19169055388080610dc0565b8284015185558c969094019360209384019301610db1565b90915060368c527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b88580850160051c82019260208610610e64575b918b91869594930160051c01915b828110610e56575050610b7f565b8e81558594508b9101610e48565b92508192610e3a565b634e487b7160e01b8a52604160045260248afd5b61ffff191661010117895538610b44565b875162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015610b2d5750600160ff871614610b2d565b50600160ff871610610b26565b8580fd5b50346103d357806003193601126103d357602091610f316118a3565b82610f3a6118b9565b6001600160a01b03928316845260348652922091166000908152908352819020549051908152f35b50346103d357816003193601126103d35760975490516001600160a01b039091168152602090f35b50346103d357816003193601126103d3576020906035549051908152f35b50346103d357806003193601126103d357600490610fc46118a3565b50516365cf163b60e11b8152fd5b6118cf565b5090346110455780600319360112611045575080518181019181831067ffffffffffffffff84111761102f5761102b928152600b82526a2232b13a2a37b5b2b72b1960a91b6020830152519182918261185a565b0390f35b634e487b7160e01b600052604160045260246000fd5b80fd5b50346103d357816003193601126103d35780519082603754611069816119c9565b808552916001918083169081156110fc575060011461109f575b5050506110958261102b940383611938565b519182918261185a565b9450603785527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae5b8286106110e45750505061109582602061102b9582010194611083565b805460208787018101919091529095019481016110c7565b61102b97508693506020925061109594915060ff191682840152151560051b82010194611083565b50346103d357816003193601126103d35760995490516001600160a01b039091168152602090f35b50346103d35760209182600319360112611045576001600160a01b03806111716118a3565b168252603384526004848484205492609754168551928380926368d0612f60e01b82525afa9283156111fc57926111cb575b506111be6b033b2e3c9fd0803ce8000000926111c392611ce4565b611cb2565b049051908152f35b91508382813d83116111f5575b6111e28183611938565b810103126109d0579051906111be6111a3565b503d6111d8565b8451903d90823e3d90fd5b823461104557602036600319011261104557600435609b5580f35b50346103d357816003193601126103d357602090609b549051908152f35b50346103d357816003193601126103d35760209060ff609a5460a01c169051908152f35b50346103d35760603660031901126103d3576004906112816118a3565b50610fc46118b9565b50346103d35760203660031901126103d3576020906112c56112aa6118a3565b6001600160a01b031660009081526033602052604090205490565b9051908152f35b50346103d357816003193601126103d35760355460975482516368d0612f60e01b815291939190602090829060049082906001600160a01b03165afa9182156113655791611332575b506111c36111be6b033b2e3c9fd0803ce800000092602095611ce4565b90506020813d821161135d575b8161134c60209383611938565b810103126109d057516111c3611315565b3d915061133f565b8351903d90823e3d90fd5b50346103d35761137f366118fa565b6097546001600160a01b039081169493913386036103c2578183169586156103b15784156103a0576113b18286611d33565b9182156116025791879184938a956098541680611520575b505050600080516020611d7b8339815191526020826113eb8794603554611a9a565b603555848452603382528984208181540190558951908152a38060995416908161143f575b82877f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968856020888a51908152a280f35b6097546001600160a01b038516600090815260336020526040902054911691803b156102d057865163266aa8a560e01b81526001600160a01b03938416600482015294909216602485015260448401526001606484015281908390608490829084905af19182611508575b5050907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885926020921560001461150357600080516020611d9b8339815191528382516312df74af60e21b8152a15b925090843880611410565b6114f8565b61151490939293611924565b6102cc579084386114aa565b6001600160a01b0388166000908152603360205260409020549596939594509091813b156102d057895163627749b360e11b81526001600160a01b03898116600483015260248201969096529416604485015260648401919091528290608490829084905af190816115d6575b5087600080516020611d7b83398151915260208295948a94156000146115d157600080516020611d9b833981519152828b5163303a98e360e21b8152a15b926113c9565b6115cb565b90600080516020611d7b8339815191526020996115f68a94969596611924565b9950509092919261158d565b865163abd351b160e01b8152600490fd5b50346103d3576020908160031936011261059d576004356001600160a01b0381811693918490036102cc576004828260975416855192838092637b10399960e01b82525afa90811561059357908391879161173f575b506044855180948193632474521560e21b83528a6004840152336024840152165afa90811561052e578591611722575b50156105385782159081156116cb575b50156104b757506bffffffffffffffffffffffff60a01b609954161760995580f35b82516301ffc9a760e01b815263187d5ef960e11b60048201529091508181602481875afa91821561052e578592611705575b5050386116a9565b61171b9250803d10610527576105188183611938565b38806116fd565b6117399150823d8411610527576105188183611938565b38611699565b6117569150823d841161058c5761057e8183611938565b38611669565b50346103d357816003193601126103d3578051908260365461177d816119c9565b808552916001918083169081156110fc57506001146117a8575050506110958261102b940383611938565b9450603685527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b85b8286106117ed5750505061109582602061102b9582010194611083565b805460208787018101919091529095019481016117d0565b8390346103d35760203660031901126103d35760043563ffffffff60e01b811680910361059d5760209250633d5b079f60e11b8114908115611849575b5015158152f35b6301ffc9a760e01b14905083611842565b6020808252825181830181905290939260005b82811061188f57505060409293506000838284010152601f8019910116010190565b81810186015184820160400152850161186d565b600435906001600160a01b03821682036109d057565b602435906001600160a01b03821682036109d057565b346109d05760403660031901126109d0576118e86118a3565b5060405162944b8d60e21b8152600490fd5b60609060031901126109d0576004356001600160a01b03811681036109d057906024359060443590565b67ffffffffffffffff811161102f57604052565b90601f8019910116810190811067ffffffffffffffff82111761102f57604052565b81601f820112156109d05780359067ffffffffffffffff821161102f576040519261198f601f8401601f191660200185611938565b828452602083830101116109d057816000926020809301838601378301015290565b67ffffffffffffffff811161102f5760051b60200190565b90600182811c921680156119f9575b60208310146119e357565b634e487b7160e01b600052602260045260246000fd5b91607f16916119d8565b15611a0a57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b908160209103126109d0575180151581036109d05790565b908160209103126109d057516001600160a01b03811681036109d05790565b91908201809211611aa757565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03168015611b675780600052603360205260406000205491808310611b1757602081600080516020611d7b83398151915292600095858752603384520360408620558060355403603555604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b90611bc0826119b1565b611bcd6040519182611938565b8281528092611bde601f19916119b1565b0190602036910137565b6000198114611aa75760010190565b8051821015611c0b5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b90815180825260208080930193019160005b828110611c41575050505090565b83516001600160a01b031685529381019392810192600101611c33565b90815180825260208080930193019160005b828110611c7e575050505090565b835185529381019392810192600101611c70565b8115611c9c570490565b634e487b7160e01b600052601260045260246000fd5b906b019d971e4fe8401e74000000820191828111611aa7578210611cd257565b604051630a77254f60e01b8152600490fd5b600092918015918215611d0d575b505015611cfb57565b604051631550e8b760e01b8152600490fd5b80820294509150811582850482141715611aa757611d2b9084611c92565b143880611cf2565b906b033b2e3c9fd0803ce80000009182810292818404811482151715611aa757830403611cfb57611d678160011c83611a9a565b918210611cd257611d7791611c92565b9056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef97e3d6f5d9606f45b75b508f1245f23d4d4e5470e8adae85f3156477ffdcdff0a26469706673582212201205348336435c8668f416134128d3a75e61fc58fc5e1c98aa597a68fc7fa85b64736f6c63430008120033";

type DebtTokenV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DebtTokenV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DebtTokenV2__factory extends ContractFactory {
  constructor(...args: DebtTokenV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DebtTokenV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DebtTokenV2__factory {
    return super.connect(runner) as DebtTokenV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebtTokenV2Interface {
    return new Interface(_abi) as DebtTokenV2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): DebtTokenV2 {
    return new Contract(address, _abi, runner) as unknown as DebtTokenV2;
  }
}
