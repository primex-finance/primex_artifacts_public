/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  DebtTokenV2,
  DebtTokenV2Interface,
} from "../../../../contracts/mocks/upgradeMocks/DebtTokenV2";

const _abi = [
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes4",
        name: "error",
        type: "bytes4",
      },
    ],
    name: "Log",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_users",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_length",
        type: "uint256",
      },
    ],
    name: "batchBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bucket",
    outputs: [
      {
        internalType: "contract IBucketV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeDecreaser",
    outputs: [
      {
        internalType: "contract IFeeExecutor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_bucketsFactory",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "scaledBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "scaledTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBucket",
        name: "_bucket",
        type: "address",
      },
    ],
    name: "setBucket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFeeExecutor",
        name: "_feeDecreaser",
        type: "address",
      },
    ],
    name: "setFeeDecreaser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IActivityRewardDistributor",
        name: "_traderRewardDistributor",
        type: "address",
      },
    ],
    name: "setTraderRewardDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testUpgrade",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "traderRewardDistributor",
    outputs: [
      {
        internalType: "contract IActivityRewardDistributor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460bd576000549060ff8260081c16606b575060ff808216036031575b604051611dd390816100c38239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a1386022565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816301ffc9a71461177c5750806306fdde03146116e7578063095ea7b314610fd35780630a3f0f001461158b578063156e29f6146112d657806318160ddd146112815780631da24f3e1461124757806323b872dd14611224578063313ce567146112005780633950935114610fd35780633fa4f245146111e257806355241077146111c757806370a08231146111155780637ed095fe146110ec57806395d89b41146110235780639d6aed0b14610fd8578063a457c2d714610fd3578063a9059cbb14610fa6578063b1bf962d14610f88578063c029e86814610f5f578063dd62ed3e14610f14578063de7ea79d14610a9d578063e4a24bc0146109cf578063eb1738e51461059e578063ed18aea914610401578063f31157c2146103d85763f5298aca1461014a57600080fd5b346103d55761015836611871565b6097549092906001600160a01b03163381036103c3576001600160a01b0382169384156103b157831561039f5761018f8185611aa0565b90811561038d5760985487916001600160a01b0390911690816102dd575b5050506101bb915082611c24565b60995484906001600160a01b0316806101ff575b50837fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5602085604051908152a280f35b609754858352603360205260408320546001600160a01b0390911691803b156102d95760405163266aa8a560e01b81526001600160a01b03938416600482015294909216602485015260448401526001606484015281908390608490829084905af191826102c4575b50507fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca591602091156000146102bf57600080516020611d7e833981519152826040516312df74af60e21b8152a15b915083386101cf565b6102b6565b816102ce9161189b565b6102d9578338610268565b8380fd5b8783526033602052604083205491803b156102d95760405163627749b360e11b81526001600160a01b0388811660048301526024820194909452959092166044860152606485015281908490608490829084905af19283610374575b50506101bb911560001461036f57600080516020611d7e833981519152602060405163303a98e360e21b8152a15b8538806101ad565b610367565b8161037e9161189b565b610389578538610339565b8580fd5b604051630512674560e41b8152600490fd5b604051633abe877f60e11b8152600490fd5b60405163044aa57560e41b8152600490fd5b60405163d291739b60e01b8152600490fd5b80fd5b50346103d557806003193601126103d5576098546040516001600160a01b039091168152602090f35b50346103d55760203660031901126103d5576004356001600160a01b0381169081900361059a57609754604051637b10399960e01b815290602090829060049082906001600160a01b03165afa90811561053157604491602091859161056d575b50604051632474521560e21b81526004810186905233602482015292839182906001600160a01b03165afa90811561053157839161054e575b501561053c57801580156104ca575b156103b1576bffffffffffffffffffffffff60a01b609854161760985580f35b506040516301ffc9a760e01b8152636c91bd0560e11b6004820152602081602481855afa908115610531578391610502575b506104aa565b610524915060203d60201161052a575b61051c818361189b565b81019061199b565b386104fc565b503d610512565b6040513d85823e3d90fd5b60405163036be76f60e61b8152600490fd5b610567915060203d60201161052a5761051c818361189b565b3861049b565b61058d9150823d8411610593575b610585818361189b565b81019061197c565b38610462565b503d61057b565b5080fd5b50346103d55760803660031901126103d55760043567ffffffffffffffff811161059a573660238201121561059a5780600401356105db8161192a565b916105e9604051938461189b565b8183526024602084019260051b820101903682116107af57602401915b8183106109aa5750505060243567ffffffffffffffff811161093a573660238201121561093a5780600401359061063c8261192a565b9161064a604051938461189b565b8083526024602084019160051b8301019136831161038957602401905b82821061099a57505050604435916064359160018060a01b0360975416903382036103c357610695846119b3565b9061069f856119b3565b60985460995491976001600160a01b0392831615159591909216918991831515835b8a811061093e575061088c575b5050809695949392915050855b8581106107b3575050506106ed578280f35b6099546097546001600160a01b0390811692911690813b156107af578461073d93819561074f604051998a978896879563c88157e360e01b8752600487015260a0602487015260a4860190611a0f565b84810360031901604486015290611a4c565b9060648301526001608483015203925af1918261079a575b505061079557600080516020611d7e83398151915260206040516312df74af60e21b8152a15b388181808280f35b61078d565b816107a49161189b565b61059a578138610767565b8480fd5b8293949596506107c681600193946119e5565b51610820575b818060a01b036107dc82886119e5565b51167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5602061080b84876119e5565b51604051908152a201908795949392916106db565b84610847838060a01b03610834848a6119e5565b511661084084886119e5565b5190611c24565b156107cc5761087c828060a01b0361085f83896119e5565b51166001600160a01b031660009081526033602052604090205490565b610886828a6119e5565b526107cc565b833b1561093a576108d7936108c5848a8d948296604051998a97889687956305c6a25960e21b8752608060048801526084870190611a0f565b85810360031901602487015290611a4c565b916044840152606483015203925af19182610921575b505061091c57600080516020611d7e833981519152602060405163303a98e360e21b8152a15b388781806106ce565b610913565b8161092b9161189b565b6109365787386108ed565b8780fd5b8280fd5b8394508161095a6001939495610954848b6119e5565b51611aa0565b610964838b6119e5565b52610975575b01908b9392916106c1565b8b6109948261098e8d61085f83888060a01b03926119e5565b926119e5565b5261096a565b8135815260209182019101610667565b82356001600160a01b03811681036109ca57815260209283019201610606565b600080fd5b50346103d55760203660031901126103d5576004356001600160a01b0381169081900361059a57609a546001600160a01b0316330361053c576097546001600160a01b038116610a8b576040516301ffc9a760e01b8152633aa17d5560e11b6004820152602081602481865afa908115610a80578491610a61575b50156103b1576001600160a01b0319161760975580f35b610a7a915060203d60201161052a5761051c818361189b565b38610a4a565b6040513d86823e3d90fd5b6040516307d64eb160e21b8152600490fd5b50346103d55760803660031901126103d55760043567ffffffffffffffff811161059a57610acf9036906004016118d3565b60243567ffffffffffffffff811161093a57610aef9036906004016118d3565b906044359160ff831683036102d9576064356001600160a01b03811691908290036107af5784549260ff8460081c161593848095610f07575b8015610ef0575b15610e945760ff198116600117875584610e83575b50610b5e60ff875460081c16610b5981611bc4565b611bc4565b80519067ffffffffffffffff8211610e6f578190610b7d603654611942565b601f8111610dfa575b50602090601f8311600114610d89578892610d7e575b50508160011b916000199060031b1c1916176036555b80519067ffffffffffffffff8211610d6a578190610bd1603754611942565b601f8111610cf5575b50602090601f8311600114610c84578792610c79575b50508160011b916000199060031b1c1916176037555b835492610c1860ff8560081c16611bc4565b609a549060ff60a01b9060a01b16906affffffffffffffffffffff60a81b161717609a55610c44575080f35b61ff00191681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b015190503880610bf0565b60378852600080516020611d5e8339815191529250601f198416885b818110610cdd5750908460019594939210610cc4575b505050811b01603755610c06565b015160001960f88460031b161c19169055388080610cb6565b92936020600181928786015181550195019301610ca0565b90915060378752601f830160051c600080516020611d5e833981519152019060208410610d54575b90601f8493920160051c600080516020611d5e83398151915201905b818110610d465750610bda565b888155849350600101610d39565b600080516020611d5e8339815191529150610d1d565b634e487b7160e01b86526041600452602486fd5b015190503880610b9c565b60368952600080516020611d1e8339815191529250601f198416895b818110610de25750908460019594939210610dc9575b505050811b01603655610bb2565b015160001960f88460031b161c19169055388080610dbb565b92936020600181928786015181550195019301610da5565b90915060368852601f830160051c600080516020611d1e833981519152019060208410610e59575b90601f8493920160051c600080516020611d1e83398151915201905b818110610e4b5750610b86565b898155849350600101610e3e565b600080516020611d1e8339815191529150610e22565b634e487b7160e01b87526041600452602487fd5b61ffff191661010117865538610b44565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015610b2f5750600160ff821614610b2f565b50600160ff821610610b28565b50346103d55760403660031901126103d5576040602091610f3361181a565b610f3b611830565b6001600160a01b039182168352603485528383209116825283522054604051908152f35b50346103d557806003193601126103d5576097546040516001600160a01b039091168152602090f35b50346103d557806003193601126103d5576020603554604051908152f35b50346103d55760403660031901126103d557610fc061181a565b506040516365cf163b60e11b8152600490fd5b611846565b50346103d557806003193601126103d5575061101f604051610ffb60408261189b565b600b81526a2232b13a2a37b5b2b72b1960a91b6020820152604051918291826117d1565b0390f35b50346103d557806003193601126103d55760405190806037549061104682611942565b80855291600181169081156110c5575060011461107a575b61101f8461106e8186038261189b565b604051918291826117d1565b60378152600080516020611d5e833981519152939250905b8082106110ab5750909150810160200161106e8261105e565b919260018160209254838588010152019101909291611092565b60ff191660208087019190915292151560051b8501909201925061106e915083905061105e565b50346103d557806003193601126103d5576099546040516001600160a01b039091168152602090f35b50346103d55760203660031901126103d5576001600160a01b0361113761181a565b16815260336020526040812054906004602060018060a01b0360975416604051928380926368d0612f60e01b82525afa9182156111bb5791611188575b60206111808385611b5b565b604051908152f35b90506020813d6020116111b3575b816111a36020938361189b565b810103126109ca57516020611174565b3d9150611196565b604051903d90823e3d90fd5b50346103d55760203660031901126103d557600435609b5580f35b50346103d557806003193601126103d5576020609b54604051908152f35b50346103d557806003193601126103d557602060ff609a5460a01c16604051908152f35b50346103d55760603660031901126103d55761123e61181a565b50610fc0611830565b50346103d55760203660031901126103d557602061118061126661181a565b6001600160a01b031660009081526033602052604090205490565b50346103d557806003193601126103d5576035546097546040516368d0612f60e01b815291929190602090829060049082906001600160a01b03165afa9182156111bb57916111885760206111808385611b5b565b50346103d5576112e536611871565b6097549092906001600160a01b03163381036103c3576001600160a01b0382169384156103b157831561039f5761131c8185611aa0565b8015611579576098548693889390916001600160a01b031680611498575b5050506020600080516020611d3e8339815191529161135b81603554611b38565b6035558484526033825260408420818154019055604051908152a360995484906001600160a01b0316806113ba575b50837f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885602085604051908152a280f35b6097546001600160a01b03848116600090815260336020526040902054911691803b156102d95760405163266aa8a560e01b81526001600160a01b03938416600482015294909216602485015260448401526001606484015281908390608490829084905af19182611483575b50507f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885916020911560001461147e57600080516020611d7e833981519152826040516312df74af60e21b8152a15b9150833861138a565b611475565b8161148d9161189b565b6102d9578338611427565b9091939294506114bb8660018060a01b0316600052603360205260406000205490565b93813b156102d95760405163627749b360e11b81526001600160a01b03888116600483015260248201969096529416604485015260648401919091528290608490829084905af19081611552575b50600080516020611d3e8339815191526020869388931560001461154d57600080516020611d7e8339815191528260405163303a98e360e21b8152a15b913861133a565b611546565b602087611570889599600080516020611d3e8339815191529461189b565b97935050611509565b60405163abd351b160e01b8152600490fd5b50346103d55760203660031901126103d5576004356001600160a01b0381169081900361059a57609754604051637b10399960e01b815290602090829060049082906001600160a01b03165afa9081156105315760449160209185916116ca575b50604051632474521560e21b81526004810186905233602482015292839182906001600160a01b03165afa9081156105315783916116ab575b501561053c5780158015611654575b156103b1576bffffffffffffffffffffffff60a01b609954161760995580f35b506040516301ffc9a760e01b815263187d5ef960e11b6004820152602081602481855afa90811561053157839161168c575b50611634565b6116a5915060203d60201161052a5761051c818361189b565b38611686565b6116c4915060203d60201161052a5761051c818361189b565b38611625565b6116e19150823d841161059357610585818361189b565b386115ec565b50346103d557806003193601126103d55760405190806036549061170a82611942565b80855291600181169081156110c557506001146117315761101f8461106e8186038261189b565b60368152600080516020611d1e833981519152939250905b8082106117625750909150810160200161106e8261105e565b919260018160209254838588010152019101909291611749565b90503461059a57602036600319011261059a5760043563ffffffff60e01b811680910361093a5760209250633d5b079f60e11b81149081156117c0575b5015158152f35b6301ffc9a760e01b149050386117b9565b91909160208152825180602083015260005b818110611804575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016117e3565b600435906001600160a01b03821682036109ca57565b602435906001600160a01b03821682036109ca57565b346109ca5760403660031901126109ca5761185f61181a565b5060405162944b8d60e21b8152600490fd5b60609060031901126109ca576004356001600160a01b03811681036109ca57906024359060443590565b90601f8019910116810190811067ffffffffffffffff8211176118bd57604052565b634e487b7160e01b600052604160045260246000fd5b81601f820112156109ca5780359067ffffffffffffffff82116118bd5760405192611908601f8401601f19166020018561189b565b828452602083830101116109ca57816000926020809301838601378301015290565b67ffffffffffffffff81116118bd5760051b60200190565b90600182811c92168015611972575b602083101461195c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611951565b908160209103126109ca57516001600160a01b03811681036109ca5790565b908160209103126109ca575180151581036109ca5790565b906119bd8261192a565b6119ca604051918261189b565b82815280926119db601f199161192a565b0190602036910137565b80518210156119f95760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b906020808351928381520192019060005b818110611a2d5750505090565b82516001600160a01b0316845260209384019390920191600101611a20565b906020808351928381520192019060005b818110611a6a5750505090565b8251845260209384019390920191600101611a5d565b8115611a8a570490565b634e487b7160e01b600052601260045260246000fd5b906000916b033b2e3c9fd0803ce80000008102928184046b033b2e3c9fd0803ce80000001482151715611b2457506b033b2e3c9fd0803ce8000000830403611b1357611aef8160011c83611b38565b918210611b0257611aff91611a80565b90565b630a77254f60e01b60005260046000fd5b631550e8b760e01b60005260046000fd5b634e487b7160e01b81526011600452602490fd5b91908201809211611b4557565b634e487b7160e01b600052601160045260246000fd5b6000918015918215611b9e575b505015611b13576b019d971e4fe8401e74000000810190818111611b45578110611b02576b033b2e3c9fd0803ce8000000900490565b80820293509150811582840482141715611b4557611bbc9083611a80565b143880611b68565b15611bcb57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b6001600160a01b03168015611cce5780600052603360205260406000205491808310611c7e57602081600080516020611d3e83398151915292600095858752603384520360408620558060355403603555604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fdfe4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b8ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae97e3d6f5d9606f45b75b508f1245f23d4d4e5470e8adae85f3156477ffdcdff0a264697066735822122022a45286c9c92f57a7f48137ac5eb2e80317b75aeee50d1053863a28e2b3092564736f6c634300081a0033";

type DebtTokenV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DebtTokenV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DebtTokenV2__factory extends ContractFactory {
  constructor(...args: DebtTokenV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DebtTokenV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DebtTokenV2__factory {
    return super.connect(runner) as DebtTokenV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebtTokenV2Interface {
    return new Interface(_abi) as DebtTokenV2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): DebtTokenV2 {
    return new Contract(address, _abi, runner) as unknown as DebtTokenV2;
  }
}
