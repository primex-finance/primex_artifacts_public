/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  DexAdapterV2,
  DexAdapterV2Interface,
} from "../../../../contracts/mocks/upgradeMocks/DexAdapterV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WNAtive",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "ToAddressOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "ToAddressOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dexRouter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "dexType",
        type: "uint256",
      },
    ],
    name: "DexTypeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dexRouter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "quoter",
        type: "address",
      },
    ],
    name: "QuoterChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "WNative",
    outputs: [
      {
        internalType: "contract IWNative",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "dexType",
    outputs: [
      {
        internalType: "enum IDexAdapter.DexType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
        ],
        internalType: "struct IDexAdapter.AmountParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getAmountInByMegaRoutes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
        ],
        internalType: "struct IDexAdapter.AmountParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getAmountOutByMegaRoutes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedPath",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dexRouter",
            type: "address",
          },
        ],
        internalType: "struct IDexAdapter.GetAmountsParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[3]",
        name: "",
        type: "uint256[3]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "dexName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Path[]",
        name: "paths",
        type: "tuple[]",
      },
    ],
    name: "getAmountsInByPaths",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "dexName",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
            ],
            internalType: "struct PrimexPricingLibrary.Path[]",
            name: "paths",
            type: "tuple[]",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Route[]",
        name: "routes",
        type: "tuple[]",
      },
    ],
    name: "getAmountsInByRoutes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedPath",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dexRouter",
            type: "address",
          },
        ],
        internalType: "struct IDexAdapter.GetAmountsParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[3]",
        name: "",
        type: "uint256[3]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "dexName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Path[]",
        name: "paths",
        type: "tuple[]",
      },
    ],
    name: "getAmountsOutByPaths",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "dexName",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
            ],
            internalType: "struct PrimexPricingLibrary.Path[]",
            name: "paths",
            type: "tuple[]",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Route[]",
        name: "routes",
        type: "tuple[]",
      },
    ],
    name: "getAmountsOutByRoutes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dexRouter",
        type: "address",
      },
    ],
    name: "getGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_primexDNS",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountTokenA",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct PrimexPricingLibrary.MegaSwapParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "performMegaRoutesSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "dexName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Path[]",
        name: "paths",
        type: "tuple[]",
      },
    ],
    name: "performPathsSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "dexName",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
            ],
            internalType: "struct PrimexPricingLibrary.Path[]",
            name: "paths",
            type: "tuple[]",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Route[]",
        name: "routes",
        type: "tuple[]",
      },
    ],
    name: "performRoutesSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "primexDNS",
    outputs: [
      {
        internalType: "contract IPrimexDNSV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "quoters",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dexRouter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_dexType",
        type: "uint256",
      },
    ],
    name: "setDexType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dexRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoter",
        type: "address",
      },
    ],
    name: "setQuoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedPath",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dexRouter",
            type: "address",
          },
        ],
        internalType: "struct IDexAdapter.SwapParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[3]",
        name: "",
        type: "uint256[3]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "testUpgrade",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "$d13cb5064fc43aa5afb84d8e93c86c1222$__5af48015610ad6576133c1575b50518751608085015160a086015160c087015189516338ed173960e01b815260009b90958c9587956001600160a01b039283169587958995879561327c959294931692909160048701613137565b03925af1938415610ad6578691889561339b575b5001516132a5906001600160a01b0316610876565b146132d1575b506132c6906132b8610308565b9551865261242d8151611396565b519084015282015290565b83516370a0823160e01b81523060048201527f000000000000000000000000000000000000000000000000000000000000000091909116908381602481855afa908115610ad657869161337e575b50813b1561337a578451632e1a7d4d60e01b81526004810191909152919085908390602490829084905af1918215610ad6576132c692613361575b50906132ab565b8061336e6133749261023c565b806106ed565b3861335a565b8580fd5b6133959150843d861161285e57612850818361026a565b3861331f565b610876919550916133b86132a5933d808c833e612ee2818361026a565b95915091613290565b6133d790863d881161285e57612850818361026a565b503861322e565b60608301517f00000000000000000000000000000000000000000000000000000000000000008316803b1561020157600090600460405180948193630d0e30db60e41b83525af18015610ad657613436575b506131a8565b8061336e6134439261023c565b38613430565b6020815260a06080613466845183602086015260c0850190610c0a565b93600180841b03602082015116604085015260408101516060850152606081015182850152015191015290565b60009060033d116134a057565b905060046000803e60005160e01c90565b600060443d1061038457604051600319913d83016004833e81516001600160401b03918282113d60248401111761350e57818401948551938411613516573d8501016020848701011161350e57506103849291016020019061026a565b949350505050565b50949350505050565b3d1561354a573d9061353082610317565b9161353e604051938461026a565b82523d6000602084013e565b606090565b6135576113fe565b506020818101516001600160a01b0392907399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e908416811461382d575b6135918251614fe4565b60e08301805160608501805160408051636fe2528b60e11b81526001600160a01b039687166004820152959093166024860152604485015296909492939091868560648173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4908115610ad657610876958792613810575b50845160a08601518991613681916001600160a01b031660c08901518d519061364060808c01519361362e6102ca565b9586526001600160a01b031687860152565b878401526060830152608082015261366561087660009a8b965160018060a01b031690565b90855194858094819363c04b8d5960e01b835260048301613449565b03925af18691816137f1575b5061370957505050505060016136a1613493565b6308c379a0146136d7575b6136c9576000925b6136bc610308565b9451855284015282015290565b6136d161351f565b50614fd2565b6136df6134b1565b806136ea57506136ac565b835162461bcd60e51b81529081906137059060048301610c2f565b0390fd5b9301519293509091613723906001600160a01b0316610876565b14613732575b506000926136b4565b82516370a0823160e01b815230600482015293907f0000000000000000000000000000000000000000000000000000000000000000168185602481845afa948515610ad6576000956137d2575b50803b15610201578351632e1a7d4d60e01b815260048101959095526000908590602490829084905af1938415610ad6576000946137bf575b5092613729565b8061336e6137cc9261023c565b386137b8565b6137ea919550823d841161285e57612850818361026a565b933861377f565b613809919250893d8b1161285e57612850818361026a565b903861368d565b61382690893d8b1161285e57612850818361026a565b50386135fe565b60608201517f00000000000000000000000000000000000000000000000000000000000000008516803b1561020157600090600460405180948193630d0e30db60e41b83525af18015610ad657613885575b50613587565b8061336e6138929261023c565b3861387f565b6138a06113fe565b506020818101517399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e926001600160a01b03929183168414613afa575b6138da8151614fe4565b60e08201805160608401805160408051636fe2528b60e11b81526001600160a01b0396871660048201529590931660248601526044850152969195909492909190838160648173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af48015610ad657613add575b50835160a08501519096906001600160a01b031660c086015189519060808801519261396c6102ca565b9a8b526001600160a01b0316878b01528989015260608901526080880152516001600160a01b03166001600160a01b03166001600160a01b03169583865180809363c04b8d5960e01b825260048201906139c591613449565b03816000809b5af1948515610ad65786918896613ab4575b5001516139f2906001600160a01b0316610876565b14613a01575b506136bc610308565b83516370a0823160e01b81523060048201527f000000000000000000000000000000000000000000000000000000000000000091909116908281602481855afa908115610ad6578691613a97575b50813b1561337a578451632e1a7d4d60e01b815260048101919091529085908290602490829084905af18015610ad657156139f8578061336e613a919261023c565b386139f8565b613aae9150833d851161285e57612850818361026a565b38613a4f565b61087691965091613ad46139f293873d891161285e57612850818361026a565b969150916139dd565b613af390843d861161285e57612850818361026a565b5038613942565b60608101517f00000000000000000000000000000000000000000000000000000000000000008416803b1561020157600090600460405180948193630d0e30db60e41b83525af18015610ad657613b52575b506138d0565b8061336e613b5f9261023c565b38613b4c565b613b6d6113fe565b50604080820190613bc9613b8d610876610876855160018060a01b031690565b60a08501805184516370a0823160e01b8082526001600160a01b0390921660048201529560209490939192918591889190829081906024820190565b03915afa958615610ad657600096613e30575b5083870180519093859392917399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e908a906001600160a01b03167399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9d198101613d33575b50610876613ca493613c88613c9694613cc79a85613c5060e061087698015160018060a01b031690565b81519251909390613c69906001600160a01b0316610876565b6000929103613d2c57606091500151905b613c82613e53565b92613e9e565b50516001600160a01b031690565b91516001600160a01b031690565b86519283526001600160a01b031660048301529092839190829081906024820190565b03915afa938415610ad657600094613ce6928691613d0f575b506113b4565b90613cf76080860151831015614f8e565b6060613d01610308565b950151855284015282015290565b613d269150843d861161285e57612850818361026a565b38613ce0565b5090613c7a565b969295613d5161087661087660e0600495015160018060a01b031690565b8a51631a5896b360e31b815292839182905afa8015610ad6578891600091613e13575b5060608c01518a51636fe2528b60e11b81526001600160a01b03998a16600482015291909816602482015260448101979097528660648173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4918215610ad6576108768896613c88613c9694610876948f613cc79c613ca499613df6575b5095509a509450509350613c26565b613e0c908d803d1061285e57612850818361026a565b5038613de7565b613e2a9150823d841161186a5761185c818361026a565b38613d74565b8492919650613e4b90833d851161285e57612850818361026a565b959091613bdc565b60405190613e608261021c565b60298252681d594819985a5b195960ba1b6040837f416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c60208201520152565b90929192834710613ec957600081610384956020839451920190855af1613ec361351f565b91613f1d565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608490fd5b91929015613f7f5750815115613f31575090565b3b15613f3a5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015613f925750805190602001fd5b60405162461bcd60e51b81529081906137059060048301610c2f565b613fb66113fe565b506040810180516140109190613fd690610876906001600160a01b031681565b60a0840180516040516370a0823160e01b8082526001600160a01b0390921660048201526020959293909286918491829081906024820190565b03915afa928315610ad65785926000946141a7575b5082870180519095907399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e9089906001600160a01b03167399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9d198101614102575b5061087661409693613c88613c96946140ba9b85613c5060e061087698015160018060a01b031690565b6040519283526001600160a01b031660048301529093849190829081906024820190565b03915afa8015610ad6576140d592600091613d0f57506113b4565b906140e66080840151831015614f8e565b60606140f0610308565b93015183528201526000604082015290565b60e0919091015160608b0151604051636fe2528b60e11b81526001600160a01b039384166004820152929091166024830152604482015291948260648173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4968715610ad6576108768996613c88613c9694610876948e614096986140ba9e61418a575b5095509b50945050935061406c565b6141a0908d803d1061285e57612850818361026a565b503861417b565b6141bf919450833d851161285e57612850818361026a565b9238614025565b90916060828403126102015781516141dd81610387565b9260208301516141ec81610387565b926040810151906001600160401b038211610201570181601f8201121561020157805161421881610317565b92614226604051948561026a565b81845260208284010111610201576103849160208085019101610be7565b61424c6113fe565b5060408101805161429f9060209061426e90610876906001600160a01b031681565b60a08501516040516370a0823160e01b81526001600160a01b03909116600482015292839190829081906024820190565b03915afa908115610ad6576000916144b0575b506142c78351602080825183010191016141c6565b602086018051929391929091906001600160a01b03167399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9d1981016143f8575b505061087661439095613c8860209561435f957399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e614338610876610876985160018060a01b031690565b600091036143f2575060608b0151905b614350613e53565b926001600160a01b0316613e9e565b60a08501516040516370a0823160e01b81526001600160a01b03909116600482015293849190829081906024820190565b03915afa8015610ad6576143ab926000916143d957506113b4565b6143bb6080830151821015614f8e565b60606143c5610308565b920151825260208201526000604082015290565b613d26915060203d60201161285e57612850818361026a565b90614348565b6060880151604051636fe2528b60e11b81526001600160a01b039283166004820152929091166024830152604482015260208160648173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4958615610ad657613c8860209561435f957399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e61433861087661087698610876986143909e614493575b5098505050509550955050956142fa565b6144a9908d3d8f1161285e57612850818361026a565b5038614482565b6144c9915060203d60201161285e57612850818361026a565b386142b2565b6144d76113fe565b506144e860c0820151421115614ed8565b8051916144ff602093848082518301019101612b06565b606084929401938451936000945b6145178351611396565b86101561480f5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6145436108766125f58987612328565b036146775760e0850151889061456390610876906001600160a01b031681565b6145706125f58988612328565b9061457e6125f58a88612328565b8461458e6125f56126c58d61137b565b9361459989516113a5565b8c148c8c60009260001461466d5761462592506080810151915b6145bd8d516113a5565b036146655760a001516001600160a01b0316905b604051631a4c1ca360e01b81526001600160a01b039485166004820152958416602487015296831660448601526064850198909852608484019590955290951660a4820152938492839190829060c4820190565b03925af18015610ad65761464291600091614648575b50956112f5565b9461450d565b61465f9150893d8b1161285e57612850818361026a565b3861463b565b5030906145d1565b61462592916145b3565b6146d26146876125f58886612328565b60e08701805160408051636fe2528b60e11b81526001600160a01b03948516600480830191909152949092166024830152604482018690529093909291908c90859081906064820190565b038173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4938415610ad6578c946147f2575b50516001600160a01b03169089614710818a612328565b516001600160a01b0316918a614726838b612328565b516001600160a01b0316958a61473b8561137b565b6147459082612328565b516001600160a01b031699815161475b906113a5565b6000966146259591889082036147e8575061477c6080830151945b516113a5565b1487146147e05760a001516001600160a01b0316925b519a8b998a988997631a4c1ca360e01b8952880194909360a094979692939760c0870198600180881b038096818094168a521660208901521660408701526060860152608085015216910152565b503092614792565b61477c9094614776565b61480890853d871161285e57612850818361026a565b50386146f9565b9450959250505061481e610308565b925183528201526000604082015290565b9594939161486661489d91949294600089526148586101209660209780898d01528b01906121bd565b9089820360408b0152612242565b9160608801906060809160018060a01b03808251168552602082015115156020860152604082015116604085015201511515910152565b85810360e087015282808351928381520192019260005b8281106148c8575050506101009150930152565b8451845293810193928101926001016148b4565b909261497f61494860a060c09598979660e08652805160e087015261490a60208201516101008801906121b0565b600180831b038060408301511661012088015260608201511661014087015260808101516101608701520151856101808601526101a0850190610c0a565b9660208401906060809160018060a01b03808251168552602082015115156020860152604082015116604085015201511515910152565b60a08201520152565b6149906113fe565b508051906149a86020928380825183010191016120df565b929091936149ba600286511015614fa7565b808201517399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e906001600160a01b039081168214614e6d575b6149f26125f58861230b565b9160e0850195614a50614a0b885160018060a01b031690565b97606088019a878c5160409b8c519586928392636fe2528b60e11b845260049c8d850160409194939294606082019560018060a01b0380921683521660208201520152565b038173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4928315610ad6578a93614e50575b5060a08901516001600160a01b0316908c90614a916102ab565b308152956000878c018190526001600160a01b0390941686880152929c8d93908460608901528251600210614cab57508b96948b9694614b34614b5395614b2461087696614ae16108769761230b565b5199614b016108766125f5614afb6108766125f58761230b565b94612318565b935195614b0c6102e9565b9b8c528d8c01526001600160a01b03909116908a0152565b6001600160a01b03166060880152565b6080860152614b41612529565b60a0860152516001600160a01b031690565b908b88614b7e8d60c060808a01519901519051988997889687956352bbbe2960e01b875286016148dc565b03925af1958615610ad65787918997614c82575b500151614ba7906001600160a01b0316610876565b14614bb7575b50506136bc610308565b84516370a0823160e01b81523083820190815290927f00000000000000000000000000000000000000000000000000000000000000009290921691908490849081906020010381855afa928315610ad6578793614c63575b50813b15614c5f578551632e1a7d4d60e01b8152908101928352918691839182908490829060200103925af18015610ad657614c4c575b80614bad565b8061336e614c599261023c565b38614c46565b8680fd5b614c7b919350843d861161285e57612850818361026a565b9138614c0f565b61087691975091614ca2614ba793883d8a1161285e57612850818361026a565b97915091614b92565b8496614d009160c08f9e9f97956108768f96614ce392614cd0916108769b519161305f565b9b51909b996001600160a01b0390911690565b970151915163945bcec960e01b8152998a9889978896870161482f565b03925af1948515610ad65787918996614e2a575b500151614d29906001600160a01b0316610876565b14614d58575b5050612433614d4e91614d40610308565b9651875261242d8151611396565b9084015282015290565b84516370a0823160e01b81523083820190815290927f00000000000000000000000000000000000000000000000000000000000000009290921691908590849081906020010381855afa928315610ad6578793614e0b575b50813b15614c5f578551632e1a7d4d60e01b815290810192835292918691849182908490829060200103925af1908115610ad657614d4e9261243392614df8575b5091614d2f565b8061336e614e059261023c565b38614df1565b614e23919350853d871161285e57612850818361026a565b9138614db0565b61087691965091614e47614d29933d808d833e612466818361026a565b96915091614d14565b614e6690893d8b1161285e57612850818361026a565b5038614a77565b60608401517f00000000000000000000000000000000000000000000000000000000000000008216803b1561020157600090600460405180948193630d0e30db60e41b83525af18015610ad657614ec5575b506149e6565b8061336e614ed29261023c565b38614ebf565b15614edf57565b60405163883bf0db60e01b8152600490fd5b15614ef857565b604051635269639360e01b8152600490fd5b15614f1157565b604051631aa5e6a560e21b8152600490fd5b15614f2a57565b60405163036be76f60e61b8152600490fd5b1561116257565b15614f4a57565b604051630279891960e11b8152600490fd5b15614f6357565b6040516301f9d96160e71b8152600490fd5b15614f7c57565b6040516339028fcd60e21b8152600490fd5b15614f9557565b604051637974230960e11b8152600490fd5b15614fae57565b6040516367678b8760e11b8152600490fd5b6040516368a1e68f60e11b8152600490fd5b60405163076fc27360e51b8152600490fd5b6014815110614ff4576014015190565b60405163a78aa27f60e01b8152600490fd5b6706f05b59d3b200008082029180830482148115171561130457818304036150585781019081811161130457811061504657670de0b6b3a7640000900490565b604051630a77254f60e01b8152600490fd5b604051631550e8b760e01b8152600490fd5b6714d1120d7b160000908181029181830481148215171561130457820403615058576706f05b59d3b2000081019081811161130457811061504657670de0b6b3a764000090049056fea2646970667358221220c789661a1572f2633b916fdd4ea852b180f534e78e1b6c70635a2477d14a7aa864736f6c63430008120033";

type DexAdapterV2ConstructorParams =
  | [linkLibraryAddresses: DexAdapterV2LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DexAdapterV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DexAdapterV2__factory extends ContractFactory {
  constructor(...args: DexAdapterV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DexAdapterV2__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DexAdapterV2LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d13cb5064fc43aa5afb84d8e93c86c1222\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/TokenApproveLibrary.sol:TokenApproveLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _registry: AddressLike,
    _WNAtive: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_registry, _WNAtive, overrides || {});
  }
  override deploy(
    _registry: AddressLike,
    _WNAtive: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_registry, _WNAtive, overrides || {}) as Promise<
      DexAdapterV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DexAdapterV2__factory {
    return super.connect(runner) as DexAdapterV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DexAdapterV2Interface {
    return new Interface(_abi) as DexAdapterV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DexAdapterV2 {
    return new Contract(address, _abi, runner) as unknown as DexAdapterV2;
  }
}

export interface DexAdapterV2LibraryAddresses {
  ["contracts/libraries/TokenApproveLibrary.sol:TokenApproveLibrary"]: string;
}
