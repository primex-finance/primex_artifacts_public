/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  DexAdapterV2,
  DexAdapterV2Interface,
} from "../../../../contracts/mocks/upgradeMocks/DexAdapterV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WNAtive",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "ToAddressOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "ToAddressOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dexRouter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "dexType",
        type: "uint256",
      },
    ],
    name: "DexTypeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dexRouter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "quoter",
        type: "address",
      },
    ],
    name: "QuoterChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "WNative",
    outputs: [
      {
        internalType: "contract IWNative",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "dexType",
    outputs: [
      {
        internalType: "enum IDexAdapter.DexType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
        ],
        internalType: "struct IDexAdapter.AmountParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getAmountInByMegaRoutes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
        ],
        internalType: "struct IDexAdapter.AmountParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getAmountOutByMegaRoutes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedPath",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dexRouter",
            type: "address",
          },
        ],
        internalType: "struct IDexAdapter.GetAmountsParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[3]",
        name: "",
        type: "uint256[3]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "dexName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Path[]",
        name: "paths",
        type: "tuple[]",
      },
    ],
    name: "getAmountsInByPaths",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "dexName",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
            ],
            internalType: "struct PrimexPricingLibrary.Path[]",
            name: "paths",
            type: "tuple[]",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Route[]",
        name: "routes",
        type: "tuple[]",
      },
    ],
    name: "getAmountsInByRoutes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedPath",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dexRouter",
            type: "address",
          },
        ],
        internalType: "struct IDexAdapter.GetAmountsParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[3]",
        name: "",
        type: "uint256[3]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "dexName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Path[]",
        name: "paths",
        type: "tuple[]",
      },
    ],
    name: "getAmountsOutByPaths",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "dexName",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
            ],
            internalType: "struct PrimexPricingLibrary.Path[]",
            name: "paths",
            type: "tuple[]",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Route[]",
        name: "routes",
        type: "tuple[]",
      },
    ],
    name: "getAmountsOutByRoutes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dexRouter",
        type: "address",
      },
    ],
    name: "getGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_primexDNS",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountTokenA",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct PrimexPricingLibrary.MegaSwapParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "performMegaRoutesSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "dexName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Path[]",
        name: "paths",
        type: "tuple[]",
      },
    ],
    name: "performPathsSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "dexName",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
            ],
            internalType: "struct PrimexPricingLibrary.Path[]",
            name: "paths",
            type: "tuple[]",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Route[]",
        name: "routes",
        type: "tuple[]",
      },
    ],
    name: "performRoutesSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "primexDNS",
    outputs: [
      {
        internalType: "contract IPrimexDNSV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "quoters",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dexRouter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_dexType",
        type: "uint256",
      },
    ],
    name: "setDexType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dexRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoter",
        type: "address",
      },
    ],
    name: "setQuoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedPath",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dexRouter",
            type: "address",
          },
        ],
        internalType: "struct IDexAdapter.SwapParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[3]",
        name: "",
        type: "uint256[3]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "testUpgrade",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0806040523461015857604081614d45803803809161001f828561015d565b8339810103126101585761003e602061003783610196565b9201610196565b6040516301ffc9a760e01b8152637965db0b60e01b60048201529091906020816024816001600160a01b0386165afa90811561014c5760009161010a575b50156100f8576080526001600160a01b031660a052604051614b9a90816101ab82396080518181816109ed01528181610a8301528181610b140152611943015260a051818181610dc90152818161393a01528181613a4801528181613e6a01528181613f7c0152818161456f0152818161478a01526148920152f35b60405163044aa57560e41b8152600490fd5b6020813d602011610144575b816101236020938361015d565b81010312610140575190811515820361013d57503861007c565b80fd5b5080fd5b3d9150610116565b6040513d6000823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761018057604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101585756fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806301ffc9a7146101ab5780631f5f4cbe146101a65780633396c1ba146101a157806336dd6b3d1461019c5780633c9c6ff3146101975780633f4a2d27146101925780633fa4f2451461018d57806340fce5d114610188578063461dfcd5146101835780634c828b5c1461017e57806355241077146101795780635933dd2b146101745780636264257a1461016f5780637b1039991461016a5780638677f6361461016557806396954fb9146101605780639d6aed0b1461015b578063c2909fed14610156578063c4d66de814610151578063eb5251a51461014c578063f1a3d00514610147578063f3ec43c714610142578063f4ef97ea1461013d578063f6f1c4c4146101385763fae89f920361000e57610eaa565b610e46565b610df8565b610db3565b610da0565b610d87565b610c8d565b610c44565b610bd1565b610b5f565b610ab2565b610a6d565b610982565b61093d565b610924565b6107d8565b61078c565b6106c5565b6106a7565b61067e565b61065a565b6105c8565b610409565b6103e0565b346102015760203660031901126102015760043563ffffffff60e01b8116809103610201576020906301ffc9a760e01b81149081156101f0575b506040519015158152f35b633603f73360e21b149050386101e5565b600080fd5b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761023757604052565b610206565b90601f801991011681019081106001600160401b0382111761023757604052565b6040519061026d6101008361023c565b565b6040519061026d60808361023c565b6040519061026d60a08361023c565b6040519061026d60c08361023c565b9061026d604051928361023c565b6001600160401b03811161023757601f01601f191660200190565b9291926102d1826102aa565b916102df604051938461023c565b829481845281830111610201578281602093846000960137010152565b9080601f8301121561020157816020610317933591016102c5565b90565b6001600160a01b0381160361020157565b359061026d8261031a565b602060031982011261020157600435906001600160401b0382116102015760608282036003190112610201576040519161036f8361021c565b80600401356001600160401b038111610201576044926004610393928401016102fc565b83526024810135602084015201356103aa8161031a565b604082015290565b919060608301926000905b600382106103ca57505050565b60208060019285518152019301910190916103bd565b34610201576104056103f96103f436610336565b610fb8565b604051918291826103b2565b0390f35b6020366003190112610201576004356001600160401b03811161020157806004019060c060031982360301126102015761044960a48201354211156128f6565b6104516110a8565b6064820160005b61046282866110dd565b9050811015610495578061048d61048560019361047f868a6110dd565b90611128565b358551611178565b845201610458565b509190916104a58351151561290f565b604482013592606081019184835260009260208301926084604082019601945b6104d96104d2858b6110dd565b9050611185565b811015610565578061051461050a6105026104fb60019561047f8f8b906110dd565b358c6111b0565b8551906111c3565b80885285516111a3565b845261055d61055688888d61054e6105448761047f8d61053e610536876111e3565b9751986111e3565b956110dd565b60208101906110dd565b939092611b1a565b8951611178565b8852016104c5565b610405876105b46105ad8987898f61054461054e9161058e610586826111e3565b9551966111e3565b936105a76104d261059f83856110dd565b9390946110dd565b91611128565b8251611178565b809152604051918291829190602083019252565b346102015760203660031901126102015760206105ef6004356105ea8161031a565b6111ed565b604051908152f35b9181601f84011215610201578235916001600160401b038311610201576020808501948460051b01011161020157565b9060406003198301126102015760043591602435906001600160401b03821161020157610656916004016105f7565b9091565b346102015760206105ef61066d36610627565b9161135d565b600091031261020157565b34610201576000366003190112610201576003546040516001600160a01b039091168152602090f35b34610201576000366003190112610201576020600454604051908152f35b6020366003190112610201576004356001600160401b038111610201576101006003198236030112610201576106f961025d565b8160040135906001600160401b0382116102015761078260e4610405946107296103f995600436918401016102fc565b84526107376024820161032b565b60208501526107486044820161032b565b6040850152606481013560608501526084810135608085015261076d60a4820161032b565b60a085015260c481013560c08501520161032b565b60e08201526115b3565b346102015760206105ef61079f36610627565b9161160e565b602060031982011261020157600435906001600160401b0382116102015760809082900360031901126102015760040190565b34610201576107e6366107a5565b61081f6107f2826111e3565b61080d610801602085016111e3565b6001600160a01b031690565b6001600160a01b039091161415612928565b6108276110a8565b60608201919060005b61083a84846110dd565b9050811015610867578061085f61085760019361047f88886110dd565b358451611178565b835201610830565b506108748151151561290f565b6040820135916060820193838552600092602081019060408101945b61089d6104d285876110dd565b8110156108ff57806108cf6108c56105026108be60019561047f8a8c6110dd565b358b6111b0565b8086528a516111a3565b89526108f76108f085516108ea6105448561047f8b8d6110dd565b91611ad7565b8851611178565b875201610890565b610405866105b46105ad876108ea6105448b8f51936105a76104d261059f83856110dd565b3461020157602036600319011261020157600480359055005b346102015760203660031901126102015760043561095a8161031a565b60018060a01b03166000526002602052602060018060a01b0360406000205416604051908152f35b346102015760403660031901126102015760043561099f8161031a565b6024356109ab8161031a565b604051632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b636004820152336024820152916020836044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa928315610a685761001993610a3491600091610a39575b50612941565b611659565b610a5b915060203d602011610a61575b610a53818361023c565b810190611641565b38610a2e565b503d610a49565b611351565b34610201576000366003190112610201576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461020157604036600319011261020157600435610acf8161031a565b602435604051632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b636004820152336024820152916020836044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa928315610a685761001993610b5a91600091610a395750612941565b611708565b346102015760206105ef610b7236610627565b91611762565b60005b838110610b8b5750506000910152565b8181015183820152602001610b7b565b90602091610bb481518092818552858086019101610b78565b601f01601f1916010190565b906020610317928181520190610b9b565b34610201576000366003190112610201576104056040805190610bf4818361023c565b600c82526b2232bc20b230b83a32b92b1960a11b602083015251918291602083526020830190610b9b565b634e487b7160e01b600052602160045260246000fd5b60091115610c3f57565b610c1f565b3461020157602036600319011261020157600435610c618161031a565b60018060a01b0316600052600160205260ff604060002054166040516009821015610c3f576020918152f35b3461020157602036600319011261020157600435610caa8161031a565b610cfb60005491610cdf610cc9610cc58560ff9060081c1690565b1590565b80948195610d79575b8115610d59575b506118be565b82610cf2600160ff196000541617600055565b610d4057611921565b610d0157005b610d1161ff001960005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b610d5461010061ff00196000541617600055565b611921565b303b15915081610d6b575b5038610cd9565b60ff16600114905038610d64565b600160ff8216109150610cd2565b34610201576104056103f9610d9b36610336565b611a09565b346102015760206105ef6108ea36610627565b34610201576000366003190112610201576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b608036600319011261020157600435610e108161031a565b60443590602435610e208361031a565b606435916001600160401b0383116102015760209361054e6105ef9436906004016105f7565b60a036600319011261020157600435610e5e8161031a565b60243590610e6b8261031a565b6044359160643591610e7c8361031a565b608435926001600160401b03841161020157602094610ea26105ef9536906004016105f7565b949093611c0b565b3461020157610eb8366107a5565b610ec46107f2826111e3565b610ecc6110a8565b60608201919060005b610edf84846110dd565b9050811015610f045780610efc61085760019361047f88886110dd565b835201610ed5565b50610f118151151561290f565b6040820135916060820193838552600092602081019060408101945b610f3a6104d285876110dd565b811015610f7e5780610f5b6108c56105026108be60019561047f8a8c6110dd565b8952610f766108f0855161079f6105448561047f8b8d6110dd565b875201610f2d565b610405866105b46105ad8761079f6105448b8f51936105a76104d261059f83856110dd565b604051906060610fb3818461023c565b368337565b610fc0610fa3565b50610fca81611d71565b604081015161100290610ffb906001600160a01b03165b6001600160a01b0316600090815260016020526040902090565b5460ff1690565b61100b81610c35565b600181148015611095575b15611025575061031790612850565b61102e81610c35565b600281036110405750610317906126ec565b61104981610c35565b6003810361105b5750610317906125d1565b61106481610c35565b6004810361107657506103179061236d565b80611082600592610c35565b036110905761031790611e85565b611da1565b5061109f81610c35565b60068114611016565b60405190608082018281106001600160401b038211176102375760405260006060838281528260208201528260408201520152565b903590601e198136030182121561020157018035906001600160401b03821161020157602001918160051b3603831361020157565b634e487b7160e01b600052603260045260246000fd5b919081101561114a5760051b81013590603e1981360301821215610201570190565b611112565b634e487b7160e01b600052601160045260246000fd5b906001820180921161117357565b61114f565b9190820180921161117357565b60001981019190821161117357565b60011981019190821161117357565b9190820391821161117357565b8181029291811591840414171561117357565b81156111cd570490565b634e487b7160e01b600052601260045260246000fd5b356103178161031a565b61120990610ffb90610fe16001600160a01b038216151561295a565b61121281610c35565b600181036112225750620254e990565b61122b81610c35565b60028114801561128d575b1561124357506202d0cb90565b61124c81610c35565b6003810361125c57506202cdce90565b61126581610c35565b6004810361127557506203001190565b80611281600692610c35565b03611090576204229890565b5061129781610c35565b60058114611236565b919081101561114a5760051b81013590605e1981360301821215610201570190565b604051906112cf8261021c565b6000604083606081528260208201520152565b903590601e198136030182121561020157018035906001600160401b0382116102015760200191813603831361020157565b9081602091031261020157516103178161031a565b90918060409360208452816020850152848401376000828201840152601f01601f1916010190565b6040513d6000823e3d90fd5b91929060009360009160005b82811061158a575061137c86151561290f565b84916113866112c2565b95600094602088019160408901955b61139e85611185565b8810156114c1576113d6611446916113cd8d6113c860206113c08e8c8e6112a0565b0135876111b0565b6111c3565b908187526111a3565b926113f96113f26113e88b898b6112a0565b60408101906112e2565b36916102c5565b8b52600354602090611413906001600160a01b0316610801565b6114276114218c8a8c6112a0565b806112e2565b60405163657dcce560e01b815295869392849283929160048401611329565b03915afa908115610a685761147161148a92600194600091611493575b506001600160a01b03168a52565b61148361147d8d611a09565b60200190565b5190611178565b97019691611395565b6114b4915060203d81116114ba575b6114ac818361023c565b810190611314565b38611463565b503d6114a2565b61142192989a50611537999750602095915061151893526114f16113f26113e86114ea87611185565b87856112a0565b8752600354611508906001600160a01b0316610801565b9361151281611185565b916112a0565b60405163657dcce560e01b815297889392849283929160048401611329565b03915afa918215610a6857610d9b6114839361147d9361031797600092611569575b506001600160a01b039091169052565b61158391925060203d6020116114ba576114ac818361023c565b9038611559565b956115a960019160206115a18a87879a989a6112a0565b013590611178565b9601939193611369565b6060806040516115c3828261023c565b36903760a08201516001600160a01b0316156115fc57810151156115ea57610317906129de565b60405163127973e960e31b8152600490fd5b60405163044aa57560e41b8152600490fd5b91906000915b8083106116215750505090565b90919261163860019161066d610544878688611128565b93019190611614565b90816020910312610201575180151581036102015790565b6001600160a01b0381166000818152600160205260409020549192909160ff166009811015610c3f57156116f6576001600160a01b03169182156116e5576001600160a01b0316600090815260026020526040902080546001600160a01b031916831790557feec77f6322aea766aacea41ca79d2615f5301e0edbcf9bfe766a594d9d95e1db600080a3565b60405162310f9160e31b8152600490fd5b604051636afff5ed60e11b8152600490fd5b6001600160a01b031680156115fc576009821015610c3f57806000526001602052604060002060ff1981541660ff84161790557f7955abe00075979fc908f0d63d8bca5922683856a8270d6ecd19958f3f47c339600080a3565b9092919260009360009160005b82811061189d575061178286151561290f565b839161178c6112c2565b94600094602087019160408801955b6117a485611185565b88101561182e576117c66117f2916113cd8d6113c860206113c08e8c8e6112a0565b926117d86113f26113e88b898b6112a0565b8a52600354602090611413906001600160a01b0316610801565b03915afa908115610a685761181c6118259260019460009161149357506001600160a01b03168a52565b6114838b610fb8565b9701969161179b565b61186f999a506114219298969750602095915061151893526118586113f26113e86114ea87611185565b8652600354611508906001600160a01b0316610801565b03915afa938415610a685761031794611483936103f49260009261156957506001600160a01b039091169052565b956118b460019160206115a18a87879b989b6112a0565b960194919461176f565b156118c557565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b604051632474521560e21b8152600060048201523360248201526020816044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa8015610a685761198491600091610a395750612941565b6040516301ffc9a760e01b8152633f9940a760e11b60048201526001600160a01b039190911690602081602481855afa908115610a68576000916119ea575b50156115fc57600380546001600160a01b0319166001600160a01b03909216919091179055565b611a03915060203d602011610a6157610a53818361023c565b386119c3565b611a11610fa3565b50611a1b81611d71565b6040810151611a3690610ffb906001600160a01b0316610fe1565b611a3f81610c35565b600181148015611ac4575b15611a59575061031790612dab565b611a6281610c35565b60028103611a74575061031790612d0e565b611a7d81610c35565b60038103611a8f575061031790612caa565b611a9881610c35565b60048103611aaa575061031790612ba7565b80611ab6600592610c35565b036110905761031790612ae2565b50611ace81610c35565b60068114611a4a565b918091825b611ae65750505090565b90919260001984019084821161117357610b72610544611b07938686611128565b9280156111735760001901919082611adc565b91939290936000935b808510611b3257505050505090565b9091929394851515600014611bb057600019860186811161117357600191611b5e611b9e928588611128565b35611b688161031a565b611b73898689611128565b3591611b7e8361031a565b611b8786611185565b8a03611ba95786905b610ea26105448c898c611128565b950193929190611b23565b3090611b90565b611b9e60019186611b68565b6040519061010082018281106001600160401b0382111761023757604052600060e083606081528260208201528260408201528260608201528260808201528260a08201528260c08201520152565b94959390919560009660009460005b838110611d505750611c7990611c318a151561290f565b611c698396611c59611c41611bbc565b4260c08201526001600160a01b03909c1660208d0152565b6001600160a01b031660408b0152565b6001600160a01b031660a0890152565b600094606088019160e08901955b611c9085611185565b881015611cf1576113d6611cb2916113cd8d6113c860206113c08e8c8e6112a0565b03915afa908115610a6857611cdc611ce89260019460009161149357506001600160a01b03168a52565b61148361147d8d6129de565b97019691611c87565b61142192989a50611d1a999750602095915061151893526114f16113f26113e86114ea87611185565b03915afa918215610a6857611d4b6114839361147d936103179760009261156957506001600160a01b039091169052565b6129de565b98611d6760019160206115a18d888a9d9b9d6112a0565b9901969496611c1a565b60408101516001600160a01b0316156115fc576020015115611d8f57565b604051630f6fa54560e41b8152600490fd5b6040516368a1e68f60e11b8152600490fd5b60405163076fc27360e51b8152600490fd5b6001600160401b0381116102375760051b60200190565b9190604083820312610201578251926020810151906001600160401b03821161020157019080601f8301121561020157815190611e1882611dc5565b92611e26604051948561023c565b82845260208085019360051b82010191821161020157602001915b818310611e4e5750505090565b825161ffff8116810361020157815260209283019201611e41565b929190611e80602091604086526040860190610b9b565b930152565b611f0990611e91610fa3565b5060408101516000906001600160a01b0390611ed590611ec89083165b6001600160a01b0316600090815260026020526040902090565b546001600160a01b031690565b1691611ee2831515612961565b6020815191019283519183604051809781958294632f80bb1d60e01b845260048401611e69565b03925af1918215610a6857600092611f3a575b50611f27606061029c565b9182525160208201526000604082015290565b611f589192503d806000833e611f50818361023c565b810190611ddc565b509038611f1c565b9080601f83011215610201578151611f7781611dc5565b92611f85604051948561023c565b81845260208085019260051b82010192831161020157602001905b828210611fad5750505090565b602080918351611fbc8161031a565b815201910190611fa0565b9080601f83011215610201578151611fde81611dc5565b92611fec604051948561023c565b81845260208085019260051b82010192831161020157602001905b8282106120145750505090565b8151815260209182019101612007565b916060838303126102015782516001600160401b038111610201578261204b918501611f60565b9260208101516001600160401b03811161020157810183601f820112156102015780519061207882611dc5565b91612086604051938461023c565b80835260208084019160051b8301019186831161020157602001905b8282106120ca575050509260408201516001600160401b038111610201576103179201611fc7565b81518152602091820191016120a2565b906120e482611dc5565b6120f1604051918261023c565b8281528092612102601f1991611dc5565b0190602036910137565b9061211682611dc5565b612123604051918261023c565b8281528092612134601f1991611dc5565b0160005b81811061214457505050565b6040519060a08201918083106001600160401b03841117610237576020926040526000815260008382015260006040820152600060608201526060608082015282828601015201612138565b80511561114a5760200190565b80516001101561114a5760400190565b805182101561114a5760209160051b010190565b604051906121d060408361023c565b6002825261060f60f31b6020830152565b906020828203126102015781516001600160401b038111610201576103179201611fc7565b906002821015610c3f5752565b9080602083519182815201916020808360051b8301019401926000915b83831061223f57505050505090565b909192939460208061228c600193601f1986820301875260a060808b5180518452858101518685015260408101516040850152606081015160608501520151918160808201520190610b9b565b97019301930191939290612230565b906020808351928381520192019060005b8181106122b95750505090565b82516001600160a01b03168452602093840193909201916001016122ac565b80516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b93929061234061026d936123326060936001895260e060208a015260e0890190612213565b90878203604089015261229b565b9401906122d8565b93929061234061026d936123326060936000895260e060208a015260e0890190612213565b612375610fa3565b5061238a815160208082518301019101612024565b509261239682516120da565b936123a1815161210c565b916123aa61026f565b308152600060208201523060408201526000606082015260005b6123ce8651611185565b81101561247e57806124116123f86108016123eb6001958b6121ad565b516001600160a01b031690565b612402838c6121ad565b6001600160a01b039091169052565b61247761241e82876121ad565b5161242883611165565b61243061027e565b91825283602083015260408201526000606082015261244d6121c1565b6080820152612465836124608b51611194565b6111a3565b90612470828a6121ad565b52876121ad565b50016123c4565b5091509491600092836124e861080161080160406125069a6124da602082019b8c5160606124ab8c612190565b5101526124026124d46124cd6108016123eb6124c78651611185565b866121ad565b9251611185565b8a6121ad565b01516001600160a01b031690565b9260405197889586948593637c26833760e11b85526004850161230d565b03925af1918215610a6857600092612556575b50612530600061252884612190565b51121561297a565b61254361253d606061029c565b92612190565b5182525160208201526000604082015290565b6125749192503d806000833e61256c818361023c565b8101906121e1565b9038612519565b9190916040818403126102015780516001600160401b03811161020157836125a4918301611f60565b9260208201516001600160401b038111610201576103179201611f60565b60001981146111735760010190565b6125d9610fa3565b506125ee81516020808251830101910161257b565b60208301805160409094018051939491939091612627916001600160a01b031661261787612e64565b9061262186612e64565b92612eec565b9161263a61263484612fcc565b93613042565b906000956000925b606484111561265c575b505050505050611f27606061029c565b90919293949661267561266f838a611178565b60011c90565b908082146126d65750809761269b85856126958a5160018060a01b031690565b85612eec565b8851908082036126ad5750505061264c565b10156126c957506126be90946125c2565b929190949394612642565b9491506126be90916125c2565b975061264c565b90816020910312610201575190565b61274d906126f8610fa3565b5060408101516020906001600160a01b039061271990611ec8908316611eae565b1691612726831515612961565b8181519101928351916000604051809781958294632f80bb1d60e01b845260048401611e69565b03925af1918215610a685760009261276a5750611f27606061029c565b61278d91925060203d602011612794575b612785818361023c565b8101906126dd565b9038611f1c565b503d61277b565b906020828203126102015781516001600160401b038111610201576103179201611f60565b602081830312610201578051906001600160401b03821161020157019080601f830112156102015781516127f381611dc5565b92612801604051948561023c565b81845260208085019260051b82010192831161020157602001905b8282106128295750505090565b815181526020918201910161281c565b60409061031793928152816020820152019061229b565b6128b09061285c610fa3565b50600061287382516020808251830101910161279b565b604083015160209061288f90610801906001600160a01b031681565b93019283516040518096819482936307c0329d60e21b845260048401612839565b03915afa918215610a68576000926128d1575b5061254361253d606061029c565b6128ef9192503d806000833e6128e7818361023c565b8101906127c0565b90386128c3565b156128fd57565b60405163883bf0db60e01b8152600490fd5b1561291657565b604051635269639360e01b8152600490fd5b1561292f57565b604051631aa5e6a560e21b8152600490fd5b1561294857565b60405163036be76f60e61b8152600490fd5b156115fc57565b1561296857565b6040516339028fcd60e21b8152600490fd5b1561298157565b6040516301f9d96160e71b8152600490fd5b1561299a57565b604051630279891960e11b8152600490fd5b156129b357565b604051637974230960e11b8152600490fd5b156129cc57565b6040516367678b8760e11b8152600490fd5b6129e6610fa3565b5060e0810151612a0290610ffb906001600160a01b0316610fe1565b612a0b81610c35565b600181148015612acf575b15612a25575061031790614615565b612a2e81610c35565b60028103612a405750610317906143ab565b612a4981610c35565b60038103612a5b575061031790613fe9565b612a6481610c35565b60048103612a76575061031790613bc0565b612a7f81610c35565b60058103612a915750610317906137b3565b612a9a81610c35565b60078103612aac575061031790613615565b80612ab8600892610c35565b03612ac6576103179061341f565b610317906131c4565b50612ad981610c35565b60068114612a16565b612aea610fa3565b506040810151612b43906000906001600160a01b0390612b0f90611ec8908316611eae565b1692612b1c841515612961565b602081519101938451918360405180968195829463cdca175360e01b845260048401611e69565b03925af1908115610a6857600091612b74575b50612b61606061029c565b9151825260208201526000604082015290565b612b8991503d806000833e611f50818361023c565b5038612b56565b908160000391808305600019149015171561117357565b612c356000612bdd92612bb8610fa3565b50612bcd815160208082518301019101612024565b50949060208301958651916148ff565b9083612c176108016108016040612bf261026f565b308152976020890186905230828a01526060890186905201516001600160a01b031690565b9260405196879586948593637c26833760e11b855260048501612348565b03925af1908115610a6857612c8791612c8191600091612c91575b50612c716000612c69612c638451611185565b846121ad565b511315612993565b612c7b8151611185565b906121ad565b51612b90565b612b61606061029c565b612ca4913d8091833e61256c818361023c565b38612c50565b6060604051612cb9828261023c565b369037612cef612cd382516020808251830101910161257b565b906020840193845190604060018060a01b039101511690612eec565b60405191612cfc8361021c565b51825260208201526000604082015290565b612d16610fa3565b506040810151612d6f906020906001600160a01b0390612d3b90611ec8908316611eae565b1692612d48841515612961565b818151910193845191600060405180968195829463cdca175360e01b845260048401611e69565b03925af1908115610a6857600091612d8c5750612b61606061029c565b612da5915060203d60201161279457612785818361023c565b38612b56565b612db3610fa3565b50612e0a6000612dcd83516020808251830101910161279b565b6040840151602090612de990610801906001600160a01b031681565b940193845160405180958194829363d06ca61f60e01b845260048401612839565b03915afa8015610a6857612e3991600091612e49575b50612e2b606061029c565b92518352612c7b8151611185565b5160208201526000604082015290565b612e5e91503d806000833e6128e7818361023c565b38612e20565b8051612e6f81611dc5565b91612e7d604051938461023c565b818352601f19612e8c83611dc5565b013660208501376000198201918083119060005b818110612eaf57505050505090565b82906001600160a01b03612ec382876121ad565b51169161117357808303600019019186831161117357612ee5600193896121ad565b5201612ea0565b9391909293926000935b612f008351611185565b851015612fc3576020612f166123eb87896121ad565b612f236123eb88876121ad565b90612f7d612f3c6123eb612f368b611165565b896121ad565b604051630e5cfa0d60e21b81526001600160a01b03938416600482015293831660248501529091166044830152606482019390935291829081906084820190565b03816001600160a01b0386165afa8015610a6857600191600091612fa5575b50940193612ef6565b612fbd915060203d811161279457612785818361023c565b38612f9c565b93505050915090565b60006706f05b59d3b200008202918083046706f05b59d3b200001481151715611173576706f05b59d3b200009150818304036130315781019081811161117357811061302057670de0b6b3a7640000900490565b630a77254f60e01b60005260046000fd5b631550e8b760e01b60005260046000fd5b6000906714d1120d7b1600008102918183046714d1120d7b160000148215171561117357506714d1120d7b160000820403613031576706f05b59d3b2000081019081811161117357811061302057670de0b6b3a7640000900490565b602081830312610201578051906001600160401b03821161020157019080601f83011215610201578151916130d283611dc5565b926130e0604051948561023c565b80845260208085019160051b830101918383116102015760208101915b83831061310c57505050505090565b82516001600160401b038111610201578201906060828703601f190112610201576040519061313a8261021c565b60208301516131488161031a565b825260408301516001600160401b038111610201576020908401019187601f8401121561020157825161317a816102aa565b94613188604051968761023c565b818652896020838701011161020157856131ae606093602098978980809a019101610b78565b85840152015160408201528152019201916130fd565b906131cd610fa3565b506040820180519091906000906001600160a01b0316600080516020614b4583398151915281900361337c57505060a08301516001600160a01b031631925b61322081516020808251830101910161309e565b9360005b8551811015613279578061327261324e6132406001948a6121ad565b51516001600160a01b031690565b602061325a848b6121ad565b5101516040613269858c6121ad565b51015191614a21565b5001613224565b5092519193509190613293906001600160a01b0316610801565b90600080516020614b4583398151915282036132f15760a08301516132c292506001600160a01b0316316111a3565b6132d260808301518210156129ac565b60606132dd8161029c565b920151825260208201526000604082015290565b61333c916020906001600160a01b031660a08501516001600160a01b03165b6040516370a0823160e01b81526001600160a01b03909116600482015293849190829081906024820190565b03915afa8015610a68576133589260009161335d575b506111a3565b6132c2565b613376915060203d60201161279457612785818361023c565b38613352565b6133c690602090613395906001600160a01b0316610801565b60a08701516040516370a0823160e01b81526001600160a01b03909116600482015292839190829081906024820190565b03915afa918215610a6857916133de575b509261320c565b6133f7915060203d60201161279457612785818361023c565b386133d7565b6001600160a01b03918216815291166020820152604081019190915260600190565b613427610fa3565b506040810180516134609061344690610801906001600160a01b031681565b60a0840180519093916020916001600160a01b0316613310565b03915afa918215610a68576000926135f4575b506020840180518591906001600160a01b03167399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9d19810161354d575b5061351c61080161080160209561350e8661331096600080516020614b458339815191526134f46108016134e461352a9f9c60e0015160018060a01b031690565b945193516001600160a01b031690565b036135455760608d0151905b6135086149d4565b92614a50565b50516001600160a01b031690565b91516001600160a01b031690565b03915afa8015610a68576132c29260009161335d57506111a3565b600090613500565b60e092909201516060870151604051636fe2528b60e11b8152969294929360209288928392613589926001600160a01b031690600485016133fd565b038173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4948515610a68576108016108016133109361350e8a60209861351c9661352a9c6135d7575b50965096995050955050506134a3565b6135ed908b3d8d1161279457612785818361023c565b50386135c7565b61360e91925060203d60201161279457612785818361023c565b9038613473565b61361d610fa3565b5060408101805161363c9061344690610801906001600160a01b031681565b03915afa918215610a6857600092613748575b506020840180518591906001600160a01b03167399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9d1981016136bf575061351c61080161080160209561350e8661331096600080516020614b458339815191526134f46108016134e461352a9f9c60e0015160018060a01b031690565b949160206136e161080161080160e0600495989698015160018060a01b031690565b604051631a5896b360e31b815292839182905afa8015610a685760209160009161372b575b506060880151966135896040519889938493636fe2528b60e11b8552600485016133fd565b6137429150823d84116114ba576114ac818361023c565b38613706565b61376291925060203d60201161279457612785818361023c565b903861364f565b6020815260a06080613786845183602086015260c0850190610b9b565b93600180841b03602082015116604085015260408101516060850152606081015182850152015191015290565b6137bb610fa3565b5060208101516001600160a01b0316600080516020614b4583398151915214613a41575b6137e98151614a2f565b60e082018051919290916001600160a01b031692602060608301948551926138256040519485938493636fe2528b60e11b8552600485016133fd565b038173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af48015610a68576000936020926138d492613a26575b50835160a085015190916138b7916108019182916001600160a01b031660c08901518b519061389b60808c01519361388961027e565b998a526001600160a01b03168b8a0152565b604088015260608701526080860152516001600160a01b031690565b9060405195868094819363c04b8d5960e01b835260048301613769565b03925af1918215610a68576000926139ea575b5060400151600080516020614b458339815191529061390e906001600160a01b0316610801565b1461391d57612b61606061029c565b6040516370a0823160e01b81523060048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602082602481845afa918215610a68576000926139c9575b50803b1561020157604051632e1a7d4d60e01b815260048101929092526000908290602490829084905af18015610a68576139ae575b50612c87565b806139bd60006139c39361023c565b80610673565b386139a8565b6139e391925060203d60201161279457612785818361023c565b9038613972565b600080516020614b458339815191529192506108016040613a1c61390e9360203d60201161279457612785818361023c565b94935050506138e7565b613a3c90843d861161279457612785818361023c565b613853565b60608101517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561020157600090600460405180948193630d0e30db60e41b83525af18015610a6857613aa0575b506137df565b806139bd6000613aaf9361023c565b38613a9a565b95949391613af090613ae2613afb93613acf8a6000612206565b61012060208b01526101208a0190612213565b9088820360408a015261229b565b9260608701906122d8565b84820360e08601526020808251938481520191019160005b818110613b265750506101009150930152565b8351835260209384019390920191600101613b13565b9092613bb7613bac60a060c09598979660e08652805160e0870152613b6a6020820151610100880190612206565b60408101516000196001841b019081166101208801526060820151166101408701526080810151610160870152015161018085018690526101a0850190610b9b565b9660208401906122d8565b60a08201520152565b613bc8610fa3565b50613bdd815160208082518301019101612024565b613bee6002849593955110156129c5565b60208201516001600160a01b0316600080516020614b4583398151915214613f75575b613c1d6123eb84612190565b60e083018051919590916001600160a01b03169560206060860197885192613c596040519485938493636fe2528b60e11b8552600485016133fd565b038173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af48015610a6857613f58575b5060a0840151613c95906001600160a01b0316610801565b92613cbc613ca161026f565b30815294600060208701526001600160a01b03166040860152565b600060608501526002865111613d8a575061080161080160209493613ce3613d5c94612190565b5197613d3d613d066108016123eb613d006108016123eb87612190565b9461219d565b613d2d8c519360008b613d1761028d565b9e8f528e01526001600160a01b031660408d0152565b6001600160a01b031660608b0152565b6080890152613d4a6121c1565b60a0890152516001600160a01b031690565b608084015191600060c0860151966138d4604051988996879586946352bbbe2960e01b865260048601613b3c565b94916000613db8610801613da6839796610801968c51916148ff565b9451949590946001600160a01b031690565b92613dde60c0880151604051998a978896879563945bcec960e01b875260048701613ab5565b03925af1918215610a6857600092613f20575b5060400151600080516020614b4583398151915290613e18906001600160a01b0316610801565b14613e4c575b612c81613e3d91613e2f606061029c565b93518452612c7b8151611185565b60208201526000604082015290565b6040516370a0823160e01b8152306004820152906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602083602481845afa928315610a6857600093613eff575b50803b1561020157604051632e1a7d4d60e01b815260048101939093526000908390602490829084905af1908115610a6857613e3d92612c8192613eea575b50915050613e1e565b806139bd6000613ef99361023c565b38613ee1565b613f1991935060203d60201161279457612785818361023c565b9138613ea2565b600080516020614b458339815191529192506108016040613f4e613e18933d806000833e61256c818361023c565b9493505050613df1565b613f709060203d60201161279457612785818361023c565b613c7d565b60608201517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561020157600090600460405180948193630d0e30db60e41b83525af18015610a6857613fd4575b50613c11565b806139bd6000613fe39361023c565b38613fce565b613ff1610fa3565b5061400260c08201514211156128f6565b61401681516020808251830101910161257b565b606083929301928351946000955b61402e8351611185565b8710156142da5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee61405a6108016123eb8a876121ad565b0361418c5760e085015160209061407b90610801906001600160a01b031681565b6140886123eb8a886121ad565b9089846140a76123eb6124d46140a16123eb868d6121ad565b94611165565b936140b28951611194565b8d148d8c6000926000146141825761413d92506080810151915b6140d68d51611194565b0361417a5760a001516001600160a01b03165b905b604051631a4c1ca360e01b8152998a9889978896600488016001600160a01b0391821681529181166020830152918216604082015260608101929092526080820192909252911660a082015260c00190565b03925af18015610a685760019160009161415c575b50965b0195614024565b614174915060203d811161279457612785818361023c565b38614152565b5030906140eb565b61413d92916140cc565b8061419a6123eb89866121ad565b60e08701805190916020916001600160a01b0316604051636fe2528b60e11b815294859283926141ce9291600485016133fd565b038173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4918215610a685761080161420e92610801926020956142bf5750516001600160a01b031690565b61421b6123eb8a886121ad565b908960006142356123eb6124d46140a16123eb868d6121ad565b936142408951611194565b8d148d8c849285146142b55761427b92506080810151915b6142628d51611194565b14851461417a5760a001516001600160a01b03166140e9565b03925af18015610a6857600191600091614297575b5096614155565b6142af915060203d811161279457612785818361023c565b38614290565b61427b9291614258565b6142d590863d811161279457612785818361023c565b61350e565b935094505050612b61606061029c565b60009060033d116142f757565b905060046000803e60005160e01c90565b600060443d10610317576040513d600319016004823e8051913d60248401116001600160401b0384111761437557828201928351916001600160401b03831161436d573d8401600319018584016020011161436d57506103179291016020019061023c565b949350505050565b92915050565b3d156143a6573d9061438c826102aa565b9161439a604051938461023c565b82523d6000602084013e565b606090565b6143b3610fa3565b5060208101516001600160a01b0316600080516020614b4583398151915214614568575b6143e18151614a2f565b60e0820180519192916001600160a01b0316926020606084019485519261441c6040519485938493636fe2528b60e11b8552600485016133fd565b038173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af48015610a685760009260209261449d9261454d575b50845160a08601519091614480916108019182916001600160a01b031660c08a01518b519061389b60808d01519361388961027e565b9060405194858094819363c04b8d5960e01b835260048301613769565b03925af16000918161452c575b50614503576144b76142ea565b6308c379a0146144d0575b6144ca61437b565b50611db3565b6144d8614308565b806144e357506144c2565b60405162461bcd60e51b81529081906144ff9060048301610bc0565b0390fd5b60409190910151600080516020614b458339815191529061390e906001600160a01b0316610801565b61454691925060203d60201161279457612785818361023c565b90386144aa565b61456390843d861161279457612785818361023c565b61444a565b60608101517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561020157600090600460405180948193630d0e30db60e41b83525af18015610a68576145c7575b506143d7565b806139bd60006145d69361023c565b386145c1565b919260809361460192979695978452602084015260a0604084015260a083019061229b565b6001600160a01b0390951660608201520152565b61461d610fa3565b5060208101516001600160a01b0316600080516020614b458339815191521461488b575b61465581516020808251830101910161279b565b6146616123eb82612190565b60e083018051909391906001600160a01b0316936020606084019586519361469d6040519586938493636fe2528b60e11b8552600485016133fd565b038173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4918215610a68576108016146dd92610801926000956148735750516001600160a01b031690565b8451608084015160a08501519195929184906001600160a01b03169661471e60c0880151604051998a97889687956338ed173960e01b8752600487016145dc565b03925af1918215610a685760009261483b575b5060400151600080516020614b4583398151915290614758906001600160a01b0316610801565b1461476c575b612e3990612e2b606061029c565b6040516370a0823160e01b8152306004820152906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602083602481845afa928315610a685760009361481a575b50803b1561020157604051632e1a7d4d60e01b815260048101939093526000908390602490829084905af1918215610a6857612e3992614805575b50905061475e565b806139bd60006148149361023c565b386147fd565b61483491935060203d60201161279457612785818361023c565b91386147c2565b600080516020614b458339815191529192506108016040614869614758933d806000833e6128e7818361023c565b9493505050614731565b6142d59060203d60201161279457612785818361023c565b60608101517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561020157600090600460405180948193630d0e30db60e41b83525af18015610a68576148ea575b50614641565b806139bd60006148f99361023c565b386148e4565b929061490b84516120da565b93614916825161210c565b9260005b6149248351611185565b8110156149a5578061494b6149416108016123eb600195886121ad565b612402838b6121ad565b61495581866121ad565b5161495f82611165565b61496761027e565b9182528260208301526040820152600060608201526149846121c1565b608082015261499382886121ad565b5261499e81876121ad565b500161491a565b50929361026d925060606149b886612190565b5101526124026124c76124cd6108016123eb6124c78651611185565b604051906149e360608361023c565b60298252681d594819985a5b195960ba1b6040837f416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c60208201520152565b9091610317926135086149d4565b6014815110614a3f576014015190565b63a78aa27f60e01b60005260046000fd5b90929192834710614a7b57600081610317956020839451920190855af1614a7561437b565b91614acf565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608490fd5b91929015614b315750815115614ae3575090565b3b15614aec5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156144e35750805190602001fdfe00000000000000000000000099ec76235f8a5a52611b0da5f0c6b09e1dcd2c9ea264697066735822122005101ea2e4c9a4380aae972d9df0b5738dfd1c4919e6fbfb16e46c6fa083693f64736f6c634300081a0033";

type DexAdapterV2ConstructorParams =
  | [linkLibraryAddresses: DexAdapterV2LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DexAdapterV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DexAdapterV2__factory extends ContractFactory {
  constructor(...args: DexAdapterV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DexAdapterV2__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DexAdapterV2LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d13cb5064fc43aa5afb84d8e93c86c1222\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/TokenApproveLibrary.sol:TokenApproveLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _registry: AddressLike,
    _WNAtive: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_registry, _WNAtive, overrides || {});
  }
  override deploy(
    _registry: AddressLike,
    _WNAtive: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_registry, _WNAtive, overrides || {}) as Promise<
      DexAdapterV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DexAdapterV2__factory {
    return super.connect(runner) as DexAdapterV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DexAdapterV2Interface {
    return new Interface(_abi) as DexAdapterV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DexAdapterV2 {
    return new Contract(address, _abi, runner) as unknown as DexAdapterV2;
  }
}

export interface DexAdapterV2LibraryAddresses {
  ["contracts/libraries/TokenApproveLibrary.sol:TokenApproveLibrary"]: string;
}
