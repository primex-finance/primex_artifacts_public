/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TraderBalanceVaultV2,
  TraderBalanceVaultV2Interface,
} from "../../../../contracts/mocks/upgradeMocks/TraderBalanceVaultV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "depositer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "availableBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockedBalance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "traders",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType:
          "struct ITraderBalanceVault.BatchTopUpAvailableBalanceParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "batchTopUpAvailableBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_trader",
        type: "address",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "increaseLockedBalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_whiteBlackList",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testUpgrade",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "topUpAvailableBalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ITraderBalanceVault.UnlockAssetParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "unlockAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "address",
            name: "depositReceiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "depositAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            internalType: "enum ITraderBalanceVault.OpenType",
            name: "openType",
            type: "uint8",
          },
        ],
        internalType: "struct ITraderBalanceVault.LockAssetParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "useTraderAssets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "fromLocked",
        type: "bool",
      },
    ],
    name: "withdrawFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608080604052346100c1576000549060ff8260081c1661006f575060ff80821603610034575b604051611ad890816100c78239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561013a575b50361561001b57600080fd5b61002361183f565b60cb54604051630723eb0360e51b81523360048201526020918290829060249082906001600160a01b03165afa90811561012e57600091610101575b506100ef5761006c61196d565b341515806100e7575b156100d5573360005260ca81526040600020907399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e9182600052815260406000206100b43482546118ae565b9055600080516020611a43833981519152604051913483523392a360018055005b604051633abe877f60e11b8152600490fd5b506001610075565b6040516333df015b60e01b8152600490fd5b6101219150823d8411610127575b6101198183611782565b8101906117a4565b3861005f565b503d61010f565b6040513d6000823e3d90fd5b600090813560e01c90816301ffc9a71461169d575080633f4ba83a1461158c5780633fa4f2451461156e578063441d68ca1461146857806347e7ef241461125a578063485cc955146110045780635524107714610fe95780635c975abb14610fc65780637b10399914610f9d5780638291732014610e445780638456cb5914610d6d5780639d6aed0b14610cbd578063a0fd10ad14610bbc578063b1a11ae91461092f578063c23f001f146108d9578063c268dd3114610666578063f3fef3a3146104ac5763fb4ef4660361000f57346104a95760a03660031901126104a95760c954604051632474521560e21b8152600080516020611a6383398151915260048201523360248201526001600160a01b03916020908290604490829086165afa90811561049e578391610480575b501561046e57806102786118bb565b16825260ca602052604082208161028d6118d1565b16600052602052604060002060843560038110156103e85780158015610450575b600182036103fe5750506102c5606435825461181c565b90555b806102d16118e7565b166102da575080f35b7399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e816102f86118d1565b16146103ec5773__$183737d697d7aa9b5df9988cbe11bc4947$__908261031d6118d1565b926103266118e7565b60643594823b156103e857604051636336129b60e11b81526001600160a01b0391821660048201529116602482015260448101859052908290829060649082905af480156103dd576103c5575b5050600080516020611a838339815191529061038d6118bb565b6103bf6103986118d1565b604080516001600160a01b0390921682526020820196909652919092169390918291820190565b0390a280f35b6103ce90611758565b6103d9578238610373565b8280fd5b6040513d84823e3d90fd5b8380fd5b604051637414865560e01b8152600490fd5b1561041b5750600101610414606435825461181c565b90556102c8565b600214610429575b506102c8565b61044860016064359261043d84825461181c565b8155019182546118ae565b905538610423565b825460643511156102ae575b60405163317cf4f160e01b8152600490fd5b60405163036be76f60e61b8152600490fd5b610498915060203d8111610127576101198183611782565b38610269565b6040513d85823e3d90fd5b80fd5b50346104a95760403660031901126104a9576104c66116f2565b6024356104d161183f565b60cb54604051630723eb0360e51b81523360048201526001600160a01b03916020908290602490829086165afa90811561065b57859161063d575b506100ef5781156100d55733845260ca60205260408420908316908160005260205260406000209081549182841161045c5761055d847399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e9461181c565b9055036105ae576105a481610581600080516020611a8383398151915293336119b1565b604080516001600160a01b03909516855260208501919091523393918291820190565b0390a26001805580f35b8273__$183737d697d7aa9b5df9988cbe11bc4947$__803b1561063957604051636336129b60e11b81526001600160a01b038516600482015233602482015260448101849052908290829060649082905af480156103dd57610625575b50506105a4600080516020611a8383398151915291610581565b61062e90611758565b6103d957823861060b565b5080fd5b610655915060203d8111610127576101198183611782565b3861050c565b6040513d87823e3d90fd5b50346104a95760a03660031901126104a9576106806116f2565b9061068961170d565b6001600160a01b036044358181169490928584036108d557606435956084359081151582036108d1578460c95416916040518093632474521560e21b8252600080516020611a63833981519152600483015233602483015281604460209687935afa9081156108c65789916108a9575b501561046e571561084f578484169182885260ca815260408820828952815288600160408a2001541061045c577399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e92885260ca81526040882090828952526001604088200161075d89825461181c565b90555b036107aa5785610784600080516020611a838339815191529596976103bf936119b1565b604080516001600160a01b03909716875260208701919091529190921693918291820190565b73__$183737d697d7aa9b5df9988cbe11bc4947$__90813b1561084b57604051636336129b60e11b81526001600160a01b03868116600483015291909116602482015260448101879052908590829060649082905af4801561065b57610826575b506103bf600080516020611a83833981519152939495610784565b600080516020611a8383398151915293946108436103bf92611758565b94935061080b565b8580fd5b8484169182885260ca81526040882082895281528860408920541061045c577399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e92885260ca8152604088209082895252604087206108a289825461181c565b9055610760565b6108c09150843d8611610127576101198183611782565b386106f9565b6040513d8b823e3d90fd5b8680fd5b8480fd5b50346104a95760403660031901126104a957604080916108f76116f2565b6108ff61170d565b9060018060a01b03809116835260ca60205283832091168252602052206001815491015482519182526020820152f35b50346104a9576003196020368201126106395767ffffffffffffffff6004351161063957608090600435360301126104a95760018060a01b0360c95416604051632474521560e21b8152600080516020611a63833981519152600482015260208160448160249533878301525afa90811561049e578391610b9d575b501561046e57815b6064600435013581106109c4578280f35b6109e1816109db8460043501600435600401611911565b90611947565b35610a0b575b60001981146109f8576001016109b3565b50634e487b7160e01b8252601160045290fd5b610a25610a20826109db600480350180611911565b6118fd565b610a336044600435016118fd565b610a4a836109db8660043501600435600401611911565b60c954604051632474521560e21b8152600080516020611a63833981519152600482015233878201529135939190602090829060449082906001600160a01b03165afa908115610b92578791610b73575b501561046e576001600160a01b038216151580610b61575b15610b4f576001600160a01b0382167399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e14610b37575b6020600080516020611a438339815191529160018060a01b03169283885260ca82526040882060018060a01b0382168952825260408820610b1f8682546118ae565b90556040519485526001600160a01b031693a36109e7565b8215610add5760405163fae8279160e01b8152600490fd5b60405163044aa57560e41b8152600490fd5b506001600160a01b0381161515610ab3565b610b8c915060203d602011610127576101198183611782565b38610a9b565b6040513d89823e3d90fd5b610bb6915060203d602011610127576101198183611782565b386109ab565b50346104a95760803660031901126104a95760c954604051632474521560e21b8152600080516020611a6383398151915260048201523360248201526020916001600160a01b03919083908290604490829086165afa908115610cb2578491610c95575b501561046e576064359181610c336118bb565b16845260ca81526040842082610c476118d1565b168552815260016040852001610c5e84825461181c565b905581610c696118e7565b16845260ca81526040842091610c7d6118d1565b16845252610c90604083209182546118ae565b905580f35b610cac9150833d8511610127576101198183611782565b38610c20565b6040513d86823e3d90fd5b50346104a957806003193601126104a9576040516040810181811067ffffffffffffffff821117610d595760405260148152602091732a3930b232b92130b630b731b2ab30bab63a2b1960611b838301526040519283918183528351918281850152815b838110610d4257505060408094508284010152601f80199101168101030190f35b808601820151878201604001528694508101610d21565b634e487b7160e01b83526041600452602483fd5b50346104a957806003193601126104a95760c954604051632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb600482015233602482015290602090829060449082906001600160a01b03165afa9081156103dd578291610e26575b501561046e57610dec61196d565b600160ff1960655416176065557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b610e3e915060203d8111610127576101198183611782565b38610dde565b50610e4e36611723565b60c954604051632474521560e21b8152600080516020611a6383398151915260048201523360248201526001600160a01b039492936020929091908390829060449082908a165afa908115610b92578791610f80575b501561046e578416937399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e8503610f0f575b83156100d557600080516020611a4383398151915292169283865260ca825260408620858752825260016040872001610f038282546118ae565b9055604051908152a380f35b60405163313ce56760e01b81528281600481895afa908115610b925760129160ff918991610f53575b50161115610ec9575b60405163b7c73c5d60e01b8152600490fd5b610f739150853d8711610f79575b610f6b8183611782565b810190611895565b38610f38565b503d610f61565b610f979150833d8511610127576101198183611782565b38610ea4565b50346104a957806003193601126104a95760c9546040516001600160a01b039091168152602090f35b50346104a957806003193601126104a957602060ff606554166040519015158152f35b50346104a95760203660031901126104a95760043560cc5580f35b50346104a95760403660031901126104a95761101e6116f2565b61102661170d565b82549160ff8360081c16159081809261124d575b8015611236575b156111da5760ff19848116600117865593826111c9575b506040516301ffc9a760e01b808252637965db0b60e01b60048301526020946001600160a01b03938416939290918682602481885afa9182156108c65789926111aa575b508161114e575b5015610b4f576bffffffffffffffffffffffff60a01b928360c954161760c955169060cb54161760cb5561110f84549360ff8560081c16906110e4826117bc565b6110ed826117bc565b606554166065556110fd816117bc565b611106816117bc565b600180556117bc565b611117578280f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989161ff001916835560405160018152a138808280f35b604051908152633df6cef760e01b6004820152905085816024818587165afa90811561119f578891611182575b50386110a3565b6111999150863d8811610127576101198183611782565b3861117b565b6040513d8a823e3d90fd5b6111c2919250873d8911610127576101198183611782565b903861109c565b61ffff191661010117855538611058565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156110415750600160ff851614611041565b50600160ff85161061103a565b5060403660031901126104a95761126f6116f2565b60243561127a61183f565b60cb54604051630723eb0360e51b81523360048201526001600160a01b039260209290919083908290602490829088165afa90811561145d578691611440575b506100ef576112c761196d565b80928416937399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e851460001461134a57509091503415159081611341575b50156100d557600080516020611a4383398151915234915b33855260ca81526040852084865281526040852061132f8482546118ae565b90556040519283523392a36001805580f35b905015386112f8565b341580611437575b156100d55760405163313ce56760e01b81528381600481895afa908115610b925760129160ff91899161141a575b501611610f415760405163c37f7f7f60e01b81526001600160a01b039190911660048201523360248201526044810191909152818160648173__$183737d697d7aa9b5df9988cbe11bc4947$__5af4801561065b576113f0575b50600080516020611a4383398151915290611310565b8190813d8311611413575b6114058183611782565b810103126103e857386113da565b503d6113fb565b6114319150863d8811610f7957610f6b8183611782565b38611380565b50811515611352565b6114579150833d8511610127576101198183611782565b386112ba565b6040513d88823e3d90fd5b5061147236611723565b60c954604051632474521560e21b8152600080516020611a6383398151915260048201523360248201526001600160a01b039492936020929091908390829060449082908a165afa908115610b92578791611551575b501561046e5784169384151580611546575b15610b4f577399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e851461152c575b600080516020611a4383398151915292169283865260ca825260408620858752825260408620610f038282546118ae565b833410156114fb5760405163fae8279160e01b8152600490fd5b5080831615156114da565b6115689150833d8511610127576101198183611782565b386114c8565b50346104a957806003193601126104a957602060cc54604051908152f35b50346104a957806003193601126104a95760c954604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8600482015233602482015290602090829060449082906001600160a01b03165afa9081156103dd57829161167f575b501561046e5760655460ff8116156116435760ff19166065557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b611697915060203d8111610127576101198183611782565b386115fd565b9050346106395760203660031901126106395760043563ffffffff60e01b81168091036103d957602092506301ffc9a760e01b81149081156116e1575b5015158152f35b6312b3ed2b60e01b149050386116da565b600435906001600160a01b038216820361170857565b600080fd5b602435906001600160a01b038216820361170857565b6060906003190112611708576001600160a01b0390600435828116810361170857916024359081168103611708579060443590565b67ffffffffffffffff811161176c57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761176c57604052565b90816020910312611708575180151581036117085790565b156117c357565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b9190820391821161182957565b634e487b7160e01b600052601160045260246000fd5b600260015414611850576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b90816020910312611708575160ff811681036117085790565b9190820180921161182957565b6004356001600160a01b03811681036117085790565b6044356001600160a01b03811681036117085790565b6024356001600160a01b03811681036117085790565b356001600160a01b03811681036117085790565b903590601e1981360301821215611708570180359067ffffffffffffffff821161170857602001918160051b3603831361170857565b91908110156119575760051b0190565b634e487b7160e01b600052603260045260246000fd5b60ff6065541661197957565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b60405167ffffffffffffffff9190602081018381118282101761176c5760405260008080958194828095525af1913d15611a3b573d918211611a275760405191611a05601f8201601f191660200184611782565b825260203d92013e5b15611a1557565b60405163c71509d160e01b8152600490fd5b634e487b7160e01b81526041600452602490fd5b5050611a0e56fe5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62e965846df3dd5b1dfa65f58e31477079e90140e0908b6dd31b5aead5a57cf3659b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eba26469706673582212200564d4e7165bb379fbd85bd4c691607ff3997dcbe4276acce0d940417e59daf264736f6c63430008120033";

type TraderBalanceVaultV2ConstructorParams =
  | [
      linkLibraryAddresses: TraderBalanceVaultV2LibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TraderBalanceVaultV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TraderBalanceVaultV2__factory extends ContractFactory {
  constructor(...args: TraderBalanceVaultV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        TraderBalanceVaultV2__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: TraderBalanceVaultV2LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$183737d697d7aa9b5df9988cbe11bc4947\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TraderBalanceVaultV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TraderBalanceVaultV2__factory {
    return super.connect(runner) as TraderBalanceVaultV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TraderBalanceVaultV2Interface {
    return new Interface(_abi) as TraderBalanceVaultV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TraderBalanceVaultV2 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TraderBalanceVaultV2;
  }
}

export interface TraderBalanceVaultV2LibraryAddresses {
  ["contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"]: string;
}
