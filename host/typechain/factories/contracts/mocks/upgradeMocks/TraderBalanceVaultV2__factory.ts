/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TraderBalanceVaultV2,
  TraderBalanceVaultV2Interface,
} from "../../../../contracts/mocks/upgradeMocks/TraderBalanceVaultV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "depositer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "availableBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockedBalance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "traders",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType:
          "struct ITraderBalanceVault.BatchTopUpAvailableBalanceParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "batchTopUpAvailableBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_traders",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "getBalancesForAddresses",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_trader",
        type: "address",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "increaseLockedBalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_whiteBlackList",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testUpgrade",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "topUpAvailableBalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ITraderBalanceVault.UnlockAssetParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "unlockAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "address",
            name: "depositReceiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "depositAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            internalType: "enum ITraderBalanceVault.OpenType",
            name: "openType",
            type: "uint8",
          },
        ],
        internalType: "struct ITraderBalanceVault.LockAssetParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "useTraderAssets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "fromLocked",
        type: "bool",
      },
    ],
    name: "withdrawFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080806040523460bd576000549060ff8260081c16606b575060ff808216036031575b604051611cdd90816100c38239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a1386022565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe6080806040526004361015610150575b50361561001b57600080fd5b610023611acc565b60cb54604051630723eb0360e51b815233600482015290602090829060249082906001600160a01b03165afa90811561014457600091610115575b506101035761006b611b22565b341515806100fb575b156100e9573360005260ca60205260406000207399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e60005260205260406000206100b2348254611973565b90557399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e604051348152600080516020611c4883398151915260203392a360018055005b604051633abe877f60e11b8152600490fd5b506001610074565b6040516333df015b60e01b8152600490fd5b610137915060203d60201161013d575b61012f8183611923565b81019061195b565b3861005e565b503d610125565b6040513d6000823e3d90fd5b600090813560e01c90816301ffc9a714611817575080633f4ba83a146117055780633fa4f245146116e7578063441d68ca146115cd57806347e7ef24146113c8578063485cc95514611162578063543fcebd146110195780635524107714610ffe5780635c975abb14610fdb5780637b10399914610fb25780638291732014610e485780638456cb5914610d705780639d6aed0b14610ce7578063a0fd10ad14610bcf578063b1a11ae914610980578063c23f001f14610925578063c268dd311461069d578063f3fef3a3146104da5763fb4ef4660361000f57346104d75760a03660031901126104d75760c954604051632474521560e21b8152600080516020611c68833981519152600482015233602482015290602090829060449082906001600160a01b03165afa9081156104115782916104b8575b50156104a6576001600160a01b0361029f611a1f565b16815260ca60205260408082206102b4611a35565b6001600160a01b031660009081526020919091522060843560038110156104a25780158015610484575b600182036104325750506102f56064358254611a89565b90555b6001600160a01b03610308611a4b565b166103105780f35b7399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e6001600160a01b03610335611a35565b16146104205773__$183737d697d7aa9b5df9988cbe11bc4947$__81610359611a35565b91610362611a4b565b60643593823b1561041c57604051636336129b60e11b81526001600160a01b0391821660048201529116602482015260448101849052908290829060649082905af48015610411576103f8575b5050600080516020611c888339815191526103c8611a1f565b916103d1611a35565b604080516001600160a01b0392831681526020810193909352931692819081015b0390a280f35b8161040291611923565b61040d5781386103af565b5080fd5b6040513d84823e3d90fd5b8380fd5b604051637414865560e01b8152600490fd5b1561044f57506001016104486064358254611a89565b90556102f8565b60021461045d575b506102f8565b61047c600160643592610471848254611a89565b815501918254611973565b905538610457565b825460643511156102de575b60405163317cf4f160e01b8152600490fd5b8280fd5b60405163036be76f60e61b8152600490fd5b6104d1915060203d60201161013d5761012f8183611923565b38610289565b80fd5b50346104d75760403660031901126104d7576104f4611884565b6024356104ff611acc565b60cb54604051630723eb0360e51b815233600482015290602090829060249082906001600160a01b03165afa908115610692578491610673575b506101035780156100e95733835260ca6020526040832060018060a01b03831660005260205260406000208054808311610490578261057791611a89565b90556001600160a01b0382167399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e036105e7576105dd816105ba600080516020611c888339815191529333611bc6565b604080516001600160a01b03909516855260208501919091523393918291820190565b0390a26001805580f35b8273__$183737d697d7aa9b5df9988cbe11bc4947$__803b1561040d57604051636336129b60e11b81526001600160a01b038516600482015233602482015260448101849052908290829060649082905af480156104115761065e575b50506105dd600080516020611c88833981519152916105ba565b8161066891611923565b6104a2578238610644565b61068c915060203d60201161013d5761012f8183611923565b38610539565b6040513d86823e3d90fd5b50346104d75760a03660031901126104d7576106b7611884565b6106bf61189f565b604435916001600160a01b038316918284036109215760643592608435801515810361091d5760c954604051632474521560e21b8152600080516020611c68833981519152600482015233602482015290602090829060449082906001600160a01b03165afa9081156109125788916108f3575b50156104a6571561088f5760018060a01b0383169081875260ca6020526040872081885260205284600160408920015410610490577399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e91875260ca60205260408720818852602052600160408820016107a1868254611a89565b90555b036107e957906107c483600080516020611c888339815191529493611bc6565b604080516001600160a01b0395861681526020810193909352931692819081016103f2565b8473__$183737d697d7aa9b5df9988cbe11bc4947$__91823b1561040d57604051636336129b60e11b81526001600160a01b0387811660048301529190911660248201526044810185905291829060649082905af4801561088457610860575b5090600080516020611c88833981519152916107c4565b9361087c81600080516020611c88833981519152949396611923565b939091610849565b6040513d87823e3d90fd5b60018060a01b0383169081875260ca6020526040872081885260205284604088205410610490577399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e91875260ca60205260408720818852602052604087206108ec868254611a89565b90556107a4565b61090c915060203d60201161013d5761012f8183611923565b38610733565b6040513d8a823e3d90fd5b8680fd5b8480fd5b50346104d75760403660031901126104d75760408091610943611884565b61094b61189f565b9060018060a01b0316825260ca6020528282209060018060a01b03168252602052206001815491015482519182526020820152f35b50346104d75760203660031901126104d75760043567ffffffffffffffff811161040d5780600401608060031983360301126104a25760c954604051632474521560e21b8152600080516020611c68833981519152600482015233602482015290602090829060449082906001600160a01b03165afa908115610692578491610bb0575b50156104a65760648201359060248301845b838110610a21578580f35b610a3581610a2f8486611a96565b906119f9565b35610a43575b600101610a16565b610a59610a5482610a2f8680611a96565b611a61565b90610a6660448701611a61565b610a7482610a2f8688611a96565b60c954604051632474521560e21b8152600080516020611c6883398151915260048201523360248201529135929190602090829060449082906001600160a01b03165afa908115610ba5578a91610b87575b50156104a6576001600160a01b03169081151580610b75575b15610b63577399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e8214610b4b575b600080516020611c488339815191526020600195868060a01b031692838c5260ca825260408c20858d52825260408c20610b3b828254611973565b9055604051908152a39050610a3b565b8015610b005760405163fae8279160e01b8152600490fd5b60405163044aa57560e41b8152600490fd5b506001600160a01b0384161515610adf565b610b9f915060203d811161013d5761012f8183611923565b38610ac6565b6040513d8c823e3d90fd5b610bc9915060203d60201161013d5761012f8183611923565b38610a04565b50346104d75760803660031901126104d75760c954604051632474521560e21b8152600080516020611c68833981519152600482015233602482015290602090829060449082906001600160a01b03165afa908115610411578291610cc8575b50156104a6576064356001600160a01b03610c48611a1f565b16825260ca60205260408220610c5c611a35565b6001600160a01b03168352602052604082206001018054610c7e908390611a89565b90556001600160a01b03610c90611a4b565b16825260ca60205260408220610ca4611a35565b6001600160a01b031683526020526040822080549091610cc391611973565b905580f35b610ce1915060203d60201161013d5761012f8183611923565b38610c2f565b50346104d757806003193601126104d7576040805191610d078284611923565b60148352732a3930b232b92130b630b731b2ab30bab63a2b1960611b6020840152815192839160208352815191826020850152815b838110610d59575050828201840152601f01601f19168101030190f35b602082820181015188830188015287955001610d3c565b50346104d757806003193601126104d75760c954604051632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb600482015233602482015290602090829060449082906001600160a01b03165afa908115610411578291610e29575b50156104a657610def611b22565b600160ff1960655416176065557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b610e42915060203d60201161013d5761012f8183611923565b38610de1565b50610e52366118b5565b60c954604051632474521560e21b8152600080516020611c68833981519152600482015233602482015291929190602090829060449082906001600160a01b03165afa908115610884578591610f93575b50156104a6576001600160a01b0316917399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9d198301610f1f575b81156100e9576020600080516020611c488339815191529160018060a01b03169283865260ca825260408620858752825260016040872001610f13828254611973565b9055604051908152a380f35b60405163313ce56760e01b8152602081600481875afa9081156108845760129160ff918791610f64575b50161115610ed0575b60405163b7c73c5d60e01b8152600490fd5b610f86915060203d602011610f8c575b610f7e8183611923565b810190611996565b38610f49565b503d610f74565b610fac915060203d60201161013d5761012f8183611923565b38610ea3565b50346104d757806003193601126104d75760c9546040516001600160a01b039091168152602090f35b50346104d757806003193601126104d757602060ff606554166040519015158152f35b50346104d75760203660031901126104d75760043560cc5580f35b50346104d75760403660031901126104d75760043567ffffffffffffffff811161040d573660238201121561040d5780600401359067ffffffffffffffff82116104a2576024810190602436918460051b0101116104a25761107961189f565b91611083816119c7565b9261108d826119c7565b926001600160a01b0390911690855b8381106110d1576110bf866110cd876040519384936040855260408501906118ef565b9083820360208501526118ef565b0390f35b6001600160a01b036110e7610a548387866119f9565b16875260ca6020526040872083885260205260408720604051906040820182811067ffffffffffffffff82111761114e579060019392916040526020848254928385520154920191825261113b838a611a75565b52516111478288611a75565b520161109c565b634e487b7160e01b8a52604160045260248afd5b50346104d75760403660031901126104d75761117c611884565b61118461189f565b82549160ff8360081c1615928380946113bb575b80156113a4575b156113485760ff198116600117855583611337575b506040516301ffc9a760e01b8152637965db0b60e01b60048201526001600160a01b039190911690602081602481855afa908115610884578591611318575b50806112b8575b15610b63576bffffffffffffffffffffffff60a01b60c954161760c95560018060a01b03166bffffffffffffffffffffffff60a01b60cb54161760cb5581549061127b60ff8360081c1661124d81611b66565b61125681611b66565b60ff196065541660655561126981611b66565b61127281611b66565b60018055611b66565b611283575080f35b61ff00191681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b506040516301ffc9a760e01b8152633df6cef760e01b60048201526020816024816001600160a01b0387165afa9081156108845785916112f9575b506111fa565b611312915060203d60201161013d5761012f8183611923565b386112f3565b611331915060203d60201161013d5761012f8183611923565b386111f3565b61ffff1916610101178455386111b4565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b15801561119f5750600160ff82161461119f565b50600160ff821610611198565b5060403660031901126104d7576113dd611884565b6024356113e8611acc565b60cb54604051630723eb0360e51b815233600482015290602090829060249082906001600160a01b03165afa9081156106925784916115ae575b506101035761142f611b22565b6001600160a01b0382169181907399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e84036114b857503415159150816114af575b50156100e957345b33835260ca602052604083208284526020526040832061148c828254611973565b9055604051908152600080516020611c4883398151915260203392a36001805580f35b90501538611463565b3415806115a5575b156100e95760405163313ce56760e01b8152602081600481885afa90811561159a5760129160ff91889161157b575b501611610f525760405163c37f7f7f60e01b81526001600160a01b03919091166004820152336024820152604481019190915260208160648173__$183737d697d7aa9b5df9988cbe11bc4947$__5af4801561069257611550575b5061146b565b602090813d8311611574575b6115668183611923565b810103126104a2573861154a565b503d61155c565b611594915060203d602011610f8c57610f7e8183611923565b386114ef565b6040513d88823e3d90fd5b508115156114c0565b6115c7915060203d60201161013d5761012f8183611923565b38611422565b506115d7366118b5565b60c954604051632474521560e21b8152600080516020611c68833981519152600482015233602482015291929190602090829060449082906001600160a01b03165afa9081156108845785916116c8575b50156104a6576001600160a01b031691821515806116b6575b15610b63577399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e831461169c575b6020600080516020611c488339815191529160018060a01b03169283865260ca825260408620858752825260408620610f13828254611973565b813410156116625760405163fae8279160e01b8152600490fd5b506001600160a01b0381161515611641565b6116e1915060203d60201161013d5761012f8183611923565b38611628565b50346104d757806003193601126104d757602060cc54604051908152f35b50346104d757806003193601126104d75760c954604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8600482015233602482015290602090829060449082906001600160a01b03165afa9081156104115782916117f8575b50156104a65760655460ff8116156117bc5760ff19166065557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b611811915060203d60201161013d5761012f8183611923565b38611776565b90503461040d57602036600319011261040d5760043563ffffffff60e01b81168091036104a257602092506301ffc9a760e01b8114908115611873575b8115611862575b5015158152f35b6312b3ed2b60e01b1490503861185b565b63543fcebd60e01b81149150611854565b600435906001600160a01b038216820361189a57565b600080fd5b602435906001600160a01b038216820361189a57565b606090600319011261189a576004356001600160a01b038116810361189a57906024356001600160a01b038116810361189a579060443590565b906020808351928381520192019060005b81811061190d5750505090565b8251845260209384019390920191600101611900565b90601f8019910116810190811067ffffffffffffffff82111761194557604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261189a5751801515810361189a5790565b9190820180921161198057565b634e487b7160e01b600052601160045260246000fd5b9081602091031261189a575160ff8116810361189a5790565b67ffffffffffffffff81116119455760051b60200190565b906119d1826119af565b6119de6040519182611923565b82815280926119ef601f19916119af565b0190602036910137565b9190811015611a095760051b0190565b634e487b7160e01b600052603260045260246000fd5b6004356001600160a01b038116810361189a5790565b6044356001600160a01b038116810361189a5790565b6024356001600160a01b038116810361189a5790565b356001600160a01b038116810361189a5790565b8051821015611a095760209160051b010190565b9190820391821161198057565b903590601e198136030182121561189a570180359067ffffffffffffffff821161189a57602001918160051b3603831361189a57565b600260015414611add576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b60ff60655416611b2e57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b15611b6d57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b6000809160209360405190611bdb8683611923565b83825285820191601f19870136843751925af1903d15611c41573d9067ffffffffffffffff8211611945576040519160009190611c21601f8201601f1916830185611923565b83523d92013e5b15611c2f57565b60405163c71509d160e01b8152600490fd5b50611c2856fe5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62e965846df3dd5b1dfa65f58e31477079e90140e0908b6dd31b5aead5a57cf3659b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eba26469706673582212209978a1757e5c2030b47cc5ea78e9e19eef87d5b84e9c7476425ab1c0a46a06ff64736f6c634300081a0033";

type TraderBalanceVaultV2ConstructorParams =
  | [
      linkLibraryAddresses: TraderBalanceVaultV2LibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TraderBalanceVaultV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TraderBalanceVaultV2__factory extends ContractFactory {
  constructor(...args: TraderBalanceVaultV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        TraderBalanceVaultV2__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: TraderBalanceVaultV2LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$183737d697d7aa9b5df9988cbe11bc4947\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TraderBalanceVaultV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TraderBalanceVaultV2__factory {
    return super.connect(runner) as TraderBalanceVaultV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TraderBalanceVaultV2Interface {
    return new Interface(_abi) as TraderBalanceVaultV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TraderBalanceVaultV2 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TraderBalanceVaultV2;
  }
}

export interface TraderBalanceVaultV2LibraryAddresses {
  ["contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"]: string;
}
