/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TreasuryV2,
  TreasuryV2Interface,
} from "../../../../contracts/mocks/upgradeMocks/TreasuryV2";

const _abi = [
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxTotalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPercentPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeBetweenTransfers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeframeDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountDuringTimeframe",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct ITreasuryStorage.SpendingLimits",
        name: "newSpendingLimits",
        type: "tuple",
      },
    ],
    name: "MaxSpendingLimitChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferFromTreasury",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "canTransferByTime",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxTotalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPercentPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeBetweenTransfers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeframeDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountDuringTimeframe",
            type: "uint256",
          },
        ],
        internalType: "struct ITreasuryStorage.SpendingLimits",
        name: "_newSpendingLimits",
        type: "tuple",
      },
    ],
    name: "decreaseLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxTotalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPercentPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeBetweenTransfers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeframeDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountDuringTimeframe",
            type: "uint256",
          },
        ],
        internalType: "struct ITreasuryStorage.SpendingLimits",
        name: "_newSpendingLimits",
        type: "tuple",
      },
    ],
    name: "setMaxSpendingLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "spenders",
    outputs: [
      {
        internalType: "bool",
        name: "isSpenderExist",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxTotalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPercentPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeBetweenTransfers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeframeDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountDuringTimeframe",
            type: "uint256",
          },
        ],
        internalType: "struct ITreasuryStorage.SpendingLimits",
        name: "limits",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "lastWithdrawalTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawnDuringTimeframe",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testUpgrade",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "transferFromTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608080604052346100c1576000549060ff8260081c1661006f575060ff80821603610034575b60405161132190816100c78239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe6080604081815260049182361015610022575b505050361561002057600080fd5b005b600092833560e01c91826301ffc9a714610f7e575081633f4ba83a14610e6e5781633fa4f24514610e4f5781635524107714610e355781635be3ca3814610c2f5781635c975abb14610c0b578163697aed1a14610a1d57816376aaeb201461099b5781637b103999146109725781638456cb59146108815781639d6aed0b146107e0578163c4d66de8146105d7578163d3b247e4146101a357508063d6d14171146101855763dde343fd146100d75780610012565b34610181578060031936011261018157610120916100f3610fd1565b826100fc610fec565b9260018060a01b03809316815260c9602052209116600052602052806000209060ff8254169160a06101306001830161107b565b60086007840154930154938051951515865281516020870152602082015181870152810151606086015260608101516080860152608081015182860152015160c084015260e0830152610100820152f35b5080fd5b503461018157816003193601126101815760209060ca549051908152f35b919050346105d35760603660031901126105d35781356101c1610fec565b926001600160a01b03604435818116949192908581036105cf576101e36111c9565b60026065541461058c57600260655533885260209360c9855283892097169687895284528288208515158061057e575b80610563575b80610555575b15610545577399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e88149081156104bb5761025147600383015490611250565b87116104ab575b61026a6102648261116d565b4261122d565b6007820190610283825461027d8561116d565b9061122d565b03610481576008820180546102988a8261114a565b60068501541061047157906102b18a600195949361114a565b90555b429055016102c38782546111bc565b90551561039a57825167ffffffffffffffff9185820191838311818410176103855782888c94938580959481958b52525af1903d1561037f573d90811161036a5783519061031a601f8201601f1916870183611043565b815288853d92013e5b1561035c5750907f5e24750571ba267ec3e6fdb479a8d6aaf9e2a6ed458a6d8b5efc63e7125a0f40915b519283523392a4600160655580f35b905163c71509d160e01b8152fd5b604183634e487b7160e01b6000525260246000fd5b50610323565b604185634e487b7160e01b6000525260246000fd5b5073__$183737d697d7aa9b5df9988cbe11bc4947$__9087823b1561046e57606492845193848092636336129b60e11b82528b868301528a60248301528960448301525af4801561046457610414575b5050907f5e24750571ba267ec3e6fdb479a8d6aaf9e2a6ed458a6d8b5efc63e7125a0f409161034d565b67ffffffffffffffff829893981161045157508652947f5e24750571ba267ec3e6fdb479a8d6aaf9e2a6ed458a6d8b5efc63e7125a0f40386103ea565b634e487b7160e01b835260419052602482fd5b83513d8a823e3d90fd5b80fd5b8751634eb8a6e160e11b81528790fd5b6006820154881161049b57906001918860088301556102b4565b8551634eb8a6e160e11b81528590fd5b8451635f8550b160e11b81528490fd5b84516370a0823160e01b8152308582015286816024818d5afa801561053b578b90610508575b6104f19150600383015490611250565b871115610258578451633c14e2ed60e11b81528490fd5b508681813d8311610534575b61051e8183611043565b81010312610530576104f190516104e1565b8a80fd5b503d610514565b86513d8d823e3d90fd5b8351633fe65ba960e01b81528390fd5b50600181015486111561021f565b506105766007820154848301549061114a565b421015610219565b506002810154861115610213565b506020606492519162461bcd60e51b8352820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b8780fd5b8280fd5b919050346105d357602090816003193601126107dc576105f5610fd1565b84549360ff8560081c1615918280936107cf575b80156107b8575b1561075e5760ff198681166001178855958361074d575b5083516301ffc9a760e01b8152637965db0b60e01b818401526001600160a01b039190911691908581602481865afa908115610743578891610716575b501561070857506bffffffffffffffffffffffff60a01b60cb54161760cb554260ca556106ca85549460ff8660081c169061069e826110ea565b6106a7826110ea565b60016065556106b5826110ea565b6106be826110ea565b603354166033556110ea565b6106d2578380f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989261ff00191684555160018152a13880808380f35b835163044aa57560e41b8152fd5b6107369150863d881161073c575b61072e8183611043565b8101906110d2565b38610664565b503d610724565b85513d8a823e3d90fd5b61ffff191661010117875538610627565b835162461bcd60e51b8152808301869052602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156106105750600160ff871614610610565b50600160ff871610610609565b8380fd5b9050346105d357826003193601126105d3578151908282019082821067ffffffffffffffff83111761086e57508252600a8152602090692a3932b0b9bab93cab1960b11b8282015282519382859384528251928382860152825b84811061085857505050828201840152601f01601f19168101030190f35b818101830151888201880152879550820161083a565b634e487b7160e01b855260419052602484fd5b9050346105d357826003193601126105d35760cb548251632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb8382015233602482015290602090829060449082906001600160a01b03165afa908115610965578491610947575b5015610939575060207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916109246111c9565b600160ff19603354161760335551338152a180f35b905163036be76f60e61b8152fd5b61095f915060203d811161073c5761072e8183611043565b386108f1565b50505051903d90823e3d90fd5b50503461018157816003193601126101815760cb5490516001600160a01b039091168152602090f35b82843461046e578160031936011261046e57816109e6916109ba610fd1565b6109c2610fec565b6001600160a01b03918216835260c96020908152848420929091168352522061116d565b91825115610a0f57508082015160209283015160600151610a069161114a565b90519042118152f35b9051631d155e5b60e11b8152fd5b9050346105d357610a2d36611002565b9160018060a09693961b03938460cb541683518091632474521560e21b8252898483015233602483015281604460209485935afa908115610c01578991610be4575b5015610bd55784359283151580610bc9575b80610bbd575b80610ba9575b80610b9c575b80610b8f575b15610b7f5792610b6e9492600792887f1d31acb9e47221445ed64ea1c635885c920508b65e8f6d687c24d33051072ff698961698898c5260c98252858c209a16998a8c528152848b2092600160ff19855416178455600184015585013560028301558385013560038301556060850135908201556080840135600582015560a0840135600682015501805415610b74575b50519182918291909160a08060c083019480358452602081013560208501526040810135604085015260608101356060850152608081013560808501520135910152565b0390a380f35b60ca54905538610b2a565b845163c1adf75560e01b81528390fd5b5060808601351515610a99565b5060a08601351515610a93565b50670de0b6b3a76400008587013510610a8d565b50848601351515610a87565b50818601351515610a81565b50825163036be76f60e61b8152fd5b610bfb9150823d841161073c5761072e8183611043565b38610a6f565b85513d8b823e3d90fd5b50503461018157816003193601126101815760209060ff6033541690519015158152f35b9050346105d357610c3f36611002565b60cb548551632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d88187015233602482015292956001600160a01b039592949093602093928490829060449082908b165afa908115610c01578991610e18575b5015610bd55785169485885260c9835283882096169586885282528287209160018301610cd38161107b565b9060ff85541615610e085786359180518311159081610df7575b81610de6575b81610dd2575b81610dbe575b81610dab575b5015610d9c575584013560028301558383013560038301556060808501359183018290556080808601356005850181905560a080880135600690960186905595518735815260208089013590820152604097880135978101979097529186019290925290840152908201527f1d31acb9e47221445ed64ea1c635885c920508b65e8f6d687c24d33051072ff6908060c08101610b6e565b855162ef52a760e51b81528490fd5b60a09150015160a0880135111538610d05565b905060808101516080890135101590610cff565b905060608101516060890135101590610cf9565b878101518989013511159150610cf3565b848101518986013511159150610ced565b8551631d155e5b60e11b81528490fd5b610e2f9150843d861161073c5761072e8183611043565b38610ca7565b839034610181576020366003190112610181573560cc5580f35b50503461018157816003193601126101815760209060cc549051908152f35b9050346105d357826003193601126105d35760cb548251632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d88382015233602482015290602090829060449082906001600160a01b03165afa908115610965578491610f60575b5015610939576033549060ff821615610f26575060ff1916603355513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b610f78915060203d811161073c5761072e8183611043565b38610ede565b8491346105d35760203660031901126105d3573563ffffffff60e01b81168091036105d357602092506329abf30760e11b8114908115610fc0575b5015158152f35b6301ffc9a760e01b14905083610fb9565b600435906001600160a01b0382168203610fe757565b600080fd5b602435906001600160a01b0382168203610fe757565b610100600319820112610fe7576001600160a01b03916004358381168103610fe757926024359081168103610fe75760c090926043190112610fe757604490565b90601f8019910116810190811067ffffffffffffffff82111761106557604052565b634e487b7160e01b600052604160045260246000fd5b9060405160c0810181811067ffffffffffffffff8211176110655760405260a06005829480548452600181015460208501526002810154604085015260038101546060850152600481015460808501520154910152565b90816020910312610fe757518015158103610fe75790565b156110f157565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b9190820180921161115757565b634e487b7160e01b600052601160045260246000fd5b906040516080810181811067ffffffffffffffff8211176110655760405260606008829460ff815416151584526111a66001820161107b565b6020850152600781015460408501520154910152565b9190820391821161115757565b60ff603354166111d557565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b8115611217570490565b634e487b7160e01b600052601260045260246000fd5b906080602061124261124d9460ca54906111bc565b92015101519061120d565b90565b9060009181159182156112b0575b50501561129e576706f05b59d3b2000081019081811161115757811061128c57670de0b6b3a7640000900490565b604051630a77254f60e01b8152600490fd5b604051631550e8b760e01b8152600490fd5b818192935002928284048214831517156112d757506112cf908361120d565b14388061125e565b634e487b7160e01b81526011600452602490fdfea2646970667358221220c7ee29acb595d16ca9c6526bb19f111e4273de8cddfd8e6277948742159cbe3264736f6c63430008120033";

type TreasuryV2ConstructorParams =
  | [linkLibraryAddresses: TreasuryV2LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasuryV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TreasuryV2__factory extends ContractFactory {
  constructor(...args: TreasuryV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        TreasuryV2__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: TreasuryV2LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$183737d697d7aa9b5df9988cbe11bc4947\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TreasuryV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TreasuryV2__factory {
    return super.connect(runner) as TreasuryV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryV2Interface {
    return new Interface(_abi) as TreasuryV2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): TreasuryV2 {
    return new Contract(address, _abi, runner) as unknown as TreasuryV2;
  }
}

export interface TreasuryV2LibraryAddresses {
  ["contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"]: string;
}
