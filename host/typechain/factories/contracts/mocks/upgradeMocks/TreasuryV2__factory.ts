/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TreasuryV2,
  TreasuryV2Interface,
} from "../../../../contracts/mocks/upgradeMocks/TreasuryV2";

const _abi = [
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxTotalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPercentPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeBetweenTransfers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeframeDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountDuringTimeframe",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct ITreasuryStorage.SpendingLimits",
        name: "newSpendingLimits",
        type: "tuple",
      },
    ],
    name: "MaxSpendingLimitChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferFromTreasury",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "canTransferByTime",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxTotalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPercentPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeBetweenTransfers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeframeDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountDuringTimeframe",
            type: "uint256",
          },
        ],
        internalType: "struct ITreasuryStorage.SpendingLimits",
        name: "_newSpendingLimits",
        type: "tuple",
      },
    ],
    name: "decreaseLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxTotalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPercentPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeBetweenTransfers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeframeDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountDuringTimeframe",
            type: "uint256",
          },
        ],
        internalType: "struct ITreasuryStorage.SpendingLimits",
        name: "_newSpendingLimits",
        type: "tuple",
      },
    ],
    name: "setMaxSpendingLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "spenders",
    outputs: [
      {
        internalType: "bool",
        name: "isSpenderExist",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxTotalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPercentPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeBetweenTransfers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeframeDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountDuringTimeframe",
            type: "uint256",
          },
        ],
        internalType: "struct ITreasuryStorage.SpendingLimits",
        name: "limits",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "lastWithdrawalTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawnDuringTimeframe",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testUpgrade",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "transferFromTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080806040523460bd576000549060ff8260081c16606b575060ff808216036031575b6040516112b390816100c38239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a1386022565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c90816301ffc9a714610f19575080633f4ba83a14610e075780633fa4f24514610de95780635524107714610dce5780635be3ca3814610bba5780635c975abb14610b97578063697aed1a146109a657806376aaeb201461091f5780637b103999146108f65780638456cb59146108015780639d6aed0b14610782578063c4d66de814610578578063d3b247e4146101a2578063d6d14171146101845763dde343fd0361000f573461018157604036600319011261018157604061012091816100eb610f76565b916100f4610f91565b6001600160a01b03938416825260c96020908152929091209216600090815291905220805460ff169061012960018201611025565b9060a06008600783015492015492604051941515855280516020860152602081015160408601526040810151606086015260608101516080860152608081015182860152015160c084015260e0830152610100820152f35b80fd5b5034610181578060031936011261018157602060ca54604051908152f35b5034610181576060366003190112610181576004356101bf610f91565b906044356001600160a01b0381169190828103610574576101de611173565b60026065541461052f57600260655533855260c9602090815260408087206001600160a01b038716885290915285209382151580610521575b80610505575b806104f7575b156104e5576001600160a01b0316937399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e85149081156104505761025f476003830154906111d7565b841161043e575b61027861027282611094565b4261125a565b906007810191610292835461028c84611094565b9061125a565b036104255760088101918254926102a987856110e3565b600684015410610413576102bf876001956110e3565b90555b429055016102d1848254611106565b90551561039d5784806020926040516102ea8582610fed565b8281528585820191601f19870136843751925af1903d15610397573d9067ffffffffffffffff82116103835760405191879190610330601f8201601f1916830185610fed565b83523d92013e5b15610371575b6040519081527f5e24750571ba267ec3e6fdb479a8d6aaf9e2a6ed458a6d8b5efc63e7125a0f4060203392a4600160655580f35b60405163c71509d160e01b8152600490fd5b634e487b7160e01b87526041600452602487fd5b50610337565b5073__$183737d697d7aa9b5df9988cbe11bc4947$__84813b156101815760649160405192838092636336129b60e11b82528860048301528760248301528660448301525af48015610408576103f4575b5061033d565b8461040191959295610fed565b92386103ee565b6040513d87823e3d90fd5b604051634eb8a6e160e11b8152600490fd5b60068101548511610413576001918560088301556102c2565b604051635f8550b160e11b8152600490fd5b6040516370a0823160e01b81523060048201526020816024818a5afa80156104da5788906104a2575b61048991506003830154906111d7565b84111561026657604051633c14e2ed60e11b8152600490fd5b506020813d6020116104d2575b816104bc60209383610fed565b810103126104ce576104899051610479565b8780fd5b3d91506104af565b6040513d8a823e3d90fd5b604051633fe65ba960e01b8152600490fd5b506001850154831115610223565b5061051960078601546004870154906110e3565b42101561021d565b506002850154831115610217565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b8480fd5b503461018157602036600319011261018157610592610f76565b81549060ff8260081c161591828093610775575b801561075e575b156107025760ff1981166001178455826106f1575b506040516301ffc9a760e01b8152637965db0b60e01b60048201526001600160a01b039190911690602081602481855afa9081156106e65784916106b7575b50156106a5576bffffffffffffffffffffffff60a01b60cb54161760cb554260ca5581549061066860ff8360081c1661063981611113565b61064281611113565b600160655561065081611113565b61065981611113565b60ff1960335416603355611113565b610670575080f35b61ff00191681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b60405163044aa57560e41b8152600490fd5b6106d9915060203d6020116106df575b6106d18183610fed565b81019061107c565b38610601565b503d6106c7565b6040513d86823e3d90fd5b61ffff1916610101178355386105c2565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156105ad5750600160ff8216146105ad565b50600160ff8216106105a6565b503461018157806003193601126101815760408051916107a28284610fed565b600a8352692a3932b0b9bab93cab1960b11b6020840152815192839160208352815191826020850152815b8381106107ea575050828201840152601f01601f19168101030190f35b6020828201810151888301880152879550016107cd565b503461018157806003193601126101815760cb54604051632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb600482015233602482015290602090829060449082906001600160a01b03165afa9081156108eb5782916108cc575b50156108ba57610880611173565b600160ff1960335416176033557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b60405163036be76f60e61b8152600490fd5b6108e5915060203d6020116106df576106d18183610fed565b38610872565b6040513d84823e3d90fd5b503461018157806003193601126101815760cb546040516001600160a01b039091168152602090f35b503461018157604036600319011261018157604061096b9161093f610f76565b610947610f91565b6001600160a01b03918216835260c960209081528484209290911683525220611094565b8051156109945760408101516020918201516060015161098a916110e3565b6040519042118152f35b604051631d155e5b60e11b8152600490fd5b5034610181576109b536610fa7565b91906044602060018060a01b0360cb541660405192838092632474521560e21b82528960048301523360248301525afa908115610408578591610b78575b50156108ba5782359182151580610b6b575b80610b5e575b80610b49575b80610b3c575b80610b2f575b15610b1d577f1d31acb9e47221445ed64ea1c635885c920508b65e8f6d687c24d33051072ff6916007610b0c9260018060a01b03169485885260c96020526040882060018060a01b03841689526020526040882090600160ff1983541617825560018201556020870135600282015560408701356003820155606087013560048201556080870135600582015560a0870135600682015501805415610b12575b5060405191829160018060a01b0316958291909160a08060c083019480358452602081013560208501526040810135604085015260608101356060850152608081013560808501520135910152565b0390a380f35b60ca54905538610abd565b60405163c1adf75560e01b8152600490fd5b5060808401351515610a1d565b5060a08401351515610a17565b50670de0b6b3a7640000604085013510610a11565b5060408401351515610a0b565b5060208401351515610a05565b610b91915060203d6020116106df576106d18183610fed565b386109f3565b5034610181578060031936011261018157602060ff603354166040519015158152f35b503461018157610bc936610fa7565b60cb54604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8600482015233602482015291939190602090829060449082906001600160a01b03165afa908115610408578591610daf575b50156108ba576001600160a01b0390811680855260c960209081526040808720938516875292905290842090916001820190610c6782611025565b9260ff815416156109945785359380518511159081610d9b575b81610d87575b81610d73575b81610d5f575b81610d4c575b5015610d3b57929091556020848101356002840181905560408087013560038601819055606080890135600488018190556080808b013560058a0181905560a0808d01356006909b018b905586519c358d52978c0196909652938a01929092528801528601528401919091526001600160a01b0316917f1d31acb9e47221445ed64ea1c635885c920508b65e8f6d687c24d33051072ff6908060c08101610b0c565b60405162ef52a760e51b8152600490fd5b60a09150015160a0870135111538610c99565b905060808101516080880135101590610c93565b905060608101516060880135101590610c8d565b905060408101516040880135111590610c87565b905060208101516020880135111590610c81565b610dc8915060203d6020116106df576106d18183610fed565b38610c2c565b50346101815760203660031901126101815760043560cc5580f35b5034610181578060031936011261018157602060cc54604051908152f35b503461018157806003193601126101815760cb54604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8600482015233602482015290602090829060449082906001600160a01b03165afa9081156108eb578291610efa575b50156108ba5760335460ff811615610ebe5760ff19166033557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b610f13915060203d6020116106df576106d18183610fed565b38610e78565b905034610f72576020366003190112610f725760043563ffffffff60e01b8116809103610f6e57602092506329abf30760e11b8114908115610f5d575b5015158152f35b6301ffc9a760e01b14905038610f56565b8280fd5b5080fd5b600435906001600160a01b0382168203610f8c57565b600080fd5b602435906001600160a01b0382168203610f8c57565b610100600319820112610f8c576004356001600160a01b0381168103610f8c57916024356001600160a01b0381168103610f8c5760c090926043190112610f8c57604490565b90601f8019910116810190811067ffffffffffffffff82111761100f57604052565b634e487b7160e01b600052604160045260246000fd5b9060405160c0810181811067ffffffffffffffff82111761100f5760405260a06005829480548452600181015460208501526002810154604085015260038101546060850152600481015460808501520154910152565b90816020910312610f8c57518015158103610f8c5790565b906040516080810181811067ffffffffffffffff82111761100f5760405260606008829460ff815416151584526110cd60018201611025565b6020850152600781015460408501520154910152565b919082018092116110f057565b634e487b7160e01b600052601160045260246000fd5b919082039182116110f057565b1561111a57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b60ff6033541661117f57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b81156111c1570490565b634e487b7160e01b600052601260045260246000fd5b6000918015918215611234575b505015611223576706f05b59d3b200008101908181116110f057811061121257670de0b6b3a7640000900490565b630a77254f60e01b60005260046000fd5b631550e8b760e01b60005260046000fd5b808202935091508115828404821417156110f05761125290836111b7565b1438806111e4565b906080602061126f61127a9460ca5490611106565b9201510151906111b7565b9056fea26469706673582212209af8504e3f8f45aaae1e8454c740e830a0df4e02c8ebe8a1eb75d0705de7330264736f6c634300081a0033";

type TreasuryV2ConstructorParams =
  | [linkLibraryAddresses: TreasuryV2LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasuryV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TreasuryV2__factory extends ContractFactory {
  constructor(...args: TreasuryV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        TreasuryV2__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: TreasuryV2LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$183737d697d7aa9b5df9988cbe11bc4947\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TreasuryV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TreasuryV2__factory {
    return super.connect(runner) as TreasuryV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryV2Interface {
    return new Interface(_abi) as TreasuryV2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): TreasuryV2 {
    return new Contract(address, _abi, runner) as unknown as TreasuryV2;
  }
}

export interface TreasuryV2LibraryAddresses {
  ["contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"]: string;
}
