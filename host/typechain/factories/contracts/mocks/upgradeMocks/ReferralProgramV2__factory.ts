/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ReferralProgramV2,
  ReferralProgramV2Interface,
} from "../../../../contracts/mocks/upgradeMocks/ReferralProgramV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "parent",
        type: "address",
      },
    ],
    name: "RegisteredUser",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "SetReferralByAdmin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "SetReferrerByAdmin",
    type: "event",
  },
  {
    inputs: [],
    name: "MAGIC_MESSAGE",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referrer",
        type: "address",
      },
    ],
    name: "getReferralsOf",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referrer",
        type: "address",
      },
    ],
    name: "getReferralsOfLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReferrers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "referralsOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "referrerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "referrers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_sig",
        type: "bytes",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "referrals",
            type: "address[]",
          },
        ],
        internalType: "struct IReferralProgramStorage.ReferralProgramUnit[]",
        name: "referralProgramUnits",
        type: "tuple[]",
      },
    ],
    name: "setReferrals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testUpgrade",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460bd576000549060ff8260081c16606b575060ff808216036031575b6040516111cf90816100c38239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a1386022565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806301c7224f14610d0757806301ffc9a714610cb15780632f0ae3be14610c775780633fa4f24514610c595780634b02c017146108ea57806355241077146108d1578063552f7925146108a15780635fb4f8b41461083e5780637b1039991461081557806382fbdc9c146104925780638f6a98e5146104125780639d6aed0b146103bf578063c4d66de814610198578063d21cacdf146101565763f743d89c146100c157600080fd5b34610151576020366003190112610151576001600160a01b036100e2610db1565b166000526035602052604060002060405190816020825491828152019160005260206000209060005b8181106101325761012e8561012281870382610dc7565b60405191829182610e8e565b0390f35b82546001600160a01b031684526020909301926001928301920161010b565b600080fd5b34610151576020366003190112610151576001600160a01b03610177610db1565b166000526034602052602060018060a01b0360406000205416604051908152f35b34610151576020366003190112610151576101b1610db1565b6000549060ff8260081c1615918280936103b2575b801561039b575b1561033f5760ff1981166001176000558261032d575b506040516301ffc9a760e01b8152637965db0b60e01b60048201526001600160a01b039190911690602081602481855afa908115610321576000916102f2575b50156102e0576001600160601b0360a01b60335416176033556000549060ff8260081c16156102875761025257005b61ff0019166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b60405163044aa57560e41b8152600490fd5b610314915060203d60201161031a575b61030c8183610dc7565b810190610ed1565b83610223565b503d610302565b6040513d6000823e3d90fd5b61ffff191661010117600055826101e3565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156101cd5750600160ff8216146101cd565b50600160ff8216106101c6565b346101515760003660031901126101515761012e60408051906103e28183610dc7565b60118252702932b332b93930b6283937b3b930b6ab1960791b602083015251918291602083526020830190610e69565b346101515760003660031901126101515760405180602060365491828152019060366000527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b89060005b8181106104735761012e8561012281870382610dc7565b82546001600160a01b031684526020909301926001928301920161045c565b346101515760203660031901126101515760043567ffffffffffffffff811161015157366023820112156101515780600401359067ffffffffffffffff821161015157366024838301011161015157336000908152603460205260409020546001600160a01b031615806107fc575b156107ea5761050e610e1b565b90815192839160009272184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8610156107c7575b806d04ee2d6d415b85acef8100000000600a9210156107ac575b662386f26fc10000811015610798575b6305f5e100811015610787575b612710811015610778575b606481101561076a575b1015610760575b6001830194600a60216105b461059e89610dff565b986105ac6040519a8b610dc7565b808a52610dff565b602089019690601f19013688378801015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a8353049081156105f457600a906105c5565b50506024946106a49461066861069c95603a60405193849261064360208501977f19457468657265756d205369676e6564204d6573736167653a0a000000000000895251809285870190610e46565b83016106588251809360208685019101610e46565b010103601f198101835282610dc7565b51902090602061067784610dff565b936106856040519586610dc7565b808552806000988994018387013784010152610fc7565b919091610fff565b6001600160a01b0381169033821461074e57818352603760205260ff60408420541615610728575b50338252603460205260408220816001600160601b0360a01b82541617905580825260356020526107003360408420610faa565b337fefca3fdd715e739f1e080ddc77892fc7ccce29dc771f8b664f46554d69efda4c8380a380f35b818352603760205260408320805460ff1916600117905561074890610f65565b826106cc565b60405163636e39bb60e01b8152600490fd5b9160010191610589565b606460029104940193610582565b61271060049104940193610578565b6305f5e1006008910494019361056d565b662386f26fc1000060109104940193610560565b6d04ee2d6d415b85acef810000000060209104940193610550565b506040925072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8504610536565b6040516357799e4160e11b8152600490fd5b5033600052603760205260ff6040600020541615610501565b34610151576000366003190112610151576033546040516001600160a01b039091168152602090f35b3461015157604036600319011261015157610857610db1565b6001600160a01b03166000908152603560205260409020805460243591908210156101515760209161088891610d83565b905460405160039290921b1c6001600160a01b03168152f35b346101515760003660031901126101515761012e6108bd610e1b565b604051918291602083526020830190610e69565b3461015157602036600319011261015157600435603855005b346101515760203660031901126101515760043567ffffffffffffffff811161015157366023820112156101515780600401359067ffffffffffffffff8211610151576024810190602436918460051b01011161015157603354604051632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b63600482015233602482015290602090829060449082906001600160a01b03165afa90811561032157600091610c3a575b5015610c285760005b8281106109b457005b6109cc6109c2828585610ee9565b6020810190610f0b565b9050610ac1575b6001906001600160a01b036109f16109ec838787610ee9565b610f51565b16600052603760205260ff604060002054161580610a96575b610a15575b016109ab565b818060a01b03610a296109ec838787610ee9565b16600052603760205260406000208260ff19825416179055610a57610a526109ec838787610ee9565b610f65565b818060a01b03610a6b6109ec838787610ee9565b167fbfb9522d943541239ac4c4e0128e95a98f1fd3682b2a597ee1da3a62f0ea94d3600080a2610a0f565b50818060a01b03610aab6109ec838787610ee9565b1660005260356020526040600020541515610a0a565b91906000925b610ad56109c2828585610ee9565b9050841015610c1f576001848195610b066109ec610af76109c2878a8a610ee9565b868060a09693961b0394610f41565b166000526034602052818060a01b036040600020541615610b2a575b019350610ac7565b818060a01b03610b3e6109ec858888610ee9565b166000526035602052610b706040600020610b6a6109ec84610b646109c2898c8c610ee9565b90610f41565b90610faa565b610b7e6109ec848787610ee9565b81610ba26109ec610b936109c2888b8b610ee9565b878060a09693961b0394610f41565b166000526034602052604060002090838060a01b03166001600160601b0360a01b825416179055610bd76109ec848787610ee9565b81610bec6109ec610b936109c2888b8b610ee9565b1690838060a01b03167f9b2b789e1f5ce0bc7ab2b2d2d787af0f1638d8bd218759d6abdb1f5ef10f932d600080a3610b22565b919250906109d3565b60405163036be76f60e61b8152600490fd5b610c53915060203d60201161031a5761030c8183610dc7565b836109a2565b34610151576000366003190112610151576020603854604051908152f35b34610151576020366003190112610151576001600160a01b03610c98610db1565b1660005260356020526020604060002054604051908152f35b346101515760203660031901126101515760043563ffffffff60e01b8116809103610151576020906301ffc9a760e01b8114908115610cf6575b506040519015158152f35b63168334a960e21b14905082610ceb565b346101515760203660031901126101515760043560365481101561015157600090603654811015610d6f5760369091527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b801546040516001600160a01b039091168152602090f35b634e487b7160e01b82526032600452602482fd5b8054821015610d9b5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b600435906001600160a01b038216820361015157565b90601f8019910116810190811067ffffffffffffffff821117610de957604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff8111610de957601f01601f191660200190565b60405190610e2a604083610dc7565b600d82526c526566657272616c206c696e6b60981b6020830152565b60005b838110610e595750506000910152565b8181015183820152602001610e49565b90602091610e8281518092818552858086019101610e46565b601f01601f1916010190565b602060408183019282815284518094520192019060005b818110610eb25750505090565b82516001600160a01b0316845260209384019390920191600101610ea5565b90816020910312610151575180151581036101515790565b9190811015610d9b5760051b81013590603e1981360301821215610151570190565b903590601e1981360301821215610151570180359067ffffffffffffffff821161015157602001918160051b3603831361015157565b9190811015610d9b5760051b0190565b356001600160a01b03811681036101515790565b603654600160401b811015610de957806001610f8692016036556036610d83565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b8054600160401b811015610de957610f8691600182018155610d83565b906041815114600014610ff557610ff1916020820151906060604084015193015160001a90611119565b9091565b5050600090600290565b600581101561110357806110105750565b6001810361105d5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b600281036110aa5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b6003146110b357565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161118d5760209360009360ff60809460405194855216868401526040830152606082015282805260015afa15610321576000516001600160a01b038116156111845790600090565b50600090600190565b5050505060009060039056fea26469706673582212200c6e89f11bfc32d5da14ac8afbad604567d2eb01082722fcab21fb00c806377b64736f6c634300081a0033";

type ReferralProgramV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReferralProgramV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReferralProgramV2__factory extends ContractFactory {
  constructor(...args: ReferralProgramV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ReferralProgramV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ReferralProgramV2__factory {
    return super.connect(runner) as ReferralProgramV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReferralProgramV2Interface {
    return new Interface(_abi) as ReferralProgramV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ReferralProgramV2 {
    return new Contract(address, _abi, runner) as unknown as ReferralProgramV2;
  }
}
