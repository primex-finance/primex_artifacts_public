/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  InterestIncreaserV2,
  InterestIncreaserV2Interface,
} from "../../../../contracts/mocks/upgradeMocks/InterestIncreaserV2";

const _abi = [
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nftId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tier",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_bucket",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "activateBonus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bucketBonusCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nftId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bucket",
        type: "address",
      },
    ],
    name: "deactivateBonus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftId",
        type: "uint256",
      },
    ],
    name: "getAccumulatedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftId",
        type: "uint256",
      },
    ],
    name: "getAvailableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftId",
        type: "uint256",
      },
    ],
    name: "getBonus",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nftId",
            type: "uint256",
          },
          {
            internalType: "contract IBucketV3",
            name: "bucket",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "percent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "accumulatedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdatedIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IFeeExecutorStorage.ActivatedBonus",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "indexes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPMXBonusNFT",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_primexDNS",
        type: "address",
      },
      {
        internalType: "contract IWhiteBlackList",
        name: "_whiteBlackList",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nft",
    outputs: [
      {
        internalType: "contract IPMXBonusNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "primexDNS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bucket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxCount",
        type: "uint256",
      },
    ],
    name: "setMaxBonusCount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bucket",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_tiers",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "percent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
        ],
        internalType: "struct IFeeExecutorStorage.NFTBonusParams[]",
        name: "_bonuses",
        type: "tuple[]",
      },
    ],
    name: "setTierBonus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testUpgrade",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tierBonus",
    outputs: [
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nftId",
        type: "uint256",
      },
    ],
    name: "updateBonus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_oldScaledBalance",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_bucket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_currentIndex",
        type: "uint256",
      },
    ],
    name: "updateBonus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_users",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_oldBalances",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "_bucket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_currentIndex",
        type: "uint256",
      },
    ],
    name: "updateBonuses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "updatedTimestamps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100c1576000549060ff8260081c1661006f575060ff80821603610034575b6040516129bb90816100c78239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561001357600080fd5b60009060e08235811c91826301ffc9a714611b4c57508163171a8964146119fb578163227a87dd146119b757816332353ae8146119015781633ce917ab146116ec5781633f4a2d27146116c35781633f4ba83a146115b25781633fa4f24514611593578163442b4a26146114e85781634485b5011461145257816347ccca0214611429578163552410771461140d5781635c975abb146113ea5781636f7ee4da146113a75781637b1039991461137e5781638004298e1461134e5781638456cb59146112775781639d6aed0b146111f85781639f8dbb7b14610f7b578163a13a944b14610f24578163bd6846aa14610d72578163c349026314610678578163c4ee936614610643578163ced3f029146105e6578163ec1dfe7114610458575063f8c8765e1461014157600080fd5b34610455576080366003190112610455576004356001600160a01b038181169182900361045157610170611c57565b610178611c26565b9060643583811680910361044d57855460ff91828260081c161594858096610441575b801561042b575b156103cf5760ff198381166001178a5592866103be575b50885497848960081c16946101cd86611e8c565b886001600160601b0360a01b9316838254161790556101eb85611e8c565b6040516301ffc9a760e01b808252633694124d60e21b600483015260209991908a82602481875afa918215610394578d9261039f575b5081610342575b816102d8575b50156102c65761028796168260ca54161760ca558160c954161760c95560cc54161760cc5561025c82611e8c565b61026582611e8c565b6001805561027282611e8c565b61027b82611e8c565b60655416606555611e8c565b61028f578280f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989161ff001916835560405160018152a138808280f35b60405163044aa57560e41b8152600490fd5b604051908152633df6cef760e01b600482015290508981602481885afa908115610337578c9161030a575b503861022e565b61032a91508a3d8c11610330575b6103228183611bec565b810190611ce3565b38610303565b503d610318565b6040513d8e823e3d90fd5b604051818152637965db0b60e01b60048201529091508a816024818c87165afa908115610394578d91610377575b5090610228565b61038e91508b3d8d11610330576103228183611bec565b38610370565b6040513d8f823e3d90fd5b6103b79192508b3d8d11610330576103228183611bec565b9038610221565b61ffff1916610101178955386101b9565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156101a257506001848416146101a2565b5060018484161061019b565b8580fd5b8280fd5b80fd5b9050346105e25760403660031901126105e257610473611c41565b9060243591838260405161048681611bb9565b8281528260208201528260408201528260608201528260808201528260a08201528260c0820152015260018060a01b038082168552610103602052604085206024868360c95416604051928380926341f63bfd60e01b82528a60048301525afa9081156105d7579083918861010099926105b4575b50505116600052602052604060002060405194859261051984611bb9565b82548452806001840154169060208501918252600284015490604086019182526003850154926060870193845261057f60048701549560808901968752600760058901549860a08b01998a5260c060068201549b019a8b520154998b8d019a8b5261268f565b855260405199518a52511660208901525160408801525160608701525160808601525160a08501525160c08401525190820152f35b6105d092503d8091833e6105c88183611bec565b810190611df1565b38806104fb565b6040513d89823e3d90fd5b5080fd5b8234610455576040366003190112610455576060906040906001600160a01b0361060e611c41565b168152610100602052818120602435825260205220805490600260018201549101549060405192835260208301526040820152f35b823461045557608036600319011261045557610675610660611c41565b610668611c26565b606435916024359061240c565b80f35b9050346105e25760403660031901126105e25760243590600260015414610d2d5760026001556106a6611cfb565b60cc54604051630723eb0360e51b815233600482015290602090829060249082906001600160a01b03165afa908115610aab578491610d0e575b50610cfc5760043515610cea573383526101036020526040832060248460018060a01b0360c95416604051928380926341f63bfd60e01b82528860048301525afa908115610c1e578591610cd0575b50516001600160a01b03168452602052604080842090519261075084611bb9565b815480855260018301546001600160a01b031660208601819052600284015460408701526003840154606087015260048401546080870152600584015460a0870152600684015460c0870152600790930154848601529115159182610cc6575b505015610cb45760208281015160405163220f1ac960e21b81529190829060049082906001600160a01b03165afa908115610aab578491610c7e575b5060208301518190610807906001600160a01b031682611ef9565b6108108461231d565b610b3c575b5050608082015181830151809111610975575b506108328261231d565b1580610965575b156108da57503382526101036020526040822060018060a01b03602083015116600052602052610897604060002060076000918281558260018201558260028201558260038201558260048201558260058201558260068201550155565b6020908101516001600160a01b0316825260cb905260408120805480156108c6576000190190555b6001805580f35b634e487b7160e01b83526011600452602483fd5b6007903384526101036020526040842060018060a01b03602085015116600052602052604060002092805184556001840160018060a01b036020830151166001600160601b0360a01b82541617905560408101516002850155606081015160038501556080810151600485015560a0810151600585015560c0810151600685015501519101556108bf565b5080820151608083015114610839565b6109829060043590611eec565b6080830151809111600014610b33578282015161099e91611e7f565b6109ab8183850151611eec565b8383015260208084015160405163669949ef60e11b815286929091829060049082906001600160a01b03165afa8015610b28578290610ae5575b60208601516040516306fdde0360e01b815292508390839060049082906001600160a01b03165afa918215610ada578392610ab6575b506001600160a01b0381163b1561045157610a559183604051809681958294632581e14f60e21b8452606060048501526064840190611c90565b336024840152604483019190915203926001600160a01b03165af18015610aab57156108285767ffffffffffffffff8194929411610a97576040529138610828565b634e487b7160e01b82526041600452602482fd5b6040513d86823e3d90fd5b610ad39192503d8085833e610acb8183611bec565b8101906123e6565b9038610a1b565b6040513d85823e3d90fd5b506020813d602011610b20575b81610aff60209383611bec565b810103126105e257516001600160a01b03811681036105e2576004906109e5565b3d9150610af2565b6040513d84823e3d90fd5b5060043561099e565b60c084015190428210610c56575b505060a08301518111610b5e575b80610815565b6020838101516040516358a06f0760e01b81529190829060049082906001600160a01b03165afa908115610c1e576024916020918791610c29575b50604051630ed1279f60e11b815233600482015292839182906001600160a01b03165afa8015610c1e578590610be6575b610bd691508285612282565b608084015260a083015238610b58565b506020813d602011610c16575b81610c0060209383611bec565b81010312610c1257610bd69051610bca565b8480fd5b3d9150610bf3565b6040513d87823e3d90fd5b610c499150823d8411610c4f575b610c418183611bec565b810190612000565b38610b99565b503d610c37565b6020850151610c6f93506001600160a01b0316916120de565b60001960c08401523880610b4a565b90506020813d602011610cac575b81610c9960209383611bec565b81010312610ca85751386107ec565b8380fd5b3d9150610c8c565b604051633d77b3cb60e01b8152600490fd5b14905038806107b0565b610ce491503d8087833e6105c88183611bec565b3861072f565b604051633abe877f60e11b8152600490fd5b6040516333df015b60e01b8152600490fd5b610d27915060203d602011610330576103228183611bec565b386106e0565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b823461045557606036600319011261045557610d8c611c41565b60249067ffffffffffffffff8235818111610c125736602382011215610c125780600401359180831161044d57600592368682861b85010111610f2057604435828111610f1c5736602382011215610f1c578060040135928311610f1c578681019087369160608602010111610f1c5760ca54604051632474521560e21b8152600481018a90523389820152602096916001600160a01b03919088908290604490829086165afa908115610f11578b91610ef4575b5015610ee257848403610ed057929690921691885b878110610e61578980f35b610e6c818685611d64565b3515610ebe57808760026040808e8e610100610e8c610eb9998e8d611d64565b968c845252828220908d888b1b01013582528d522092803584558b81013560018501550135910155611d3f565b610e56565b604051637000f68560e11b8152600490fd5b604051632aa3c3bf60e11b8152600490fd5b60405163036be76f60e61b8152600490fd5b610f0b9150883d8a11610330576103228183611bec565b8b610e41565b6040513d8d823e3d90fd5b8780fd5b8680fd5b823461045557604036600319011261045557610f3e611c41565b6001600160a01b031681526101026020526040812080546024359290831015610455576020610f6d8484611cb5565b90546040519160031b1c8152f35b9050346105e257602090816003193601126104515760043591610f9c611cfb565b60cc54604051630723eb0360e51b81523360048201526001600160a01b03949183908290602490829089165afa9081156111785786916111db575b50610cfc573385526101038252604085206024868660c95416604051928380926341f63bfd60e01b82528760048301525afa80156105d757869188916111c1575b5051168652825260408520926040519161103183611bb9565b8454918284528660018701541690600786860197838952600281015460408801526003810154606088015260048101546080880152600581015460a0880152600681015460c0880152015490850152151591826111b7575b505015610cb457600482858551166040519283809263220f1ac960e21b82525afa9384156111785785918795611183575b5081816110cd6004948794511688611ef9565b5116604051928380926358a06f0760e01b82525afa8015611178578391879161115b575b50602460405180978193630ed1279f60e11b8352336004840152165afa918215610c1e578592611129575b506106759350339061201f565b90915083813d8311611154575b6111408183611bec565b81010312610ca8576106759251903861111c565b503d611136565b6111729150823d8411610c4f57610c418183611bec565b386110f1565b6040513d88823e3d90fd5b84809296508193503d83116111b0575b61119d8183611bec565b8101031261044d575192849060046110ba565b503d611193565b1490503880611089565b6111d591503d808a833e6105c88183611bec565b38611018565b6111f29150833d8511610330576103228183611bec565b38610fd7565b82346104555780600319360112610455576040516040810181811067ffffffffffffffff8211176112635761125f9250604052601381527224b73a32b932b9ba24b731b932b0b9b2b92b1960691b6020820152604051918291602083526020830190611c90565b0390f35b634e487b7160e01b83526041600452602483fd5b823461045557806003193601126104555760ca54604051632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb600482015233602482015290602090829060449082906001600160a01b03165afa908115610b28578291611330575b5015610ee2576112f6611cfb565b600160ff1960655416176065557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b611348915060203d8111610330576103228183611bec565b826112e8565b823461045557604036600319011261045557602061137661136d611c41565b6024359061268f565b604051908152f35b823461045557806003193601126104555760ca546040516001600160a01b039091168152602090f35b82346104555760203660031901126104555760409081906001600160a01b036113ce611c41565b16815260cb602052206001815491015482519182526020820152f35b8234610455578060031936011261045557602060ff606554166040519015158152f35b8234610455576020366003190112610455576004356101365580f35b823461045557806003193601126104555760c9546040516001600160a01b039091168152602090f35b82346104555760403660031901126104555761146c611c41565b611474611c57565b60c95490916001600160a01b0391821633036114d6578116835261010360205260408320911682526020526106756040822060076000918281558260018201558260028201558260038201558260048201558260058201558260068201550155565b604051632a4b45b760e11b8152600490fd5b823461045557604036600319011261045557611502611c41565b6001600160a01b038181168352610103602052604080842060c95491516341f63bfd60e01b8152602480356004830181905294929387918391829086165afa90811561117857866007946115709461137698979460409460209b91611579575b50511682528852209361268f565b91015490611e7f565b61158d91503d8086833e6105c88183611bec565b8b611562565b8234610455578060031936011261045557602061013654604051908152f35b823461045557806003193601126104555760ca54604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8600482015233602482015290602090829060449082906001600160a01b03165afa908115610b285782916116a5575b5015610ee25760655460ff8116156116695760ff19166065557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b6116bd915060203d8111610330576103228183611bec565b82611623565b823461045557806003193601126104555760ff546040516001600160a01b039091168152602090f35b9050346105e25760803660031901126105e257611707611c26565b906001600160a01b039060643582811690819003610c12578260c9541633036114d657611732611cfb565b80855260209261010384526040862094818116958688528552816001604089200154166118ef5760405163220f1ac960e21b81529085826004818a5afa9182156118e45788926118b3575b506117889082611ef9565b85875260cb855260408720958654600188015411156118a15780885261010086526040882060243589528652604088208054801561188f5760079660026001840154930154801515600014611887576117e19042611eec565b955b8b6040519a8b966117f388611bb9565b600435885281880194818652604089019687526060890197885260c060808a0199858b5260a081019b8c52019a8b528d019a838c52835261010382526040832092525260408c2099518a5560018a019151166001600160601b0360a01b825416179055516002880155516003870155516004860155516005850155516006840155519101556118828154611d3f565b905580f35b508a956117e3565b604051630efac93f60e31b8152600490fd5b604051632c539eb360e21b8152600490fd5b9091508581813d83116118dd575b6118cb8183611bec565b81010312610f1c57519061178861177d565b503d6118c1565b6040513d8a823e3d90fd5b60405163c1ccec5d60e01b8152600490fd5b82346104555760403660031901126104555761191b611c41565b60ca54604051632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b6360048201523360248201526001600160a01b0392916020908290604490829087165afa908115610aab578491611999575b5015610ee25716815260cb602052602435600160408320015580f35b6119b1915060203d8111610330576103228183611bec565b8461197d565b8234610455576040366003190112610455576020906040906001600160a01b036119df611c41565b1681526101018352818120602435825283522054604051908152f35b8234610455576080366003190112610455576004359067ffffffffffffffff8083116105e257366023840112156105e2578260040135611a3a81611c0e565b93611a486040519586611bec565b81855260209160248387019160051b8301019136831161044d57602401905b828210611b2d57505050602435918211610451573660238301121561045157816004013591611a9583611c0e565b92611aa36040519485611bec565b80845260248385019160051b8301019136831161044d57602401905b828210611b1e5750505050611ad2611c26565b9060643593835b8151811015611b1a57611b1590611b1087866001600160a01b03611afd8588611d74565b5116611b098589611d74565b519061240c565b611d3f565b611ad9565b8480f35b81358152908301908301611abf565b81356001600160a01b0381168103610f20578152908301908301611a67565b8390346105e25760203660031901126105e25760043563ffffffff60e01b811680910361045157602092506301ffc9a760e01b8114908115611ba8575b8115611b97575b5015158152f35b636c91bd0560e11b14905083611b90565b63cedc502360e01b81149150611b89565b610100810190811067ffffffffffffffff821117611bd657604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117611bd657604052565b67ffffffffffffffff8111611bd65760051b60200190565b604435906001600160a01b0382168203611c3c57565b600080fd5b600435906001600160a01b0382168203611c3c57565b602435906001600160a01b0382168203611c3c57565b60005b838110611c805750506000910152565b8181015183820152602001611c70565b90602091611ca981518092818552858086019101611c6d565b601f01601f1916010190565b8054821015611ccd5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90816020910312611c3c57518015158103611c3c5790565b60ff60655416611d0757565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b6000198114611d4e5760010190565b634e487b7160e01b600052601160045260246000fd5b9190811015611ccd576060020190565b8051821015611ccd5760209160051b010190565b51906001600160a01b0382168203611c3c57565b81601f82011215611c3c57805167ffffffffffffffff8111611bd65760405192611dd0601f8301601f191660200185611bec565b81845260208284010111611c3c57611dee9160208085019101611c6d565b90565b90602082820312611c3c57815167ffffffffffffffff92838211611c3c57019060a082820312611c3c576040519260a0840184811082821117611bd657604052611e3a83611d88565b84526020830151602085015260408301516040850152611e5c60608401611d88565b60608501526080830151908111611c3c57611e779201611d9c565b608082015290565b91908203918211611d4e57565b15611e9357565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b91908201809211611d4e57565b9060018060a01b0316600090808252610102806020526040832080548015918215611fa3575b5050611f2c575b50505050565b8183526020526040822080549068010000000000000000821015611f8f5781611f5e9160016040969594018155611cb5565b81549060031b9042821b91600019901b19161790558152610101602052818120428252602052205538808080611f26565b634e487b7160e01b84526041600452602484fd5b60001982019250908211611fec5790611fbb91611cb5565b90549060031b1c610e108101809111611fd8574210153880611f1f565b634e487b7160e01b84526011600452602484fd5b634e487b7160e01b85526011600452602485fd5b90816020910312611c3c57516001600160a01b0381168103611c3c5790565b929161202a8461231d565b6120345750505050565b60018060a01b03809216600052610103602052604060002060208501908382511660005260205260406000209260c086015191428310612090575b505050612080908360059495612282565b6004820155015538808080611f26565b9061209f9395915116916120de565b9283600019600684015560a08201511015611f2657929138808061206f565b81156120c8570490565b634e487b7160e01b600052601260045260246000fd5b6001600160a01b039092166000818152610102602081815260408084205490979695919492936000198083019392841161226e578392858352868852612126858c8520611cb5565b959054600396871b1c90818b11908115612265575b5061223e5750505b8282106121b9575b50611dee9798929161216a612180928660005287895285600020611cb5565b905490841b1c9585600052875283600020611cb5565b9054911b1c9382600052610101808252826000208560005282528260002054936000528152816000209085600052526000205490612363565b91828101818111611d4e578214612238576121d48183611eec565b60011c90856000528688526121ec828c600020611cb5565b905490861b1c808a101561220257505091612143565b9093925080891115612215575090612143565b975050505050905060009493945261010181528260002091600052526000205490565b9161214b565b9650969250509150611dee9697928252610101815282822090848352522054914292612363565b9050153861213b565b634e487b7160e01b82526011600452602482fd5b9161229190604084015161290f565b6706f05b59d3b20000810190818111611d4e57811061230b57670de0b6b3a76400006122c56122cc9360a086015190611e7f565b910461294c565b6060820180516122e457506080611dee920151611eec565b916080016122f3828251611eec565b8351116123005750505190565b611dee925051611eec565b604051630a77254f60e01b8152600490fd5b60608101518061234c575b5060c0015180612339575b50600190565b600019146123475738612333565b600090565b6080820151101561235d5738612328565b50600090565b929391612377816123778661237d95611e7f565b94611e7f565b906b033b2e3c9fd0803ce80000009384810294818604811482151715611d4e578504036123d4576123b18260011c85611eec565b93841061230b576123c86123ce92611dee956120be565b9061294c565b90611eec565b604051631550e8b760e01b8152600490fd5b90602082820312611c3c57815167ffffffffffffffff8111611c3c57611dee9201611d9c565b9392919360ff606554166126885760018060a01b038082169060008281526101039160209383855260409384842091838c1692838652875283600187872001541615612534578452855283832090835284526004838320948085519661247188611bb9565b805488526007856001830154169182848b01526002810154898b0152600381015460608b01528581015460808b0152600581015460a08b0152600681015460c08b0152015460e08901528651938480926358a06f0760e01b82525afa938415612529579361250a575b5050339116036124fa57506124f36124f8959685611ef9565b61201f565b565b51630f4b2e3160e01b8152600490fd5b612521929350803d10610c4f57610c418183611bec565b9038806124da565b8551903d90823e3d90fd5b5050909392989695508160049295508460ff5416918a51938480926306fdde0360e01b82525afa91821561267e57918391612592938792612662575b508a51808095819463af9a2aa760e01b83528660048401526024830190611c90565b03915afa9081156126585790839291859161261d575b50819060048a51809581936358a06f0760e01b8352165afa93841561261257936125f3575b5050339116036125e2576124f8929350611ef9565b8351630f4b2e3160e01b8152600490fd5b61260a929350803d10610c4f57610c418183611bec565b9038806125cd565b8851903d90823e3d90fd5b82809450819392503d8311612651575b6126378183611bec565b81010312610ca857908061264b8493611d88565b906125a8565b503d61262d565b88513d86823e3d90fd5b6126779192503d8089833e610acb8183611bec565b9038612570565b89513d87823e3d90fd5b5050509050565b9160018060a01b0380931691600092808452602094610103865260409283862090868360c954169160248751809481936341f63bfd60e01b835260048301525afa90811561289e579083918891612884575b50511686528652828520958351926126f884611bb9565b8754845282600189015416976007838601918a83526002810154888801526003810154606088015260048101546080880152600581015460a0880152600681015460c0880152015460e08601528815612879578286979899600497519788809263220f1ac960e21b82525afa95861561283a578996612844575b5090828460049351168851938480926358a06f0760e01b82525afa91821561283a57908392918a92612818575b5060249088519586938492630ed1279f60e11b84526004840152165afa94851561280f575086946127d8575b5050611dee9394506128a8565b9080929450813d8311612808575b6127f08183611bec565b81010312610c1257611dee93945051918493386127cb565b503d6127e6565b513d88823e3d90fd5b602491925061283390843d8611610c4f57610c418183611bec565b919061279f565b87513d8b823e3d90fd5b919095508282813d8311612872575b61285d8183611bec565b8101031261286e5790519482612772565b8880fd5b503d612853565b505050505050915090565b61289891503d808a833e6105c88183611bec565b386126e1565b85513d89823e3d90fd5b919060c0830151806128bf575b50611dee92612282565b600019811461290557428110156128b55760208401516128ea926001600160a01b03909116916120de565b8060a084015110156128fc57386128b5565b50506080015190565b5050506080015190565b600092918015918215612926575b5050156123d457565b80820294509150811582850482141715611d4e5761294490846120be565b14388061291d565b906129569161290f565b6b019d971e4fe8401e74000000810190818111611d4e57811061230b576b033b2e3c9fd0803ce800000090049056fea2646970667358221220722556dcfe29f9d42d87911e66b10f8719e29725830334c610fd3216ac4305aa64736f6c63430008120033";

type InterestIncreaserV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InterestIncreaserV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InterestIncreaserV2__factory extends ContractFactory {
  constructor(...args: InterestIncreaserV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      InterestIncreaserV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): InterestIncreaserV2__factory {
    return super.connect(runner) as InterestIncreaserV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InterestIncreaserV2Interface {
    return new Interface(_abi) as InterestIncreaserV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): InterestIncreaserV2 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as InterestIncreaserV2;
  }
}
