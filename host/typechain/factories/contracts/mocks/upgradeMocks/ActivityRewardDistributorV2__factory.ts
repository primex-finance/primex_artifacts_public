/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ActivityRewardDistributorV2,
  ActivityRewardDistributorV2Interface,
} from "../../../../contracts/mocks/upgradeMocks/ActivityRewardDistributorV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "buckets",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdatedTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "scaledTotalSupply",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isFinished",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "fixedReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdatedRewardTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerDay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bucketAddress",
            type: "address",
          },
          {
            internalType: "enum IActivityRewardDistributor.Role",
            name: "role",
            type: "uint8",
          },
        ],
        internalType: "struct IActivityRewardDistributor.BucketWithRole[]",
        name: "bucketsArray",
        type: "tuple[]",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "rewardPerDay",
        type: "uint256",
      },
    ],
    name: "decreaseRewardPerDay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dns",
    outputs: [
      {
        internalType: "contract IPrimexDNSV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
    ],
    name: "getBucketAccumulatedReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bucketAddress",
            type: "address",
          },
          {
            internalType: "enum IActivityRewardDistributor.Role",
            name: "role",
            type: "uint8",
          },
        ],
        internalType: "struct IActivityRewardDistributor.BucketWithRole[]",
        name: "bucketsArray",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getClaimableReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserInfoFromBucket",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "fixedReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdatedRewardIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oldBalance",
            type: "uint256",
          },
        ],
        internalType: "struct IActivityRewardDistributorStorage.UserInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_pmx",
        type: "address",
      },
      {
        internalType: "contract IPrimexDNSV3",
        name: "_dns",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "contract ITraderBalanceVault",
        name: "_traderBalanceVault",
        type: "address",
      },
      {
        internalType: "contract IWhiteBlackList",
        name: "_whiteBlackList",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pmx",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "increaseAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerDay",
        type: "uint256",
      },
    ],
    name: "setupBucket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testUpgrade",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "traderBalanceVault",
    outputs: [
      {
        internalType: "contract ITraderBalanceVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBucketV3",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
    ],
    name: "updateUserActivity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBucketV3",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "newBalances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
    ],
    name: "updateUsersActivities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawPmx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100c1576000549060ff8260081c1661006f575060ff80821603610034575b6040516123ee90816100c78239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a7146116cd575081630460f0f3146116a45781630b49839d1461167b57816310982b3c146114905781631ad4c4b3146110d4578163266aa8a5146110975781633f4ba83a14610f875781633fa4f24514610f685781635524107714610f4e5781635c975abb14610f2a57816361d027b314610f015781636706cb6b14610c95578163785ad74614610bdc5781637b10399914610bb35781638036032d14610a305781638456cb591461093f5781639968861e146109165781639d6aed0b146108bd578163c88157e314610842578163cc2a9a5b146103ff578163e1a91ba61461021157508063e313b249146101625763fdfd56c91461012257600080fd5b3461015e578060031936011261015e5761013a611736565b60243592600284101561015b575060209261015491612186565b9051908152f35b80fd5b5080fd5b503461015e57606036600319011261015e5761017c611736565b9160243592600284101561015e576101c96060948461019961174c565b94808280516101a781611870565b828152826020820152015260018060a01b03809516815260ce602052206117c6565b509116600052602052806000209080516101e281611870565b825492838252826002600183015492602085019384520154920191825282519384525160208401525190820152f35b9050346103fb5761022136611762565b9291939060018060a01b03604460208260cb5416855192838092632474521560e21b82527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb8a8301523360248301525afa9081156103f15788916103c3575b50156103b4578516865260ce60205281862060028210156103a157816102a5916117c6565b5094600886019283548610156103925750906102c091612186565b806006860155600985015491818311600014610386578442915b60038801926102fa84546102f460028c01938454906119f2565b906119ff565b61030960018b019182546119a1565b90554290555561031c8487015486612367565b9055426007860155836103385750505050600a60001991015580f35b610341916119f2565b9062015180918281029281840414901517156103735750610367600a9261036d92611a12565b426119a1565b91015580f35b634e487b7160e01b855260119052602484fd5b84600a870154916102da565b516302f8fa5360e41b81528490fd5b634e487b7160e01b875260218452602487fd5b50505163036be76f60e61b8152fd5b6103e4915060203d81116103ea575b6103dc81836118be565b8101906118e0565b38610280565b503d6103d2565b84513d8a823e3d90fd5b8280fd5b83833461015e5760c036600319011261015e576001600160a01b0392803584811692919083900361083e5760249283359186831680930361083a5761044261174c565b926064359288841680940361083557608435918983168093036108315760a435938a851680950361082d5789549a60ff8c60081c161597888d819a61081f575b508015610800575b156107a75760ff19808e166001178d559b9c89610796575b5016908b89519a6301ffc9a760e01b808d528c84637965db0b60e01b91015260209c8d818481895afa93841561067f57908e929194610777575b5083610728575b836106d9575b8361068a575b83610630575b836105d8575b505050156105ca57506bffffffffffffffffffffffff60a01b948560cf54161760cf558460cb54161760cb558360ca54161760ca558260c954161760c9558160cd54161760cd5560cc54161760cc5561058c85549460ff8660081c1690610561826118f8565b61056a826118f8565b60018055610577826118f8565b610580826118f8565b606554166065556118f8565b610594578380f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989261ff00191684555160018152a18180808380f35b885163044aa57560e41b8152fd5b8c519081526329abf30760e11b858201529250908290818b5afa908115610626578d91610609575b508d8b816104fb565b61062091508b3d8d116103ea576103dc81836118be565b8d610600565b8a513d8f823e3d90fd5b9250508d8b51838152633df6cef760e01b858201528d8184818d5afa91821561067f57908e92610662575b50926104f5565b6106799150823d84116103ea576103dc81836118be565b3861065b565b8d51903d90823e3d90fd5b9250508d8b518381526336372b0760e01b858201528d8184818b5afa91821561067f57908e926106bc575b50926104ef565b6106d39150823d84116103ea576103dc81836118be565b386106b5565b9250508d8b518381526312b3ed2b60e01b858201528d8184818c5afa91821561067f57908e9261070b575b50926104e9565b6107229150823d84116103ea576103dc81836118be565b38610704565b9250508d8b5183815263081e57a760e31b858201528d8184818a5afa91821561067f57908e9261075a575b50926104e3565b6107719150823d84116103ea576103dc81836118be565b38610753565b61078f919450823d84116103ea576103dc81836118be565b92386104dc565b61ffff1916610101178d558d6104a2565b895162461bcd60e51b8152602081850152602e818d01527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158d81610811575b5061048a565b6001915060ff16148d61080b565b6001915060ff16108d610482565b8980fd5b8880fd5b600080fd5b8580fd5b8380fd5b83903461015e5760a036600319011261015e5761085d611736565b67ffffffffffffffff906024358281116108b95761087e903690850161183f565b92909360443591821161083a576108979136910161183f565b906084359360028510156108b5576108b29560643594611e15565b80f35b8680fd5b8480fd5b50503461015e578160031936011261015e578051610912916108de826118a2565b601b82527f41637469766974795265776172644469737472696275746f725632000000000060208301525191829182611813565b0390f35b50503461015e578160031936011261015e5760cd5490516001600160a01b039091168152602090f35b9050346103fb57826003193601126103fb5760cb548251632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb8382015233602482015290602090829060449082906001600160a01b03165afa908115610a23578491610a05575b50156109f7575060207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916109e26119ae565b600160ff19606554161760655551338152a180f35b905163036be76f60e61b8152fd5b610a1d915060203d81116103ea576103dc81836118be565b386109af565b50505051903d90823e3d90fd5b8391503461015e578260031936011261015e57803567ffffffffffffffff81116103fb578391610a6291369101611795565b919092610a6d611720565b6001600160a01b03949193849291839087165b828510610a91576020878751908152f35b909192939587610aaa610aa589878961197d565b61198d565b16835260209060ce82528684209180610ac48a888a61197d565b0135600293848210156108b55790610adb916117c6565b5090600982015415610ba6579080610b539493928660005252886000209280840154918215610b9857610b40610b47936102f4610b4d9794670de0b6b3a764000094600190818101549260ff60058301541615610b5c575b50508654960154906119f2565b04906119a1565b906119a1565b96611958565b93929190610a80565b610b889293916102f4610b47924290600a84015480831015610b90575b506003840154930154906119f2565b903880610b33565b915038610b79565b505050610b4d9154906119a1565b505096610b539150611958565b50503461015e578160031936011261015e5760cb5490516001600160a01b039091168152602090f35b9050346103fb57816003193601126103fb57610bf6611736565b6001600160a01b0316835260ce60205281832060243593600285101561015b575061014093610c24916117c6565b5060018101549260028201549260038301549083015460ff600585015416600685015491600786015493600887015495600a60098901549801549881519a8b5260208b015289015260608801521515608087015260a086015260c085015260e0840152610100830152610120820152f35b9050346103fb5760803660031901126103fb57610cb0611736565b9160243560028110156108b95760cb548251632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b63858201523360248201526064359360209390926001600160a01b039260448035939287918391829088165afa908115610ef7578a91610eda575b5015610eca5790610d5183928a95948a16865260ce8752610d4a818688206117c6565b5099612186565b90600889019680885403610e58575b5080610d98575b50505050505054908115600014610d85575050600a60001991015580f35b61034160098401546006850154906119f2565b8592610df292610dba838c6009810193845491818314610e34575b50506119a1565b905560c95485516323b872dd60e01b8152338b8201908152306020820152604081019490945296879492909116928492839160600190565b03925af1908115610e2b5750610e0d575b8080808893610d67565b81610e2392903d106103ea576103dc81836118be565b503880610e03565b513d88823e3d90fd5b60059142600283015560068201554260078201550160ff198154169055388e610db3565b8260068b01558260098b015411600014610ebc57610eae42915b60038c01928c610e9c6001610e9287546102f460028601968754906119f2565b92019182546119a1565b9055429055808a558a8c015490612367565b90554260078a015538610d60565b610eae600a8b015491610e72565b835163036be76f60e61b81528790fd5b610ef19150863d88116103ea576103dc81836118be565b38610d27565b85513d8c823e3d90fd5b50503461015e578160031936011261015e5760cc5490516001600160a01b039091168152602090f35b50503461015e578160031936011261015e5760209060ff6065541690519015158152f35b83903461015e57602036600319011261015e573560d05580f35b50503461015e578160031936011261015e5760209060d0549051908152f35b9050346103fb57826003193601126103fb5760cb548251632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d88382015233602482015290602090829060449082906001600160a01b03165afa908115610a23578491611079575b50156109f7576065549060ff82161561103f575060ff1916606555513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b611091915060203d81116103ea576103dc81836118be565b38610ff7565b833461015b57608036600319011261015b576110b1611736565b6110b9611720565b9060643590600282101561083e576108b29260443591611b12565b9050823461015b576020928360031936011261015e5767ffffffffffffffff92803584811161083e5761110a9036908301611795565b94906002966001968888541461144d578888556111256119ae565b60cf548651630723eb0360e51b815233878201526001600160a01b039a918490829060249082908f165afa908115611443578991611426575b50611416578793885b83811061127c57505060c95460cd54885163a9059cbb60e01b8152908c166001600160a01b03168882019081526020810187905290935084925083918c169082908b90829060400103925af1801561127257611254575b50508660cd54169660c95416873b1561083a57845163220eb46560e11b8152338582019081526001600160a01b0390921660208301526040820192909252959694959094869186919082908490829060600103925af1801561124a57611226575b8486805580f35b83116112375750528280808061121f565b634e487b7160e01b845260419052602483fd5b83513d87823e3d90fd5b8161126a92903d106103ea576103dc81836118be565b5087806111be565b86513d89823e3d90fd5b8b61128b610aa583878661197d565b168a5260ce8552888a20856112a183878661197d565b0135908482101561141257906112b6916117c6565b5060098101541561140257338b52808652898b20968754918d868a018054611367575b5050508115611357576112ed828d926119a1565b97556112fd610aa583878661197d565b908661130a84888761197d565b0135918583101561135357908e61134e9493928d5192835216907fb163b3b4233df3f97edbed53bf70628a14bbc4d7d9a2d8dc5349cd466383653a893392a4611958565b611167565b8c80fd5b8a5163093c58cd60e21b81528a90fd5b93670de0b6b3a7640000610b4083859760056113a0969701805460ff8116156113aa575b505054970154948d01966102f48854876119f2565b92558e8d816112d9565b429184600a8d015492838510156113f0575b505050508c6113d860038c0154918c01916102f48354856119f2565b6113e6858d019182546119a1565b905555388061138b565b60ff19161790559050388084816113bc565b895163aedbcd8360e01b81528990fd5b8b80fd5b86516333df015b60e01b81528690fd5b61143d9150843d86116103ea576103dc81836118be565b8b61115e565b88513d8b823e3d90fd5b855162461bcd60e51b8152808601839052601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b83833461015e576114a036611762565b90929160018060a01b03908160cb54169484518096632474521560e21b8252888a8301523360248301528160446020998a935afa908115611671578891611654575b501561164457828216875260ce86528487206002821015611631579061150b81611512936117c6565b5092612186565b600982019081548561152483836119f2565b106116215785611533916119f2565b80925560088301549182156000146115d05750505090849596611596959392600a600019915b0155878260c954169260cc54169186519788958694859363a9059cbb60e01b8552840160209093929193604081019460018060a01b031681520152565b03925af19081156115c757506115aa578280f35b816115c092903d106103ea576103dc81836118be565b5081808280f35b513d85823e3d90fd5b906115da916119f2565b620151809081810291818304149015171561160e5791600a611608610367899a9b946115969a989796611a12565b91611559565b634e487b7160e01b885260118952602488fd5b865163547dc75760e11b81528a90fd5b634e487b7160e01b885260218952602488fd5b845163036be76f60e61b81528890fd5b61166b9150873d89116103ea576103dc81836118be565b896114e2565b86513d8a823e3d90fd5b50503461015e578160031936011261015e5760ca5490516001600160a01b039091168152602090f35b50503461015e578160031936011261015e5760c95490516001600160a01b039091168152602090f35b8491346103fb5760203660031901126103fb573563ffffffff60e01b81168091036103fb576020925063187d5ef960e11b811490811561170f575b5015158152f35b6301ffc9a760e01b14905083611708565b602435906001600160a01b038216820361083557565b600435906001600160a01b038216820361083557565b604435906001600160a01b038216820361083557565b6060906003190112610835576004356001600160a01b038116810361083557906024356002811015610835579060443590565b9181601f840112156108355782359167ffffffffffffffff8311610835576020808501948460061b01011161083557565b9060028110156117da57600b020190600090565b634e487b7160e01b600052603260045260246000fd5b60005b8381106118035750506000910152565b81810151838201526020016117f3565b6040916020825261183381518092816020860152602086860191016117f0565b601f01601f1916010190565b9181601f840112156108355782359167ffffffffffffffff8311610835576020808501948460051b01011161083557565b6060810190811067ffffffffffffffff82111761188c57604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761188c57604052565b90601f8019910116810190811067ffffffffffffffff82111761188c57604052565b90816020910312610835575180151581036108355790565b156118ff57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b60001981146119675760010190565b634e487b7160e01b600052601160045260246000fd5b91908110156117da5760061b0190565b356001600160a01b03811681036108355790565b9190820180921161196757565b60ff606554166119ba57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b9190820391821161196757565b8181029291811591840414171561196757565b8115611a1c570490565b634e487b7160e01b600052601260045260246000fd5b60208183031261083557805167ffffffffffffffff9182821161083557019082601f8301121561083557815190811161188c5760405192611a7d601f8301601f1916602001856118be565b8184526020828401011161083557611a9b91602080850191016117f0565b90565b91908260809103126108355781516001600160a01b038116810361083557916020810151600381101561083557916060604083015192015190565b67ffffffffffffffff811161188c5760051b60200190565b8051156117da5760200190565b80518210156117da5760209160051b010190565b93929060018060a01b03908160ca5416938260409788519687916306fdde0360e01b83526000988991816004998a92165afa918215611e0b5791608091611b74938a92611de7575b508b51808095819463481d98fb60e11b83528b8301611813565b03915afa908115611ddd578791611dac575b50818116908115611d9c57611b9c8784926122a7565b163303611d8c578652602060ce81528887209560029687821015611d795790611bc4916117c6565b50956009870154158015611d6b575b8015611d5f575b611d5357895199611bea8b6118a2565b6001808c52958336818e013784611c008d611af1565b91169052805194611c10866118a2565b868652833681880137611c2286611af1565b52429860038901998a548015600014611d065750611c43848b0154826119f2565b600a8b01611c528282546119a1565b9055611c6360078c019182546119a1565b90555b838a0155805b878110611c94575050505050505050611c9092939450600882015491015490612367565b9055565b80611cfc878f611d0194611ce8918f8f8c8f92611cc4611ce193820194611cbd88875492611afe565b51906119a1565b9188611cd08888611afe565b51168d52528c8c8c200154906119f2565b9055611afe565b5116611cf4838b611afe565b51908d612253565b611958565b611c6c565b600a8b015480831015611d3b575b50611d26906102f4868d0154846119f2565b611d34898c019182546119a1565b9055611c66565b60058c01805460ff19168b1790559150611d26611d14565b50505050505050509050565b50600887015415611bda565b5060ff600588015416611bd3565b634e487b7160e01b895260218752602489fd5b885163036be76f60e61b81528590fd5b8951630983ac6960e11b81528690fd5b611dcd915060803d8111611dd6575b611dc581836118be565b810190611a9e565b50505038611b86565b503d611dbb565b89513d89823e3d90fd5b611e049192503d808c833e611dfc81836118be565b810190611a32565b9038611b5a565b8a513d8a823e3d90fd5b60ca54604080516306fdde0360e01b8152949998979396600496949590946001600160a01b039490936000929190861690839083908b9082908a165afa91821561217c5791608091611e84938592612160575b50855163481d98fb60e11b815293849283918291828f01611813565b03915afa908115612156578291612135575b5084611ea28b836122a7565b163303612125578416815260209260ce845282822060028b1015612112578a611eca916117c6565b509860098a0154158015612104575b80156120f8575b6120e957611eed8d611ad9565b9c8585519e8f90611efe90826118be565b828152019060051b8201913683116108b957905b8282106120d157505050611f2586611ad9565b95611f32845197886118be565b8087528487019060051b82019136831161083e578590915b8383106120c157505050506001429989600381019b8c5480156000146120735750906002611f7a910154826119f2565b600a8c01611f898282546119a1565b9055611f9a60078d019182546119a1565b90555b60028b01550361202c57805b868110611fcc5750505050505050611c9092939450600882015491015490612367565b80611cfc866120138f94612027958b8f8f90611ff4611ce192820193611cbd87865492611afe565b90876120008787611afe565b51168c528d5260028c8c200154906119f2565b511661201f838a611afe565b51908c612253565b611fa9565b9396975050509250959094955b85811061204857505050505050565b80611cfc8461205a61206e9486611afe565b51166120668388611afe565b519088612253565b612039565b600a830154808310156120a9575b506102f4600261209493940154846119f2565b6120a2848d019182546119a1565b9055611f9d565b60058401805460ff19168717905591506102f4612081565b8235815291810191869101611f4a565b8135888116810361083a578152908601908601611f12565b50505050505050505050509050565b5060088a015415611ee0565b5060ff60058b015416611ed9565b634e487b7160e01b835260218952602483fd5b825163036be76f60e61b81528890fd5b61214d915060803d8111611dd657611dc581836118be565b50505038611e96565b83513d84823e3d90fd5b6121759192503d8087833e611dfc81836118be565b9038611e68565b84513d85823e3d90fd5b6001600160a01b0316600090815260ce6020526040902090600281101561223d576121b0916117c6565b50600781015480156122365780600a83015490600384015415612203575b504210156121fb5762015180610b408360086121f26006611a9b97015495426119f2565b910154906119ff565b506009015490565b915061221d6122166002850154426119f2565b80936119a1565b9160018201156121ce57612230916119a1565b386121ce565b5050600090565b634e487b7160e01b600052602160045260246000fd5b9060018060a01b03166000528060205260406000209060028201916001835492019061229f670de0b6b3a76400006122978454956102f460018601978854906119f2565b0482546119a1565b905554905555565b90600281101561223d57612330576040516358a06f0760e01b81526001600160a01b03916020908290600490829086165afa908115612324576000916122ec57501690565b6020813d821161231c575b81612304602093836118be565b8101031261015e575190828216820361015b57501690565b3d91506122f7565b6040513d6000823e3d90fd5b604051631f1b131360e31b81526001600160a01b03916020908290600490829086165afa908115612324576000916122ec57501690565b60009291908161237957506000925050565b620151809004670de0b6b3a7640000908181029181830414901517156123a457611a9b929350611a12565b634e487b7160e01b84526011600452602484fdfea2646970667358221220075dfe4b2c8a0b18264fec6f39cc6c298128cfaab99811062b46bdd1a544699a64736f6c63430008120033";

type ActivityRewardDistributorV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ActivityRewardDistributorV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ActivityRewardDistributorV2__factory extends ContractFactory {
  constructor(...args: ActivityRewardDistributorV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ActivityRewardDistributorV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ActivityRewardDistributorV2__factory {
    return super.connect(runner) as ActivityRewardDistributorV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ActivityRewardDistributorV2Interface {
    return new Interface(_abi) as ActivityRewardDistributorV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ActivityRewardDistributorV2 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ActivityRewardDistributorV2;
  }
}
