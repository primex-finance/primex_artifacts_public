/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  AttackerBucket,
  AttackerBucketInterface,
} from "../../../contracts/mocks/AttackerBucket";

const _abi = [
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pToken",
    outputs: [
      {
        internalType: "contract IPToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPToken",
        name: "_pToken",
        type: "address",
      },
    ],
    name: "setPTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601557610418908161001b8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a71461035b5750806306fdde031461023c57806358a06f0714610213578063a1806d24146101d05763c47f00271461005657600080fd5b346101cb5760203660031901126101cb5760043567ffffffffffffffff81116101cb57366023820112156101cb57806004013567ffffffffffffffff81116101cb5736602482840101116101cb576000906100b18254610388565b601f8111610164575b5081601f82116001146100f65782938293926100e8575b50508160011b916000199060031b1c191617815580f35b6024925001013538806100d1565b601f198216936000805160206103c383398151915291845b868110610149575083600195961061012c575b505050811b01815580f35b0160240135600019600384901b60f8161c19169055388080610121565b9092602060018192602487870101358155019401910161010e565b601f820160051c6000805160206103c38339815191520190602083106101b5575b601f0160051c6000805160206103c383398151915201905b8181106101aa57506100ba565b83815560010161019d565b6000805160206103c38339815191529150610185565b600080fd5b346101cb5760203660031901126101cb576004356001600160a01b038116908190036101cb576bffffffffffffffffffffffff60a01b6001541617600155600080f35b346101cb5760003660031901126101cb576001546040516001600160a01b039091168152602090f35b346101cb5760003660031901126101cb576040516000805461025d81610388565b808452906001811690811561033f57506001146102fb575b50819003601f01601f191681019067ffffffffffffffff8211818310176102e55781604052602082528181519182602083015260005b8381106102cd5750508160006040809484010152601f80199101168101030190f35b602082820181015160408784010152859350016102ab565b634e487b7160e01b600052604160045260246000fd5b9050600080526000805160206103c38339815191526000905b82821061032957506020915082010182610275565b6001816020925483858801015201910190610314565b90506020925060ff191682840152151560051b82010182610275565b346101cb5760203660031901126101cb576004356001600160e01b03198116036101cb5780600160209252f35b90600182811c921680156103b8575b60208310146103a257565b634e487b7160e01b600052602260045260246000fd5b91607f169161039756fe290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563a2646970667358221220978bda6fe7408bfb16ae17f5e0e4b0f094caf3c6ae9305bb162148a6b51ae43b64736f6c634300081a0033";

type AttackerBucketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttackerBucketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AttackerBucket__factory extends ContractFactory {
  constructor(...args: AttackerBucketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AttackerBucket & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AttackerBucket__factory {
    return super.connect(runner) as AttackerBucket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttackerBucketInterface {
    return new Interface(_abi) as AttackerBucketInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AttackerBucket {
    return new Contract(address, _abi, runner) as unknown as AttackerBucket;
  }
}
