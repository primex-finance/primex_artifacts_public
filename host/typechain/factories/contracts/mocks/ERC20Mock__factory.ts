/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC20Mock,
  ERC20MockInterface,
} from "../../../contracts/mocks/ERC20Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "address[]",
        name: "_initialAccounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_initialBalances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_mintingAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dec",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isTimeLimitedMinting",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintingAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isLimited",
        type: "bool",
      },
    ],
    name: "setMintTimeLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "timeToUnlockMinting",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x604060a081523462000604576200157490813803806200001f816200062a565b93843982019160c081840312620006045780516001600160401b0391908281116200060457846200005291830162000650565b93602094858301518481116200060457826200007091850162000650565b858401519260ff84168403620006045760608501518681116200060457850197601f82818b0112156200060457895196620000b5620000af89620006c2565b6200062a565b9a838c8a8152018460059a8b1b8301019186831162000604578501905b8282106200060957505050608081015189811162000604578101938083860112156200060457845162000109620000af82620006c2565b9585808884815201928c1b820101928311620006045785809101915b838310620005f3575050505060a00151978551818111620004f35760039081546001988982811c92168015620005e8575b87831014620005d25781868493116200057c575b508690868311600114620005155760009262000509575b505060001982841b1c191690881b1781555b8551918211620004f35760049586548881811c91168015620004e8575b86821014620004d357908185859493116200047c575b508590858411600114620004115760009362000405575b505082881b92600019911b1c19161784555b8654336001600160a01b03198216811789558a516001600160a01b039290919083167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a38b5185510362000388575060009a865b62000287575b885460ff60a01b191660a089901b60ff60a01b1617895560808a90528a51610e6e908162000706823960805181818161026401526107130152f35b80518c10156200038257816200029e8d83620006da565b5116620002ac8d87620006da565b518115620003405760028054908282018092116200032b576000928f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef938a935585855284835280852082815401905551908152a36000198c1462000316579a86019a8662000246565b601186634e487b7160e01b6000525260246000fd5b60118a634e487b7160e01b6000525260246000fd5b5060648785878f519262461bcd60e51b845283015260248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b6200024c565b62461bcd60e51b8152858101849052604d60248201527f45524332304d6f636b3a3a636f6e7374727563746f723a6e756d626572206f6660448201527f20696e697469616c206163636f756e747320616e642062616c616e636573206460648201526c0decae640dcdee840dac2e8c6d609b1b608482015260a490fd5b015191503880620001dd565b9190899450601f1984169289600052876000209360005b898282106200046557505085116200044a575b50505050811b018455620001ef565b01519060f884600019921b161c19169055388080806200043b565b8385015187558d9890960195938401930162000428565b909192508760005285600020858086018d1c820192888710620004c9575b918d8c92889796959401901c01915b828110620004b9575050620001c6565b600081558695508b9101620004a9565b925081926200049a565b602288634e487b7160e01b6000525260246000fd5b90607f1690620001b0565b634e487b7160e01b600052604160045260246000fd5b01519050388062000181565b908a9350601f1983169185600052886000209260005b8a8282106200056557505084116200054c575b505050811b01815562000193565b015160001983861b60f8161c191690553880806200053e565b8385015186558e979095019493840193016200052b565b9091508360005286600020868d818601901c820192898610620005c8575b918e8d928796959401901c01915b828110620005b85750506200016a565b600081558594508c9101620005a8565b925081926200059a565b634e487b7160e01b600052602260045260246000fd5b91607f169162000156565b825181529181019186910162000125565b600080fd5b81516001600160a01b038116810362000604578152908501908501620000d2565b6040519190601f01601f191682016001600160401b03811183821017620004f357604052565b919080601f84011215620006045782516001600160401b038111620004f35760209062000686601f8201601f191683016200062a565b92818452828287010111620006045760005b818110620006ae57508260009394955001015290565b858101830151848201840152820162000698565b6001600160401b038111620004f35760051b60200190565b8051821015620006ef5760209160051b010190565b634e487b7160e01b600052603260045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde031461093b57508063095ea7b31461091157806318160ddd146108f257806323b872dd146108285780632c50d109146107f0578063313ce5671461028757806339509351146107a057806340c10f19146106b957806342966c68146105a75780635d6a826b1461056157806370a082311461052a578063715018a6146104cd5780638da5cb5b146104a457806395d89b4114610384578063a457c2d7146102dd578063a9059cbb146102ac578063b3bcfa8214610287578063c530f6c61461024c578063dd0a33e014610225578063dd62ed3e146101d85763f2fde38b1461010a57600080fd5b346101d45760203660031901126101d457610123610a79565b9061012c610aaa565b6001600160a01b03918216928315610182575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b505034610221578060031936011261022157806020926101f6610a79565b6101fe610a94565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50503461022157816003193601126102215760209060ff60055460a81c1690519015158152f35b505034610221578160031936011261022157602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50503461022157816003193601126102215760209060ff60055460a01c169051908152f35b5050346102215780600319360112610221576020906102d66102cc610a79565b6024359033610b25565b5160018152f35b5082346103815782600319360112610381576102f7610a79565b918360243592338152600160205281812060018060a01b0386168252602052205490828210610330576020856102d68585038733610c93565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b50919034610221578160031936011261022157805190828454600181811c9080831692831561049a575b60209384841081146104875783885290811561046b5750600114610416575b505050829003601f01601f191682019267ffffffffffffffff84118385101761040357508291826103ff925282610a30565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b83851061045757505050508301013880806103cd565b805488860183015293019284908201610441565b60ff1916878501525050151560051b84010190503880806103cd565b634e487b7160e01b895260228a52602489fd5b91607f16916103ae565b50503461022157816003193601126102215760055490516001600160a01b039091168152602090f35b83346103815780600319360112610381576104e6610aaa565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346102215760203660031901126102215760209181906001600160a01b03610552610a79565b16815280845220549051908152f35b838234610221576020366003190112610221573580151580910361022157610587610aaa565b6005805460ff60a81b191660a89290921b60ff60a81b1691909117905580f35b5090346101d457602090816003193601126106b557823592331561066a57338552848352818520549084821061061c5750917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef918486959433875286845203818620558360025403600255519283523392a380f35b825162461bcd60e51b8152908101849052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b82608492519162461bcd60e51b8352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152fd5b8380fd5b5090346101d457806003193601126101d4576106d3610a79565b60055460a81c60ff16156107915750338352600660205280832054421061074e576201518042019182421161073b575033835260066020528220556107387f000000000000000000000000000000000000000000000000000000000000000033610d95565b80f35b634e487b7160e01b845260119052602483fd5b906020606492519162461bcd60e51b8352820152601f60248201527f6d696e7420746f6b656e7320706f737369626c65206f6e6365206120646179006044820152fd5b61073892506024359150610d95565b5050346102215780600319360112610221576102d66020926107e96107c3610a79565b338352600186528483206001600160a01b03821684528652918490205460243590610b02565b9033610c93565b5050346102215760203660031901126102215760209181906001600160a01b03610818610a79565b1681526006845220549051908152f35b5082903461022157606036600319011261022157610844610a79565b61084c610a94565b91846044359460018060a01b038416815260016020528181203382526020522054906000198203610886575b6020866102d6878787610b25565b8482106108af57509183916108a4602096956102d695033383610c93565b919394819350610878565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346102215781600319360112610221576020906002549051908152f35b5050346102215780600319360112610221576020906102d6610931610a79565b6024359033610c93565b84915083346101d457826003193601126101d45782600354600181811c90808316928315610a26575b602093848410811461048757838852908115610a0a57506001146109b457505050829003601f01601f191682019267ffffffffffffffff84118385101761040357508291826103ff925282610a30565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106109f657505050508301018580806103cd565b8054888601830152930192849082016109e0565b60ff1916878501525050151560051b84010190508580806103cd565b91607f1691610964565b6020808252825181830181905290939260005b828110610a6557505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610a43565b600435906001600160a01b0382168203610a8f57565b600080fd5b602435906001600160a01b0382168203610a8f57565b6005546001600160a01b03163303610abe57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b91908201809211610b0f57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03908116918215610c405716918215610bef57600082815280602052604081205491808310610b9b57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03908116918215610d445716918215610cf45760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6001600160a01b0316908115610df3577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082610dd7600094600254610b02565b60025584845283825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fdfea2646970667358221220aafd674a4087204da7d54f36187f284c803742756d222c6e77e67414be39338a64736f6c63430008120033";

type ERC20MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Mock__factory extends ContractFactory {
  constructor(...args: ERC20MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _initialAccounts: AddressLike[],
    _initialBalances: BigNumberish[],
    _mintingAmount: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      _initialAccounts,
      _initialBalances,
      _mintingAmount,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _initialAccounts: AddressLike[],
    _initialBalances: BigNumberish[],
    _mintingAmount: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      _initialAccounts,
      _initialBalances,
      _mintingAmount,
      overrides || {}
    ) as Promise<
      ERC20Mock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Mock__factory {
    return super.connect(runner) as ERC20Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20MockInterface {
    return new Interface(_abi) as ERC20MockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20Mock {
    return new Contract(address, _abi, runner) as unknown as ERC20Mock;
  }
}
