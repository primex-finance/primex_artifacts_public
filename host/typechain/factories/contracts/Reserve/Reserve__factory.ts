/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Reserve,
  ReserveInterface,
} from "../../../contracts/Reserve/Reserve";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
    ],
    name: "BurnAmountCalculated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferFromReserve",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "minAmountToBeLeft",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minPercentOfTotalSupplyToBeLeft",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IReserveStorage.TransferRestrictions",
        name: "newTransferRestrictions",
        type: "tuple",
      },
    ],
    name: "TransferRestrictionsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IPrimexDNSV3",
        name: "_dns",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_bucketName",
        type: "string",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "payBonus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBucketV3",
        name: "_bucket",
        type: "address",
      },
    ],
    name: "paybackPermanentLoss",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "minAmountToBeLeft",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minPercentOfTotalSupplyToBeLeft",
            type: "uint256",
          },
        ],
        internalType: "struct IReserveStorage.TransferRestrictions",
        name: "newTransferRestrictions",
        type: "tuple",
      },
    ],
    name: "setTransferRestrictions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "transferRestrictions",
    outputs: [
      {
        internalType: "uint256",
        name: "minAmountToBeLeft",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minPercentOfTotalSupplyToBeLeft",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferToTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460bd576000549060ff8260081c16606b575060ff808216036031575b6040516115f490816100c38239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a1386022565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816301ffc9a714611361575080633f4ba83a14611234578063485cc95514610f845780635c975abb14610f61578063600a330d14610e235780638456cb5914610d305780639607853c14610a495780639dd267e614610483578063acc468b2146104405763f74803491461008f57600080fd5b34610250576020366003190112610250576004356001600160a01b0381169081900361043c576100bd61157a565b6002606554146103f757600260655560c9546040516306fdde0360e01b81526001600160a01b03909116908381600481865afa9081156102b357849161036c575b5060809061012192604051808095819463481d98fb60e11b8352600483016114ac565b03915afa801561031d578291849161033a575b506001600160a01b03160361032857604051634872d32760e01b8152602081600481855afa90811561031d5783916102eb575b506040516358a06f0760e01b8152602081600481865afa9081156102b35760249160209186916102be575b506040516370a0823160e01b815230600482015292839182906001600160a01b03165afa9081156102b357849161027c575b508082116102745750905b7f5110ca98aa61b28a2d94d7c3b7c2ed00a1db4336fecf3857e3766d3ee97278946020604051848152a18115610262578291813b1561025e578291602483926040519485938492634f43f23960e01b845260048401525af180156102535761023b575b50600160655580f35b81610245916113e2565b610250578038610232565b80fd5b6040513d84823e3d90fd5b5050fd5b604051633ce1751760e21b8152600490fd5b9050906101cf565b90506020813d6020116102ab575b81610297602093836113e2565b810103126102a65751386101c4565b600080fd5b3d915061028a565b6040513d86823e3d90fd5b6102de9150823d84116102e4575b6102d681836113e2565b8101906114d8565b38610192565b503d6102cc565b90506020813d602011610315575b81610306602093836113e2565b810103126102a6575138610167565b3d91506102f9565b6040513d85823e3d90fd5b604051631b7091f560e01b8152600490fd5b61035c915060803d608011610365575b61035481836113e2565b810190611457565b50505038610134565b503d61034a565b90503d8085833e61037d81836113e2565b8101906020818303126103f35780519067ffffffffffffffff82116103ef57019181601f840112156103f3578251916103b58361141a565b906103c360405192836113e2565b838252602084860101116103ef576103e76080936101219560208085019101611489565b9150916100fe565b8580fd5b8480fd5b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b5080fd5b50346102505760203660031901126102505760409081906001600160a01b036104676113cc565b16815260cb602052206001815491015482519182526020820152f35b50346102505760403660031901126102505761049d6113cc565b602435906104a961157a565b60ca54604051632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b63600482015233602482015290602090829060449082906001600160a01b03165afa9081156102b3578491610a0f575b50156109fd57604051634c66358f60e11b81526001600160a01b03919091169061012081600481855afa80156102b357849061092d575b6020915001511561091b576040516358a06f0760e01b8152602081600481855afa9081156102b35784916108fc575b506040516370a0823160e01b81523060048201526001600160a01b03919091169190602081602481865afa9081156108f15785916108bf575b5082855260cb60205260408520906105c18583546114f7565b8110159182610789575b5050156107775760c9546040516361d027b360e01b81528591602090829060049082906001600160a01b03165afa90811561025357829161073d575b50823b1561043c5760405163f3fef3a360e01b81526001600160a01b0391909116600482015260248101859052918290604490829084905af180156102b357610729575b5060c9546040516361d027b360e01b815290602090829060049082906001600160a01b03165afa9081156102b35784916106c3575b50907f478dbd1afe37404eb4ec0d3c4e3e89bfea0891deacfaf6c6b9686831ab253bec9260609260405192835260018060a01b031660208301526040820152a180f35b9190506020823d602011610721575b816106df602093836113e2565b8101031261071d577f478dbd1afe37404eb4ec0d3c4e3e89bfea0891deacfaf6c6b9686831ab253bec92610714606093611443565b91925092610680565b8380fd5b3d91506106d2565b83610736919492946113e2565b913861064b565b90506020813d60201161076f575b81610758602093836113e2565b8101031261043c5761076990611443565b38610607565b3d915061074b565b60405163d56f855960e01b8152600490fd5b6040516318160ddd60e01b8152919250602082600481885afa9182156108b457879261087b575b506001015486918115918215610830575b505015610821576706f05b59d3b2000081019081811161080d5781106107fe5784670de0b6b3a76400006107f592046114f7565b111538806105cb565b630a77254f60e01b8652600486fd5b634e487b7160e01b87526011600452602487fd5b631550e8b760e01b8652600486fd5b8181929394500282810482148315171561086757809361085357041438806107c1565b634e487b7160e01b89526012600452602489fd5b634e487b7160e01b89526011600452602489fd5b9091506020813d6020116108ac575b81610897602093836113e2565b810103126108a857519060016107b0565b8680fd5b3d915061088a565b6040513d89823e3d90fd5b90506020813d6020116108e9575b816108da602093836113e2565b810103126103f35751386105a8565b3d91506108cd565b6040513d87823e3d90fd5b610915915060203d6020116102e4576102d681836113e2565b3861056f565b6040516379bb149f60e11b8152600490fd5b50610120813d82116109f5575b8161094861012093836113e2565b8101031261071d57604051610120810181811067ffffffffffffffff8211176109e15760405281516001600160a01b03811681036103ef57602092610100918352610994848201611436565b8484015260408101516040840152606081015160608401526080810151608084015260a081015160a084015260c081015160c084015260e081015160e08401520151610100820152610540565b634e487b7160e01b86526041600452602486fd5b3d915061093a565b60405163036be76f60e61b8152600490fd5b90506020813d602011610a41575b81610a2a602093836113e2565b8101031261071d57610a3b90611436565b38610509565b3d9150610a1d565b50346102505760603660031901126102505760043567ffffffffffffffff811161043c573660238201121561043c5781816004013591610a888361141a565b92610a9660405194856113e2565b8084523660248284010111610d2c57806024602093018386013783010152610ae86080610ac16113b6565b9260018060a01b0360c95416604051808095819463481d98fb60e11b8352600483016114ac565b03915afa90811561031d578391610d0a575b506040516358a06f0760e01b8152906001600160a01b0316602082600481845afa9182156102b3578492610ce5575b50602060049160405192838092631f1b131360e31b82525afa9081156102b3578491610ca2575b50604051637988abe160e11b815290602090829060049082906001600160a01b03165afa9081156102b3578491610c83575b506001600160a01b031633148015610c25575b15610c135760405163a9059cbb60e01b81526001600160a01b039283166004820152604480356024830152909260209284929183918791165af1801561025357610bdd575080f35b6020813d602011610c0b575b81610bf6602093836113e2565b8101031261043c57610c0790611436565b5080f35b3d9150610be9565b60405163f6bcc85960e01b8152600490fd5b50604051631c585d4d60e21b81526020816004816001600160a01b0386165afa9081156102b3578491610c64575b506001600160a01b03163314610b95565b610c7d915060203d6020116102e4576102d681836113e2565b38610c53565b610c9c915060203d6020116102e4576102d681836113e2565b38610b82565b90506020813d602011610cdd575b81610cbd602093836113e2565b8101031261071d57516001600160a01b038116810361071d576020610b50565b3d9150610cb0565b6004919250610d02602091823d84116102e4576102d681836113e2565b929150610b29565b610d23915060803d6080116103655761035481836113e2565b50505038610afa565b8280fd5b503461025057806003193601126102505760ca54604051632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb600482015233602482015290602090829060449082906001600160a01b03165afa908115610253578291610de9575b50156109fd57610daf61157a565b600160ff1960335416176033557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b90506020813d602011610e1b575b81610e04602093836113e2565b8101031261043c57610e1590611436565b38610da1565b3d9150610df7565b503461025057606036600319011261025057610e3d6113cc565b604036602319011261043c5760ca54604051632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b63600482015233602482015290602090829060449082906001600160a01b03165afa90811561031d578391610f27575b50156109fd5760443590670de0b6b3a76400008211610f155760407fdcb30d139e0205cf87041969dcdac479c90699e67d7c0e969c66348b792dbe519160018060a01b03169283855260cb6020528185209080600160243593848155015582519182526020820152a280f35b6040516380febb2d60e01b8152600490fd5b90506020813d602011610f59575b81610f42602093836113e2565b81010312610d2c57610f5390611436565b38610ea9565b3d9150610f35565b5034610250578060031936011261025057602060ff603354166040519015158152f35b5034610250576040366003190112610250576004356001600160a01b0381169081900361043c57610fb36113b6565b9082549160ff8360081c161592838094611227575b8015611210575b156111b45760ff1981166001178555836111a3575b506040516301ffc9a760e01b8152633f9940a760e11b6004820152602081602481865afa9081156108f1578591611169575b50806110ee575b156110dc5760018060a01b03166bffffffffffffffffffffffff60a01b60ca54161760ca556bffffffffffffffffffffffff60a01b60c954161760c95581549061109a60ff8360081c166110708161151a565b6110798161151a565b60ff196033541660335561108c8161151a565b6110958161151a565b61151a565b60016065556110a7575080f35b61ff00191681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b60405163044aa57560e41b8152600490fd5b506040516301ffc9a760e01b8152637965db0b60e01b60048201526020816024816001600160a01b0386165afa9081156108f157859161112f575b5061101d565b90506020813d602011611161575b8161114a602093836113e2565b810103126103f35761115b90611436565b38611129565b3d915061113d565b90506020813d60201161119b575b81611184602093836113e2565b810103126103f35761119590611436565b38611016565b3d9150611177565b61ffff191661010117845538610fe4565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015610fcf5750600160ff821614610fcf565b50600160ff821610610fc8565b503461025057806003193601126102505760ca54604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8600482015233602482015290602090829060449082906001600160a01b03165afa908115610253578291611327575b50156109fd5760335460ff8116156112eb5760ff19166033557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b90506020813d602011611359575b81611342602093836113e2565b8101031261043c5761135390611436565b386112a5565b3d9150611335565b90503461043c57602036600319011261043c5760043563ffffffff60e01b8116809103610d2c576020925063d4cb1bcb60e01b81149081156113a5575b5015158152f35b6301ffc9a760e01b1490503861139e565b602435906001600160a01b03821682036102a657565b600435906001600160a01b03821682036102a657565b90601f8019910116810190811067ffffffffffffffff82111761140457604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161140457601f01601f191660200190565b519081151582036102a657565b51906001600160a01b03821682036102a657565b91908260809103126102a65761146c82611443565b91602081015160038110156102a657916060604083015192015190565b60005b83811061149c5750506000910152565b818101518382015260200161148c565b604091602082526114cc8151809281602086015260208686019101611489565b601f01601f1916010190565b908160209103126102a657516001600160a01b03811681036102a65790565b9190820180921161150457565b634e487b7160e01b600052601160045260246000fd5b1561152157565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b60ff6033541661158657565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fdfea2646970667358221220e36ea7abe537dbf0ba611463ebfb1e0ca74dc7e648fcd4926908488cc92344c464736f6c634300081a0033";

type ReserveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReserveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Reserve__factory extends ContractFactory {
  constructor(...args: ReserveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Reserve & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Reserve__factory {
    return super.connect(runner) as Reserve__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReserveInterface {
    return new Interface(_abi) as ReserveInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Reserve {
    return new Contract(address, _abi, runner) as unknown as Reserve;
  }
}
