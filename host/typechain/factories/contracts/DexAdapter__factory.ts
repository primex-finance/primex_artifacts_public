/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DexAdapter,
  DexAdapterInterface,
} from "../../contracts/DexAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WNative",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "ToAddressOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "ToAddressOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dexRouter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "dexType",
        type: "uint256",
      },
    ],
    name: "DexTypeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dexRouter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "quoter",
        type: "address",
      },
    ],
    name: "QuoterChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "WNative",
    outputs: [
      {
        internalType: "contract IWNative",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "dexType",
    outputs: [
      {
        internalType: "enum IDexAdapter.DexType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
        ],
        internalType: "struct IDexAdapter.AmountParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getAmountInByMegaRoutes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
        ],
        internalType: "struct IDexAdapter.AmountParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getAmountOutByMegaRoutes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedPath",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dexRouter",
            type: "address",
          },
        ],
        internalType: "struct IDexAdapter.GetAmountsParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[3]",
        name: "",
        type: "uint256[3]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "dexName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Path[]",
        name: "paths",
        type: "tuple[]",
      },
    ],
    name: "getAmountsInByPaths",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "dexName",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
            ],
            internalType: "struct PrimexPricingLibrary.Path[]",
            name: "paths",
            type: "tuple[]",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Route[]",
        name: "routes",
        type: "tuple[]",
      },
    ],
    name: "getAmountsInByRoutes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedPath",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dexRouter",
            type: "address",
          },
        ],
        internalType: "struct IDexAdapter.GetAmountsParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[3]",
        name: "",
        type: "uint256[3]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "dexName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Path[]",
        name: "paths",
        type: "tuple[]",
      },
    ],
    name: "getAmountsOutByPaths",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "dexName",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
            ],
            internalType: "struct PrimexPricingLibrary.Path[]",
            name: "paths",
            type: "tuple[]",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Route[]",
        name: "routes",
        type: "tuple[]",
      },
    ],
    name: "getAmountsOutByRoutes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dexRouter",
        type: "address",
      },
    ],
    name: "getGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_primexDNS",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountTokenA",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct PrimexPricingLibrary.MegaSwapParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "performMegaRoutesSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "dexName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Path[]",
        name: "paths",
        type: "tuple[]",
      },
    ],
    name: "performPathsSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "dexName",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
            ],
            internalType: "struct PrimexPricingLibrary.Path[]",
            name: "paths",
            type: "tuple[]",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Route[]",
        name: "routes",
        type: "tuple[]",
      },
    ],
    name: "performRoutesSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "primexDNS",
    outputs: [
      {
        internalType: "contract IPrimexDNSV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "quoters",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dexRouter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_dexType",
        type: "uint256",
      },
    ],
    name: "setDexType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dexRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoter",
        type: "address",
      },
    ],
    name: "setQuoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedPath",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dexRouter",
            type: "address",
          },
        ],
        internalType: "struct IDexAdapter.SwapParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[3]",
        name: "",
        type: "uint256[3]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0806040523461015857604081614c90803803809161001f828561015d565b8339810103126101585761003e602061003783610196565b9201610196565b6040516301ffc9a760e01b8152637965db0b60e01b60048201529091906020816024816001600160a01b0386165afa90811561014c5760009161010a575b50156100f8576080526001600160a01b031660a052604051614ae590816101ab823960805181818161098601528181610a1c01528181610aad0152611835015260a051818181610cbb015281816138740152818161398201528181613da401528181613eb6015281816144ba015281816146d501526147dd0152f35b60405163044aa57560e41b8152600490fd5b6020813d602011610144575b816101236020938361015d565b81010312610140575190811515820361013d57503861007c565b80fd5b5080fd5b3d9150610116565b6040513d6000823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761018057604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101585756fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806301ffc9a71461017b5780631f5f4cbe146101765780633396c1ba1461017157806336dd6b3d1461016c5780633c9c6ff3146101675780633f4a2d271461016257806340fce5d11461015d578063461dfcd5146101585780634c828b5c146101535780635933dd2b1461014e5780636264257a146101495780637b103999146101445780638677f6361461013f57806396954fb91461013a578063c2909fed14610135578063c4d66de814610130578063eb5251a51461012b578063f1a3d00514610126578063f3ec43c714610121578063f4ef97ea1461011c578063f6f1c4c4146101175763fae89f920361000e57610d9c565b610d38565b610cea565b610ca5565b610c92565b610c79565b610b7f565b610b36565b610af8565b610a4b565b610a06565b61091b565b6108d6565b61078a565b61073e565b610677565b61064e565b61062a565b610598565b6103d9565b6103b0565b346101d15760203660031901126101d15760043563ffffffff60e01b81168091036101d1576020906301ffc9a760e01b81149081156101c0575b506040519015158152f35b633603f73360e21b149050386101b5565b600080fd5b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761020757604052565b6101d6565b90601f801991011681019081106001600160401b0382111761020757604052565b6040519061023d6101008361020c565b565b6040519061023d60808361020c565b6040519061023d60a08361020c565b6040519061023d60c08361020c565b9061023d604051928361020c565b6001600160401b03811161020757601f01601f191660200190565b9291926102a18261027a565b916102af604051938461020c565b8294818452818301116101d1578281602093846000960137010152565b9080601f830112156101d1578160206102e793359101610295565b90565b6001600160a01b038116036101d157565b359061023d826102ea565b60206003198201126101d157600435906001600160401b0382116101d157606082820360031901126101d1576040519161033f836101ec565b80600401356001600160401b0381116101d1576044926004610363928401016102cc565b835260248101356020840152013561037a816102ea565b604082015290565b919060608301926000905b6003821061039a57505050565b602080600192855181520193019101909161038d565b346101d1576103d56103c96103c436610306565b610eaa565b60405191829182610382565b0390f35b60203660031901126101d1576004356001600160401b0381116101d157806004019060c060031982360301126101d15761041960a4820135421115612830565b610421610f9a565b6064820160005b6104328286610fcf565b9050811015610465578061045d61045560019361044f868a610fcf565b9061101a565b35855161106a565b845201610428565b5091909161047583511515612849565b604482013592606081019184835260009260208301926084604082019601945b6104a96104a2858b610fcf565b9050611077565b81101561053557806104e46104da6104d26104cb60019561044f8f8b90610fcf565b358c6110a2565b8551906110b5565b8088528551611095565b845261052d61052688888d61051e6105148761044f8d61050e610506876110d5565b9751986110d5565b95610fcf565b6020810190610fcf565b939092611a0c565b895161106a565b885201610495565b6103d58761058461057d8987898f61051461051e9161055e610556826110d5565b9551966110d5565b936105776104a261056f8385610fcf565b939094610fcf565b9161101a565b825161106a565b809152604051918291829190602083019252565b346101d15760203660031901126101d15760206105bf6004356105ba816102ea565b6110df565b604051908152f35b9181601f840112156101d1578235916001600160401b0383116101d1576020808501948460051b0101116101d157565b9060406003198301126101d15760043591602435906001600160401b0382116101d157610626916004016105c7565b9091565b346101d15760206105bf61063d366105f7565b9161124f565b60009103126101d157565b346101d15760003660031901126101d1576003546040516001600160a01b039091168152602090f35b60203660031901126101d1576004356001600160401b0381116101d15761010060031982360301126101d1576106ab61022d565b8160040135906001600160401b0382116101d15761073460e46103d5946106db6103c995600436918401016102cc565b84526106e9602482016102fb565b60208501526106fa604482016102fb565b6040850152606481013560608501526084810135608085015261071f60a482016102fb565b60a085015260c481013560c0850152016102fb565b60e08201526114a5565b346101d15760206105bf610751366105f7565b91611500565b60206003198201126101d157600435906001600160401b0382116101d15760809082900360031901126101d15760040190565b346101d15761079836610757565b6107d16107a4826110d5565b6107bf6107b3602085016110d5565b6001600160a01b031690565b6001600160a01b039091161415612862565b6107d9610f9a565b60608201919060005b6107ec8484610fcf565b9050811015610819578061081161080960019361044f8888610fcf565b35845161106a565b8352016107e2565b5061082681511515612849565b6040820135916060820193838552600092602081019060408101945b61084f6104a28587610fcf565b8110156108b157806108816108776104d261087060019561044f8a8c610fcf565b358b6110a2565b8086528a51611095565b89526108a96108a2855161089c6105148561044f8b8d610fcf565b916119c9565b885161106a565b875201610842565b6103d58661058461057d8761089c6105148b8f51936105776104a261056f8385610fcf565b346101d15760203660031901126101d1576004356108f3816102ea565b60018060a01b03166000526002602052602060018060a01b0360406000205416604051908152f35b346101d15760403660031901126101d157600435610938816102ea565b602435610944816102ea565b604051632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b636004820152336024820152916020836044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa928315610a0157610019936109cd916000916109d2575b5061287b565b61154b565b6109f4915060203d6020116109fa575b6109ec818361020c565b810190611533565b386109c7565b503d6109e2565b611243565b346101d15760003660031901126101d1576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101d15760403660031901126101d157600435610a68816102ea565b602435604051632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b636004820152336024820152916020836044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa928315610a015761001993610af3916000916109d2575061287b565b6115fa565b346101d15760206105bf610b0b366105f7565b91611654565b634e487b7160e01b600052602160045260246000fd5b60091115610b3157565b610b11565b346101d15760203660031901126101d157600435610b53816102ea565b60018060a01b0316600052600160205260ff604060002054166040516009821015610b31576020918152f35b346101d15760203660031901126101d157600435610b9c816102ea565b610bed60005491610bd1610bbb610bb78560ff9060081c1690565b1590565b80948195610c6b575b8115610c4b575b506117b0565b82610be4600160ff196000541617600055565b610c3257611813565b610bf357005b610c0361ff001960005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b610c4661010061ff00196000541617600055565b611813565b303b15915081610c5d575b5038610bcb565b60ff16600114905038610c56565b600160ff8216109150610bc4565b346101d1576103d56103c9610c8d36610306565b6118fb565b346101d15760206105bf61089c366105f7565b346101d15760003660031901126101d1576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b60803660031901126101d157600435610d02816102ea565b60443590602435610d12836102ea565b606435916001600160401b0383116101d15760209361051e6105bf9436906004016105c7565b60a03660031901126101d157600435610d50816102ea565b60243590610d5d826102ea565b6044359160643591610d6e836102ea565b608435926001600160401b0384116101d157602094610d946105bf9536906004016105c7565b949093611afd565b346101d157610daa36610757565b610db66107a4826110d5565b610dbe610f9a565b60608201919060005b610dd18484610fcf565b9050811015610df65780610dee61080960019361044f8888610fcf565b835201610dc7565b50610e0381511515612849565b6040820135916060820193838552600092602081019060408101945b610e2c6104a28587610fcf565b811015610e705780610e4d6108776104d261087060019561044f8a8c610fcf565b8952610e686108a285516107516105148561044f8b8d610fcf565b875201610e1f565b6103d58661058461057d876107516105148b8f51936105776104a261056f8385610fcf565b604051906060610ea5818461020c565b368337565b610eb2610e95565b50610ebc81611c63565b6040810151610ef490610eed906001600160a01b03165b6001600160a01b0316600090815260016020526040902090565b5460ff1690565b610efd81610b27565b600181148015610f87575b15610f1757506102e79061278a565b610f2081610b27565b60028103610f3257506102e790612626565b610f3b81610b27565b60038103610f4d57506102e79061250b565b610f5681610b27565b60048103610f6857506102e7906122a7565b80610f74600592610b27565b03610f82576102e790611dbf565b611c93565b50610f9181610b27565b60068114610f08565b60405190608082018281106001600160401b038211176102075760405260006060838281528260208201528260408201520152565b903590601e19813603018212156101d157018035906001600160401b0382116101d157602001918160051b360383136101d157565b634e487b7160e01b600052603260045260246000fd5b919081101561103c5760051b81013590603e19813603018212156101d1570190565b611004565b634e487b7160e01b600052601160045260246000fd5b906001820180921161106557565b611041565b9190820180921161106557565b60001981019190821161106557565b60011981019190821161106557565b9190820391821161106557565b8181029291811591840414171561106557565b81156110bf570490565b634e487b7160e01b600052601260045260246000fd5b356102e7816102ea565b6110fb90610eed90610ed36001600160a01b0382161515612894565b61110481610b27565b600181036111145750620254e990565b61111d81610b27565b60028114801561117f575b1561113557506202d0cb90565b61113e81610b27565b6003810361114e57506202cdce90565b61115781610b27565b6004810361116757506203001190565b80611173600692610b27565b03610f82576204229890565b5061118981610b27565b60058114611128565b919081101561103c5760051b81013590605e19813603018212156101d1570190565b604051906111c1826101ec565b6000604083606081528260208201520152565b903590601e19813603018212156101d157018035906001600160401b0382116101d1576020019181360383136101d157565b908160209103126101d157516102e7816102ea565b90918060409360208452816020850152848401376000828201840152601f01601f1916010190565b6040513d6000823e3d90fd5b91929060009360009160005b82811061147c575061126e861515612849565b84916112786111b4565b95600094602088019160408901955b61129085611077565b8810156113b3576112c8611338916112bf8d6112ba60206112b28e8c8e611192565b0135876110a2565b6110b5565b90818752611095565b926112eb6112e46112da8b898b611192565b60408101906111d4565b3691610295565b8b52600354602090611305906001600160a01b03166107b3565b6113196113138c8a8c611192565b806111d4565b60405163657dcce560e01b81529586939284928392916004840161121b565b03915afa908115610a015761136361137c92600194600091611385575b506001600160a01b03168a52565b61137561136f8d6118fb565b60200190565b519061106a565b97019691611287565b6113a6915060203d81116113ac575b61139e818361020c565b810190611206565b38611355565b503d611394565b61131392989a50611429999750602095915061140a93526113e36112e46112da6113dc87611077565b8785611192565b87526003546113fa906001600160a01b03166107b3565b9361140481611077565b91611192565b60405163657dcce560e01b81529788939284928392916004840161121b565b03915afa918215610a0157610c8d6113759361136f936102e79760009261145b575b506001600160a01b039091169052565b61147591925060203d6020116113ac5761139e818361020c565b903861144b565b9561149b60019160206114938a87879a989a611192565b01359061106a565b960193919361125b565b6060806040516114b5828261020c565b36903760a08201516001600160a01b0316156114ee57810151156114dc576102e790612918565b60405163127973e960e31b8152600490fd5b60405163044aa57560e41b8152600490fd5b91906000915b8083106115135750505090565b90919261152a60019161063d61051487868861101a565b93019190611506565b908160209103126101d1575180151581036101d15790565b6001600160a01b0381166000818152600160205260409020549192909160ff166009811015610b3157156115e8576001600160a01b03169182156115d7576001600160a01b0316600090815260026020526040902080546001600160a01b031916831790557feec77f6322aea766aacea41ca79d2615f5301e0edbcf9bfe766a594d9d95e1db600080a3565b60405162310f9160e31b8152600490fd5b604051636afff5ed60e11b8152600490fd5b6001600160a01b031680156114ee576009821015610b3157806000526001602052604060002060ff1981541660ff84161790557f7955abe00075979fc908f0d63d8bca5922683856a8270d6ecd19958f3f47c339600080a3565b9092919260009360009160005b82811061178f5750611674861515612849565b839161167e6111b4565b94600094602087019160408801955b61169685611077565b881015611720576116b86116e4916112bf8d6112ba60206112b28e8c8e611192565b926116ca6112e46112da8b898b611192565b8a52600354602090611305906001600160a01b03166107b3565b03915afa908115610a015761170e6117179260019460009161138557506001600160a01b03168a52565b6113758b610eaa565b9701969161168d565b611761999a506113139298969750602095915061140a935261174a6112e46112da6113dc87611077565b86526003546113fa906001600160a01b03166107b3565b03915afa938415610a01576102e794611375936103c49260009261145b57506001600160a01b039091169052565b956117a660019160206114938a87879b989b611192565b9601949194611661565b156117b757565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b604051632474521560e21b8152600060048201523360248201526020816044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa8015610a0157611876916000916109d2575061287b565b6040516301ffc9a760e01b8152633f9940a760e11b60048201526001600160a01b039190911690602081602481855afa908115610a01576000916118dc575b50156114ee57600380546001600160a01b0319166001600160a01b03909216919091179055565b6118f5915060203d6020116109fa576109ec818361020c565b386118b5565b611903610e95565b5061190d81611c63565b604081015161192890610eed906001600160a01b0316610ed3565b61193181610b27565b6001811480156119b6575b1561194b57506102e790612ce5565b61195481610b27565b6002810361196657506102e790612c48565b61196f81610b27565b6003810361198157506102e790612be4565b61198a81610b27565b6004810361199c57506102e790612ae1565b806119a8600592610b27565b03610f82576102e790612a1c565b506119c081610b27565b6006811461193c565b918091825b6119d85750505090565b90919260001984019084821161106557610b0b6105146119f993868661101a565b92801561106557600019019190826119ce565b91939290936000935b808510611a2457505050505090565b9091929394851515600014611aa257600019860186811161106557600191611a50611a9092858861101a565b35611a5a816102ea565b611a6589868961101a565b3591611a70836102ea565b611a7986611077565b8a03611a9b5786905b610d946105148c898c61101a565b950193929190611a15565b3090611a82565b611a9060019186611a5a565b6040519061010082018281106001600160401b0382111761020757604052600060e083606081528260208201528260408201528260608201528260808201528260a08201528260c08201520152565b94959390919560009660009460005b838110611c425750611b6b90611b238a1515612849565b611b5b8396611b4b611b33611aae565b4260c08201526001600160a01b03909c1660208d0152565b6001600160a01b031660408b0152565b6001600160a01b031660a0890152565b600094606088019160e08901955b611b8285611077565b881015611be3576112c8611ba4916112bf8d6112ba60206112b28e8c8e611192565b03915afa908115610a0157611bce611bda9260019460009161138557506001600160a01b03168a52565b61137561136f8d612918565b97019691611b79565b61131392989a50611c0c999750602095915061140a93526113e36112e46112da6113dc87611077565b03915afa918215610a0157611c3d6113759361136f936102e79760009261145b57506001600160a01b039091169052565b612918565b98611c5960019160206114938d888a9d9b9d611192565b9901969496611b0c565b60408101516001600160a01b0316156114ee576020015115611c8157565b604051630f6fa54560e41b8152600490fd5b6040516368a1e68f60e11b8152600490fd5b60405163076fc27360e51b8152600490fd5b6001600160401b0381116102075760051b60200190565b91906040838203126101d1578251926020810151906001600160401b0382116101d157019080601f830112156101d157815190611d0a82611cb7565b92611d18604051948561020c565b82845260208085019360051b8201019182116101d157602001915b818310611d405750505090565b825161ffff811681036101d157815260209283019201611d33565b60005b838110611d6e5750506000910152565b8181015183820152602001611d5e565b90602091611d9781518092818552858086019101611d5b565b601f01601f1916010190565b929190611dba602091604086526040860190611d7e565b930152565b611e4390611dcb610e95565b5060408101516000906001600160a01b0390611e0f90611e029083165b6001600160a01b0316600090815260026020526040902090565b546001600160a01b031690565b1691611e1c83151561289b565b6020815191019283519183604051809781958294632f80bb1d60e01b845260048401611da3565b03925af1918215610a0157600092611e74575b50611e61606061026c565b9182525160208201526000604082015290565b611e929192503d806000833e611e8a818361020c565b810190611cce565b509038611e56565b9080601f830112156101d1578151611eb181611cb7565b92611ebf604051948561020c565b81845260208085019260051b8201019283116101d157602001905b828210611ee75750505090565b602080918351611ef6816102ea565b815201910190611eda565b9080601f830112156101d1578151611f1881611cb7565b92611f26604051948561020c565b81845260208085019260051b8201019283116101d157602001905b828210611f4e5750505090565b8151815260209182019101611f41565b916060838303126101d15782516001600160401b0381116101d15782611f85918501611e9a565b9260208101516001600160401b0381116101d157810183601f820112156101d157805190611fb282611cb7565b91611fc0604051938461020c565b80835260208084019160051b830101918683116101d157602001905b828210612004575050509260408201516001600160401b0381116101d1576102e79201611f01565b8151815260209182019101611fdc565b9061201e82611cb7565b61202b604051918261020c565b828152809261203c601f1991611cb7565b0190602036910137565b9061205082611cb7565b61205d604051918261020c565b828152809261206e601f1991611cb7565b0160005b81811061207e57505050565b6040519060a08201918083106001600160401b03841117610207576020926040526000815260008382015260006040820152600060608201526060608082015282828601015201612072565b80511561103c5760200190565b80516001101561103c5760400190565b805182101561103c5760209160051b010190565b6040519061210a60408361020c565b6002825261060f60f31b6020830152565b906020828203126101d15781516001600160401b0381116101d1576102e79201611f01565b906002821015610b315752565b9080602083519182815201916020808360051b8301019401926000915b83831061217957505050505090565b90919293946020806121c6600193601f1986820301875260a060808b5180518452858101518685015260408101516040850152606081015160608501520151918160808201520190611d7e565b9701930193019193929061216a565b906020808351928381520192019060005b8181106121f35750505090565b82516001600160a01b03168452602093840193909201916001016121e6565b80516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b93929061227a61023d9361226c6060936001895260e060208a015260e089019061214d565b9087820360408901526121d5565b940190612212565b93929061227a61023d9361226c6060936000895260e060208a015260e089019061214d565b6122af610e95565b506122c4815160208082518301019101611f5e565b50926122d08251612014565b936122db8151612046565b916122e461023f565b308152600060208201523060408201526000606082015260005b6123088651611077565b8110156123b8578061234b6123326107b36123256001958b6120e7565b516001600160a01b031690565b61233c838c6120e7565b6001600160a01b039091169052565b6123b161235882876120e7565b5161236283611057565b61236a61024e565b9182528360208301526040820152600060608201526123876120fb565b608082015261239f8361239a8b51611086565b611095565b906123aa828a6120e7565b52876120e7565b50016122fe565b5091509491600092836124226107b36107b360406124409a612414602082019b8c5160606123e58c6120ca565b51015261233c61240e6124076107b36123256124018651611077565b866120e7565b9251611077565b8a6120e7565b01516001600160a01b031690565b9260405197889586948593637c26833760e11b855260048501612247565b03925af1918215610a0157600092612490575b5061246a6000612462846120ca565b5112156128b4565b61247d612477606061026c565b926120ca565b5182525160208201526000604082015290565b6124ae9192503d806000833e6124a6818361020c565b81019061211b565b9038612453565b9190916040818403126101d15780516001600160401b0381116101d157836124de918301611e9a565b9260208201516001600160401b0381116101d1576102e79201611e9a565b60001981146110655760010190565b612513610e95565b506125288151602080825183010191016124b5565b60208301805160409094018051939491939091612561916001600160a01b031661255187612d9e565b9061255b86612d9e565b92612e26565b9161257461256e84612f06565b93612f7c565b906000956000925b6064841115612596575b505050505050611e61606061026c565b9091929394966125af6125a9838a61106a565b60011c90565b90808214612610575080976125d585856125cf8a5160018060a01b031690565b85612e26565b8851908082036125e757505050612586565b101561260357506125f890946124fc565b92919094939461257c565b9491506125f890916124fc565b9750612586565b908160209103126101d1575190565b61268790612632610e95565b5060408101516020906001600160a01b039061265390611e02908316611de8565b169161266083151561289b565b8181519101928351916000604051809781958294632f80bb1d60e01b845260048401611da3565b03925af1918215610a01576000926126a45750611e61606061026c565b6126c791925060203d6020116126ce575b6126bf818361020c565b810190612617565b9038611e56565b503d6126b5565b906020828203126101d15781516001600160401b0381116101d1576102e79201611e9a565b6020818303126101d1578051906001600160401b0382116101d157019080601f830112156101d157815161272d81611cb7565b9261273b604051948561020c565b81845260208085019260051b8201019283116101d157602001905b8282106127635750505090565b8151815260209182019101612756565b6040906102e79392815281602082015201906121d5565b6127ea90612796610e95565b5060006127ad8251602080825183010191016126d5565b60408301516020906127c9906107b3906001600160a01b031681565b93019283516040518096819482936307c0329d60e21b845260048401612773565b03915afa918215610a015760009261280b575b5061247d612477606061026c565b6128299192503d806000833e612821818361020c565b8101906126fa565b90386127fd565b1561283757565b60405163883bf0db60e01b8152600490fd5b1561285057565b604051635269639360e01b8152600490fd5b1561286957565b604051631aa5e6a560e21b8152600490fd5b1561288257565b60405163036be76f60e61b8152600490fd5b156114ee57565b156128a257565b6040516339028fcd60e21b8152600490fd5b156128bb57565b6040516301f9d96160e71b8152600490fd5b156128d457565b604051630279891960e11b8152600490fd5b156128ed57565b604051637974230960e11b8152600490fd5b1561290657565b6040516367678b8760e11b8152600490fd5b612920610e95565b5060e081015161293c90610eed906001600160a01b0316610ed3565b61294581610b27565b600181148015612a09575b1561295f57506102e790614560565b61296881610b27565b6002810361297a57506102e7906142f6565b61298381610b27565b6003810361299557506102e790613f23565b61299e81610b27565b600481036129b057506102e790613afa565b6129b981610b27565b600581036129cb57506102e7906136ed565b6129d481610b27565b600781036129e657506102e79061354f565b806129f2600892610b27565b03612a00576102e790613359565b6102e7906130fe565b50612a1381610b27565b60068114612950565b612a24610e95565b506040810151612a7d906000906001600160a01b0390612a4990611e02908316611de8565b1692612a5684151561289b565b602081519101938451918360405180968195829463cdca175360e01b845260048401611da3565b03925af1908115610a0157600091612aae575b50612a9b606061026c565b9151825260208201526000604082015290565b612ac391503d806000833e611e8a818361020c565b5038612a90565b908160000391808305600019149015171561106557565b612b6f6000612b1792612af2610e95565b50612b07815160208082518301019101611f5e565b509490602083019586519161484a565b9083612b516107b36107b36040612b2c61023f565b308152976020890186905230828a01526060890186905201516001600160a01b031690565b9260405196879586948593637c26833760e11b855260048501612282565b03925af1908115610a0157612bc191612bbb91600091612bcb575b50612bab6000612ba3612b9d8451611077565b846120e7565b5113156128cd565b612bb58151611077565b906120e7565b51612aca565b612a9b606061026c565b612bde913d8091833e6124a6818361020c565b38612b8a565b6060604051612bf3828261020c565b369037612c29612c0d8251602080825183010191016124b5565b906020840193845190604060018060a01b039101511690612e26565b60405191612c36836101ec565b51825260208201526000604082015290565b612c50610e95565b506040810151612ca9906020906001600160a01b0390612c7590611e02908316611de8565b1692612c8284151561289b565b818151910193845191600060405180968195829463cdca175360e01b845260048401611da3565b03925af1908115610a0157600091612cc65750612a9b606061026c565b612cdf915060203d6020116126ce576126bf818361020c565b38612a90565b612ced610e95565b50612d446000612d078351602080825183010191016126d5565b6040840151602090612d23906107b3906001600160a01b031681565b940193845160405180958194829363d06ca61f60e01b845260048401612773565b03915afa8015610a0157612d7391600091612d83575b50612d65606061026c565b92518352612bb58151611077565b5160208201526000604082015290565b612d9891503d806000833e612821818361020c565b38612d5a565b8051612da981611cb7565b91612db7604051938461020c565b818352601f19612dc683611cb7565b013660208501376000198201918083119060005b818110612de957505050505090565b82906001600160a01b03612dfd82876120e7565b51169161106557808303600019019186831161106557612e1f600193896120e7565b5201612dda565b9391909293926000935b612e3a8351611077565b851015612efd576020612e5061232587896120e7565b612e5d61232588876120e7565b90612eb7612e76612325612e708b611057565b896120e7565b604051630e5cfa0d60e21b81526001600160a01b03938416600482015293831660248501529091166044830152606482019390935291829081906084820190565b03816001600160a01b0386165afa8015610a0157600191600091612edf575b50940193612e30565b612ef7915060203d81116126ce576126bf818361020c565b38612ed6565b93505050915090565b60006706f05b59d3b200008202918083046706f05b59d3b200001481151715611065576706f05b59d3b20000915081830403612f6b57810190818111611065578110612f5a57670de0b6b3a7640000900490565b630a77254f60e01b60005260046000fd5b631550e8b760e01b60005260046000fd5b6000906714d1120d7b1600008102918183046714d1120d7b160000148215171561106557506714d1120d7b160000820403612f6b576706f05b59d3b20000810190818111611065578110612f5a57670de0b6b3a7640000900490565b6020818303126101d1578051906001600160401b0382116101d157019080601f830112156101d15781519161300c83611cb7565b9261301a604051948561020c565b80845260208085019160051b830101918383116101d15760208101915b83831061304657505050505090565b82516001600160401b0381116101d1578201906060828703601f1901126101d15760405190613074826101ec565b6020830151613082816102ea565b825260408301516001600160401b0381116101d1576020908401019187601f840112156101d15782516130b48161027a565b946130c2604051968761020c565b81865289602083870101116101d157856130e8606093602098978980809a019101611d5b565b8584015201516040820152815201920191613037565b90613107610e95565b506040820180519091906000906001600160a01b0316600080516020614a908339815191528190036132b657505060a08301516001600160a01b031631925b61315a815160208082518301019101612fd8565b9360005b85518110156131b357806131ac61318861317a6001948a6120e7565b51516001600160a01b031690565b6020613194848b6120e7565b51015160406131a3858c6120e7565b5101519161496c565b500161315e565b50925191935091906131cd906001600160a01b03166107b3565b90600080516020614a90833981519152820361322b5760a08301516131fc92506001600160a01b031631611095565b61320c60808301518210156128e6565b60606132178161026c565b920151825260208201526000604082015290565b613276916020906001600160a01b031660a08501516001600160a01b03165b6040516370a0823160e01b81526001600160a01b03909116600482015293849190829081906024820190565b03915afa8015610a015761329292600091613297575b50611095565b6131fc565b6132b0915060203d6020116126ce576126bf818361020c565b3861328c565b613300906020906132cf906001600160a01b03166107b3565b60a08701516040516370a0823160e01b81526001600160a01b03909116600482015292839190829081906024820190565b03915afa918215610a015791613318575b5092613146565b613331915060203d6020116126ce576126bf818361020c565b38613311565b6001600160a01b03918216815291166020820152604081019190915260600190565b613361610e95565b5060408101805161339a90613380906107b3906001600160a01b031681565b60a0840180519093916020916001600160a01b031661324a565b03915afa918215610a015760009261352e575b506020840180518591906001600160a01b03167399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9d198101613487575b506134566107b36107b36020956134488661324a96600080516020614a9083398151915261342e6107b361341e6134649f9c60e0015160018060a01b031690565b945193516001600160a01b031690565b0361347f5760608d0151905b61344261491f565b9261499b565b50516001600160a01b031690565b91516001600160a01b031690565b03915afa8015610a01576131fc926000916132975750611095565b60009061343a565b60e092909201516060870151604051636fe2528b60e11b81529692949293602092889283926134c3926001600160a01b03169060048501613337565b038173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4948515610a01576107b36107b361324a936134488a602098613456966134649c613511575b50965096995050955050506133dd565b613527908b3d8d116126ce576126bf818361020c565b5038613501565b61354891925060203d6020116126ce576126bf818361020c565b90386133ad565b613557610e95565b5060408101805161357690613380906107b3906001600160a01b031681565b03915afa918215610a0157600092613682575b506020840180518591906001600160a01b03167399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9d1981016135f957506134566107b36107b36020956134488661324a96600080516020614a9083398151915261342e6107b361341e6134649f9c60e0015160018060a01b031690565b9491602061361b6107b36107b360e0600495989698015160018060a01b031690565b604051631a5896b360e31b815292839182905afa8015610a0157602091600091613665575b506060880151966134c36040519889938493636fe2528b60e11b855260048501613337565b61367c9150823d84116113ac5761139e818361020c565b38613640565b61369c91925060203d6020116126ce576126bf818361020c565b9038613589565b6020815260a060806136c0845183602086015260c0850190611d7e565b93600180841b03602082015116604085015260408101516060850152606081015182850152015191015290565b6136f5610e95565b5060208101516001600160a01b0316600080516020614a908339815191521461397b575b613723815161497a565b60e082018051919290916001600160a01b0316926020606083019485519261375f6040519485938493636fe2528b60e11b855260048501613337565b038173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af48015610a015760009360209261380e92613960575b50835160a085015190916137f1916107b39182916001600160a01b031660c08901518b51906137d560808c0151936137c361024e565b998a526001600160a01b03168b8a0152565b604088015260608701526080860152516001600160a01b031690565b9060405195868094819363c04b8d5960e01b8352600483016136a3565b03925af1918215610a0157600092613924575b5060400151600080516020614a9083398151915290613848906001600160a01b03166107b3565b1461385757612a9b606061026c565b6040516370a0823160e01b81523060048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602082602481845afa918215610a0157600092613903575b50803b156101d157604051632e1a7d4d60e01b815260048101929092526000908290602490829084905af18015610a01576138e8575b50612bc1565b806138f760006138fd9361020c565b80610643565b386138e2565b61391d91925060203d6020116126ce576126bf818361020c565b90386138ac565b600080516020614a908339815191529192506107b360406139566138489360203d6020116126ce576126bf818361020c565b9493505050613821565b61397690843d86116126ce576126bf818361020c565b61378d565b60608101517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101d157600090600460405180948193630d0e30db60e41b83525af18015610a01576139da575b50613719565b806138f760006139e99361020c565b386139d4565b95949391613a2a90613a1c613a3593613a098a6000612140565b61012060208b01526101208a019061214d565b9088820360408a01526121d5565b926060870190612212565b84820360e08601526020808251938481520191019160005b818110613a605750506101009150930152565b8351835260209384019390920191600101613a4d565b9092613af1613ae660a060c09598979660e08652805160e0870152613aa46020820151610100880190612140565b60408101516000196001841b019081166101208801526060820151166101408701526080810151610160870152015161018085018690526101a0850190611d7e565b966020840190612212565b60a08201520152565b613b02610e95565b50613b17815160208082518301019101611f5e565b613b286002849593955110156128ff565b60208201516001600160a01b0316600080516020614a9083398151915214613eaf575b613b57612325846120ca565b60e083018051919590916001600160a01b03169560206060860197885192613b936040519485938493636fe2528b60e11b855260048501613337565b038173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af48015610a0157613e92575b5060a0840151613bcf906001600160a01b03166107b3565b92613bf6613bdb61023f565b30815294600060208701526001600160a01b03166040860152565b600060608501526002865111613cc457506107b36107b360209493613c1d613c96946120ca565b5197613c77613c406107b3612325613c3a6107b3612325876120ca565b946120d7565b613c678c519360008b613c5161025d565b9e8f528e01526001600160a01b031660408d0152565b6001600160a01b031660608b0152565b6080890152613c846120fb565b60a0890152516001600160a01b031690565b608084015191600060c08601519661380e604051988996879586946352bbbe2960e01b865260048601613a76565b94916000613cf26107b3613ce08397966107b3968c519161484a565b9451949590946001600160a01b031690565b92613d1860c0880151604051998a978896879563945bcec960e01b8752600487016139ef565b03925af1918215610a0157600092613e5a575b5060400151600080516020614a9083398151915290613d52906001600160a01b03166107b3565b14613d86575b612bbb613d7791613d69606061026c565b93518452612bb58151611077565b60208201526000604082015290565b6040516370a0823160e01b8152306004820152906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602083602481845afa928315610a0157600093613e39575b50803b156101d157604051632e1a7d4d60e01b815260048101939093526000908390602490829084905af1908115610a0157613d7792612bbb92613e24575b50915050613d58565b806138f76000613e339361020c565b38613e1b565b613e5391935060203d6020116126ce576126bf818361020c565b9138613ddc565b600080516020614a908339815191529192506107b36040613e88613d52933d806000833e6124a6818361020c565b9493505050613d2b565b613eaa9060203d6020116126ce576126bf818361020c565b613bb7565b60608201517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101d157600090600460405180948193630d0e30db60e41b83525af18015610a0157613f0e575b50613b4b565b806138f76000613f1d9361020c565b38613f08565b613f2b610e95565b50613f3c60c0820151421115612830565b613f508151602080825183010191016124b5565b606083929301928351946000955b613f688351611077565b8710156142145773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee613f946107b36123258a876120e7565b036140c65760e0850151602090613fb5906107b3906001600160a01b031681565b613fc26123258a886120e7565b908984613fe161232561240e613fdb612325868d6120e7565b94611057565b93613fec8951611086565b8d148d8c6000926000146140bc5761407792506080810151915b6140108d51611086565b036140b45760a001516001600160a01b03165b905b604051631a4c1ca360e01b8152998a9889978896600488016001600160a01b0391821681529181166020830152918216604082015260608101929092526080820192909252911660a082015260c00190565b03925af18015610a0157600191600091614096575b50965b0195613f5e565b6140ae915060203d81116126ce576126bf818361020c565b3861408c565b503090614025565b6140779291614006565b806140d461232589866120e7565b60e08701805190916020916001600160a01b0316604051636fe2528b60e11b81529485928392614108929160048501613337565b038173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4918215610a01576107b3614148926107b3926020956141f95750516001600160a01b031690565b6141556123258a886120e7565b9089600061416f61232561240e613fdb612325868d6120e7565b9361417a8951611086565b8d148d8c849285146141ef576141b592506080810151915b61419c8d51611086565b1485146140b45760a001516001600160a01b0316614023565b03925af18015610a01576001916000916141d1575b509661408f565b6141e9915060203d81116126ce576126bf818361020c565b386141ca565b6141b59291614192565b61420f90863d81116126ce576126bf818361020c565b613448565b935094505050612a9b606061026c565b60009060033d1161423157565b905060046000803e60005160e01c90565b600060443d106102e7576040513d600319016004823e8051913d60248401116001600160401b038411176142af57828201928351916001600160401b0383116142a7573d840160031901858401602001116142a757506102e79291016020019061020c565b949350505050565b92915050565b9060206102e7928181520190611d7e565b3d156142f1573d906142d78261027a565b916142e5604051938461020c565b82523d6000602084013e565b606090565b6142fe610e95565b5060208101516001600160a01b0316600080516020614a90833981519152146144b3575b61432c815161497a565b60e0820180519192916001600160a01b031692602060608401948551926143676040519485938493636fe2528b60e11b855260048501613337565b038173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af48015610a01576000926020926143e892614498575b50845160a086015190916143cb916107b39182916001600160a01b031660c08a01518b51906137d560808d0151936137c361024e565b9060405194858094819363c04b8d5960e01b8352600483016136a3565b03925af160009181614477575b5061444e57614402614224565b6308c379a01461441b575b6144156142c6565b50611ca5565b614423614242565b8061442e575061440d565b60405162461bcd60e51b815290819061444a90600483016142b5565b0390fd5b60409190910151600080516020614a9083398151915290613848906001600160a01b03166107b3565b61449191925060203d6020116126ce576126bf818361020c565b90386143f5565b6144ae90843d86116126ce576126bf818361020c565b614395565b60608101517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101d157600090600460405180948193630d0e30db60e41b83525af18015610a0157614512575b50614322565b806138f760006145219361020c565b3861450c565b919260809361454c92979695978452602084015260a0604084015260a08301906121d5565b6001600160a01b0390951660608201520152565b614568610e95565b5060208101516001600160a01b0316600080516020614a90833981519152146147d6575b6145a08151602080825183010191016126d5565b6145ac612325826120ca565b60e083018051909391906001600160a01b031693602060608401958651936145e86040519586938493636fe2528b60e11b855260048501613337565b038173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4918215610a01576107b3614628926107b3926000956147be5750516001600160a01b031690565b8451608084015160a08501519195929184906001600160a01b03169661466960c0880151604051998a97889687956338ed173960e01b875260048701614527565b03925af1918215610a0157600092614786575b5060400151600080516020614a90833981519152906146a3906001600160a01b03166107b3565b146146b7575b612d7390612d65606061026c565b6040516370a0823160e01b8152306004820152906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602083602481845afa928315610a0157600093614765575b50803b156101d157604051632e1a7d4d60e01b815260048101939093526000908390602490829084905af1918215610a0157612d7392614750575b5090506146a9565b806138f7600061475f9361020c565b38614748565b61477f91935060203d6020116126ce576126bf818361020c565b913861470d565b600080516020614a908339815191529192506107b360406147b46146a3933d806000833e612821818361020c565b949350505061467c565b61420f9060203d6020116126ce576126bf818361020c565b60608101517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101d157600090600460405180948193630d0e30db60e41b83525af18015610a0157614835575b5061458c565b806138f760006148449361020c565b3861482f565b92906148568451612014565b936148618251612046565b9260005b61486f8351611077565b8110156148f0578061489661488c6107b3612325600195886120e7565b61233c838b6120e7565b6148a081866120e7565b516148aa82611057565b6148b261024e565b9182528260208301526040820152600060608201526148cf6120fb565b60808201526148de82886120e7565b526148e981876120e7565b5001614865565b50929361023d92506060614903866120ca565b51015261233c6124016124076107b36123256124018651611077565b6040519061492e60608361020c565b60298252681d594819985a5b195960ba1b6040837f416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c60208201520152565b90916102e79261344261491f565b601481511061498a576014015190565b63a78aa27f60e01b60005260046000fd5b909291928347106149c6576000816102e7956020839451920190855af16149c06142c6565b91614a1a565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608490fd5b91929015614a7c5750815115614a2e575090565b3b15614a375790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561442e5750805190602001fdfe00000000000000000000000099ec76235f8a5a52611b0da5f0c6b09e1dcd2c9ea2646970667358221220770e890281e171cc6bc468a4cf6288c9b4ce8012bacd85fff0416bbbe5d373fe64736f6c634300081a0033";

type DexAdapterConstructorParams =
  | [linkLibraryAddresses: DexAdapterLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DexAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DexAdapter__factory extends ContractFactory {
  constructor(...args: DexAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DexAdapter__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DexAdapterLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d13cb5064fc43aa5afb84d8e93c86c1222\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/TokenApproveLibrary.sol:TokenApproveLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _registry: AddressLike,
    _WNative: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_registry, _WNative, overrides || {});
  }
  override deploy(
    _registry: AddressLike,
    _WNative: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_registry, _WNative, overrides || {}) as Promise<
      DexAdapter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DexAdapter__factory {
    return super.connect(runner) as DexAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DexAdapterInterface {
    return new Interface(_abi) as DexAdapterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DexAdapter {
    return new Contract(address, _abi, runner) as unknown as DexAdapter;
  }
}

export interface DexAdapterLibraryAddresses {
  ["contracts/libraries/TokenApproveLibrary.sol:TokenApproveLibrary"]: string;
}
