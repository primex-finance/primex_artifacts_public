/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DexAdapter,
  DexAdapterInterface,
} from "../../contracts/DexAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WNative",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "ToAddressOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "ToAddressOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dexRouter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "dexType",
        type: "uint256",
      },
    ],
    name: "DexTypeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dexRouter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "quoter",
        type: "address",
      },
    ],
    name: "QuoterChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "WNative",
    outputs: [
      {
        internalType: "contract IWNative",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "dexType",
    outputs: [
      {
        internalType: "enum IDexAdapter.DexType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
        ],
        internalType: "struct IDexAdapter.AmountParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getAmountInByMegaRoutes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
        ],
        internalType: "struct IDexAdapter.AmountParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getAmountOutByMegaRoutes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedPath",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dexRouter",
            type: "address",
          },
        ],
        internalType: "struct IDexAdapter.GetAmountsParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[3]",
        name: "",
        type: "uint256[3]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "dexName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Path[]",
        name: "paths",
        type: "tuple[]",
      },
    ],
    name: "getAmountsInByPaths",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "dexName",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
            ],
            internalType: "struct PrimexPricingLibrary.Path[]",
            name: "paths",
            type: "tuple[]",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Route[]",
        name: "routes",
        type: "tuple[]",
      },
    ],
    name: "getAmountsInByRoutes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedPath",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dexRouter",
            type: "address",
          },
        ],
        internalType: "struct IDexAdapter.GetAmountsParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[3]",
        name: "",
        type: "uint256[3]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "dexName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Path[]",
        name: "paths",
        type: "tuple[]",
      },
    ],
    name: "getAmountsOutByPaths",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "dexName",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
            ],
            internalType: "struct PrimexPricingLibrary.Path[]",
            name: "paths",
            type: "tuple[]",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Route[]",
        name: "routes",
        type: "tuple[]",
      },
    ],
    name: "getAmountsOutByRoutes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dexRouter",
        type: "address",
      },
    ],
    name: "getGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_primexDNS",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountTokenA",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct PrimexPricingLibrary.MegaSwapParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "performMegaRoutesSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "dexName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Path[]",
        name: "paths",
        type: "tuple[]",
      },
    ],
    name: "performPathsSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "dexName",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
            ],
            internalType: "struct PrimexPricingLibrary.Path[]",
            name: "paths",
            type: "tuple[]",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Route[]",
        name: "routes",
        type: "tuple[]",
      },
    ],
    name: "performRoutesSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "primexDNS",
    outputs: [
      {
        internalType: "contract IPrimexDNSV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "quoters",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dexRouter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_dexType",
        type: "uint256",
      },
    ],
    name: "setDexType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dexRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoter",
        type: "address",
      },
    ],
    name: "setQuoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedPath",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dexRouter",
            type: "address",
          },
        ],
        internalType: "struct IDexAdapter.SwapParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[3]",
        name: "",
        type: "uint256[3]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0604090808252346200016d578181620051ec803803809162000024828562000172565b8339810103126200016d576200004860206200004083620001ac565b9201620001ac565b82516301ffc9a760e01b8152637965db0b60e01b60048201526001600160a01b0392906020816024818786165afa90811562000162576000916200011a575b501562000109576080521660a0525161502a9081620001c282396080518181816109da01528181610a6f01528181610afd0152610faa015260a051818181610d02015281816132150152818161331501528181613689015281816137750152818161395601528181613a4201528181614b0f01528181614cb00152614db50152f35b835163044aa57560e41b8152600490fd5b6020813d821162000159575b81620001356020938362000172565b810103126200015557519081151582036200015257503862000087565b80fd5b5080fd5b3d915062000126565b85513d6000823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200019657604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200016d5756fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806301ffc9a71461017b5780631f5f4cbe146101765780633396c1ba1461017157806336dd6b3d1461016c5780633c9c6ff3146101675780633f4a2d271461016257806340fce5d11461015d578063461dfcd5146101585780634c828b5c146101535780635933dd2b1461014e5780636264257a146101495780637b103999146101445780638677f6361461013f57806396954fb91461013a578063c2909fed14610135578063c4d66de814610130578063eb5251a51461012b578063f1a3d00514610126578063f3ec43c714610121578063f4ef97ea1461011c578063f6f1c4c4146101175763fae89f920361000e57610dea565b610d87565b610d31565b610cec565b610cd9565b610cc0565b610bd3565b610b8a565b610b4c565b610a9e565b610a59565b61096f565b610930565b6107e1565b610797565b6106d6565b6106ad565b610689565b6105f7565b610425565b6103fc565b346101d15760203660031901126101d15760043563ffffffff60e01b81168091036101d1576020906301ffc9a760e01b81149081156101c0575b506040519015158152f35b633603f73360e21b149050386101b5565b600080fd5b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761020757604052565b6101d6565b6001600160401b03811161020757604052565b90601f801991011681019081106001600160401b0382111761020757604052565b6040519061010082018281106001600160401b0382111761020757604052565b60405190608082018281106001600160401b0382111761020757604052565b6040519060a082018281106001600160401b0382111761020757604052565b6040519060c082018281106001600160401b0382111761020757604052565b604051906102ca826101ec565b565b6001600160401b03811161020757601f01601f191660200190565b9291926102f3826102cc565b91610301604051938461021f565b8294818452818301116101d1578281602093846000960137010152565b9080601f830112156101d157816020610339933591016102e7565b90565b6001600160a01b038116036101d157565b35906102ca8261033c565b600319906020818301126101d1576004356001600160401b03928382116101d15760609082840301126101d15760405192610392846101ec565b81600401359081116101d15760449260046103af9284010161031e565b83526024810135602084015201356103c68161033c565b604082015290565b6060810192916000915b600383106103e557505050565b6001908251815260208091019201920191906103d8565b346101d15761042161041561041036610358565b611d08565b604051918291826103ce565b0390f35b600319602036820181136101d157600435906001600160401b0382116101d15760c0826004019383360301126101d157906104664260a48301351015614e19565b61046e611182565b90606481019060005b61048183876111e1565b90508110156104b957806104ad6104a56104b49361049f878b6111e1565b9061122c565b358651611261565b85526111cd565b610477565b508391856104c985511515614e32565b6044830135936060860192858452600093828801976084604082019701955b6104fc6104f585886111e1565b905061126e565b81101561058b578061053761052d61052561051e6105869561049f8a8d6111e1565b358d611299565b8551906112ac565b808d52855161128c565b845261057f610578898d8a6105706105678761049f8d610561610559876112cc565b9751986112cc565b956111e1565b8c8101906111e1565b93909261140c565b8a51611261565b89526111cd565b6104e8565b610421886105e36105dc8a87896105708c6105d38f6105b46105ac826112cc565b9651976112cc565b946105cd6104f56105c583856111e1565b9390946111e1565b9161122c565b908101906111e1565b8251611261565b809152604051918291829190602083019252565b346101d15760203660031901126101d157602061061e6004356106198161033c565b611333565b604051908152f35b9181601f840112156101d1578235916001600160401b0383116101d1576020808501948460051b0101116101d157565b9060406003198301126101d15760043591602435906001600160401b0382116101d15761068591600401610626565b9091565b346101d157602061061e61069c36610656565b9161189f565b60009103126101d157565b346101d15760003660031901126101d1576003546040516001600160a01b039091168152602090f35b6003196020368201126101d157600435906001600160401b03908183116101d1576101009083360301126101d15761070c610240565b82600401359182116101d15761078d60e461042194610734610415956004369184010161031e565b84526107426024820161034d565b60208501526107536044820161034d565b6040850152606481013560608501526084810135608085015261077860a4820161034d565b60a085015260c481013560c08501520161034d565b60e08201526112ea565b346101d157602061061e6107aa36610656565b91611847565b600319906020818301126101d157600435916001600160401b0383116101d157826080920301126101d15760040190565b346101d1576107ef366107b0565b6107f8816112cc565b9061082b60209261081961080d8585016112cc565b6001600160a01b031690565b6001600160a01b039091161415614e4b565b610833611182565b90606081019060005b61084683836111e1565b905081101561086957806104ad6104a56108649361049f87876111e1565b61083c565b5091909161087982511515614e32565b60408101359260608301928484526000938682019160408101955b6108a16104f586886111e1565b81101561090a57806108d46108ca6105256108c36109059561049f8b8d6111e1565b358c611299565b808752855161128c565b84526108fe6108f7886108f18d6105d38661049f8d8d51966111e1565b91611ace565b8951611261565b88526111cd565b610894565b610421876105e36105dc886108f18e6105d38d8b51946105cd6104f56105c583856111e1565b346101d15760203660031901126101d157602060043561094f8161033c565b60018060a01b038091166000526002825260406000205416604051908152f35b346101d15760403660031901126101d15760043561098c8161033c565b6024356109988161033c565b604051632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b636004820152336024820152916020836044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa928315610a545761001993610a2191600091610a26575b50614e64565b611080565b610a47915060203d8111610a4d575b610a3f818361021f565b810190610f59565b38610a1b565b503d610a35565b610f71565b346101d15760003660031901126101d1576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101d15760403660031901126101d157600435610abb8161033c565b604051632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b636004820152336024820152906020826044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa918215610a545761001992610b4391600091610a265750614e64565b60243590611128565b346101d157602061061e610b5f36610656565b91611b11565b634e487b7160e01b600052602160045260246000fd5b60091115610b8557565b610b65565b346101d15760203660031901126101d157600435610ba78161033c565b60018060a01b0316600052600160205260ff604060002054166040516009821015610b85576020918152f35b346101d15760203660031901126101d157600435610bf08161033c565b610c3460005491610c1860ff8460081c161580948195610cb2575b8115610c92575b50610ef6565b82610c2b600160ff196000541617600055565b610c7957610f7d565b610c3a57005b610c4a61ff001960005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b610c8d61010061ff00196000541617600055565b610f7d565b303b15915081610ca4575b5038610c12565b6001915060ff161438610c9d565b600160ff8216109150610c0b565b346101d157610421610415610cd436610358565b611a00565b346101d157602061061e6108f136610656565b346101d15760003660031901126101d1576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b60803660031901126101d157600435610d498161033c565b604435610d558161033c565b606435906001600160401b0382116101d157602092610d7b61061e933690600401610626565b9290916024359061140c565b60a03660031901126101d157600435610d9f8161033c565b602435610dab8161033c565b60643591610db88361033c565b608435916001600160401b0383116101d157602093610dde61061e943690600401610626565b939092604435916115a7565b346101d157610df8366107b0565b610e01816112cc565b90610e1660209261081961080d8585016112cc565b610e1e611182565b90606081019060005b610e3183836111e1565b9050811015610e5457806104ad6104a5610e4f9361049f87876111e1565b610e27565b50919091610e6482511515614e32565b60408101359260608301928484526000938682019160408101955b610e8c6104f586886111e1565b811015610ed05780610eae6108ca6105256108c3610ecb9561049f8b8d6111e1565b84526108fe6108f7886107aa8d6105d38661049f8d8d51966111e1565b610e7f565b610421876105e36105dc886107aa8e6105d38d8b51946105cd6104f56105c583856111e1565b15610efd57565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b908160209103126101d1575180151581036101d15790565b6040513d6000823e3d90fd5b604051632474521560e21b8152600060048201523360248201526020916001600160a01b039183816044817f000000000000000000000000000000000000000000000000000000000000000087165afa8015610a5457610fe4916000916110695750614e64565b6040516301ffc9a760e01b815263081e57a760e31b6004820152911691908181602481865afa918215610a545760009261104c575b50501561103a576bffffffffffffffffffffffff60a01b6003541617600355565b60405163044aa57560e41b8152600490fd5b6110629250803d10610a4d57610a3f818361021f565b3880611019565b610a479150853d8711610a4d57610a3f818361021f565b6001600160a01b038082166000818152600160205260409020549293909260ff166009811015610b8557156111165716918215611105576001600160a01b0316600090815260026020526040902080546001600160a01b031916831790557feec77f6322aea766aacea41ca79d2615f5301e0edbcf9bfe766a594d9d95e1db600080a3565b60405162310f9160e31b8152600490fd5b604051636afff5ed60e11b8152600490fd5b6001600160a01b0316801561103a576009821015610b8557806000526001602052604060002060ff1981541660ff84161790557f7955abe00075979fc908f0d63d8bca5922683856a8270d6ecd19958f3f47c339600080a3565b60405190608082018281106001600160401b038211176102075760405260006060838281528260208201528260408201520152565b634e487b7160e01b600052601160045260246000fd5b60001981146111dc5760010190565b6111b7565b903590601e19813603018212156101d157018035906001600160401b0382116101d157602001918160051b360383136101d157565b634e487b7160e01b600052603260045260246000fd5b919081101561124e5760051b81013590603e19813603018212156101d1570190565b611216565b90600182018092116111dc57565b919082018092116111dc57565b6000198101919082116111dc57565b6001198101919082116111dc57565b919082039182116111dc57565b818102929181159184041417156111dc57565b81156112b6570490565b634e487b7160e01b600052601260045260246000fd5b356103398161033c565b604051906112e3826101ec565b6060368337565b60606040516112f8816101ec565b36903760a08101516001600160a01b03161561103a576060810151156113215761033990611dd6565b60405163127973e960e31b8152600490fd5b611370906113699061134f6001600160a01b0382161515614e7d565b6001600160a01b0316600090815260016020526040902090565b5460ff1690565b61137981610b7b565b600181036113895750620254e990565b61139281610b7b565b6002811480156113f9575b156113aa57506202d0cb90565b6113b381610b7b565b600381036113c357506202cdce90565b6113cc81610b7b565b600481036113dc57506203001190565b806113e8600692610b7b565b036113f4576204229890565b614f01565b5061140381610b7b565b6005811461139d565b91939290936000935b80851061142457505050505090565b90919293948515156000146114b95760001986018681116111dc576114a9916114516114a392858861122c565b3561145b8161033c565b61146689868961122c565b35916114718361033c565b61147a8661126e565b8a036114b25786905b61149b6114918c898c61122c565b60208101906111e1565b9490936115a7565b956111cd565b93929190611415565b3090611483565b6114a36114a9918661145b565b919081101561124e5760051b81013590605e19813603018212156101d1570190565b6040519061010082018281106001600160401b0382111761020757604052816060815260e06000918260208201528260408201528260608201528260808201528260a08201528260c08201520152565b903590601e19813603018212156101d157018035906001600160401b0382116101d1576020019181360383136101d157565b908160209103126101d157516103398161033c565b90918060409360208452816020850152848401376000828201840152601f01601f1916010190565b9391959490926000968791885b8481106118195750611613906115cb8a1515614e32565b61160383976115f36115db6114e8565b4260c08201526001600160a01b03909b1660208c0152565b6001600160a01b031660408a0152565b6001600160a01b031660a0880152565b6000945b6116208461126e565b8610156117495761165b6116cb9161164f8b61164a60206116428c8b8d6114c6565b013587611299565b6112ac565b908160608b015261128c565b9261167e61167761166d89888a6114c6565b6040810190611538565b36916102e7565b8852600354602090611698906001600160a01b031661080d565b6116ac6116a68a898b6114c6565b80611538565b60405163657dcce560e01b81529586939284928392916004840161157f565b03915afa908115610a54576116fa6114a3926117139460009161171a575b506001600160a01b031660e08b0152565b61170c6117068a611dd6565b60200190565b5190611261565b9491611617565b61173c915060203d602011611742575b611734818361021f565b81019061156a565b386116e9565b503d61172a565b6117a492969798506117c395506116a6915093602094606089015261177d61167761166d6117768761126e565b87856114c6565b8852600354611794906001600160a01b031661080d565b9361179e8161126e565b916114c6565b60405163657dcce560e01b81529485939284928392916004840161157f565b03915afa8015610a5457610339936117f56117069261170c946000916117fa575b506001600160a01b031660e0830152565b611dd6565b611813915060203d60201161174257611734818361021f565b386117e4565b9861183961183f9160206118318d898b9c999c6114c6565b013590611261565b996111cd565b9592956115b4565b91906000915b80831061185a5750505090565b9091926118726118789161069c61149187868861122c565b936111cd565b919061184d565b6040519061188c826101ec565b6000604083606081528260208201520152565b9092916000938491855b8181106119e057506118bc861515614e32565b83926118c661187f565b946000945b6118d48461126e565b8610156119635761165b611902916118f68b61164a60206116428c8b8d6114c6565b908160208b015261128c565b03915afa908115610a54576119316114a39261193d94600091611944575b506001600160a01b031660408b0152565b61170c6117068a611a00565b94916118cb565b61195d915060203d60201161174257611734818361021f565b38611920565b6117a4929697985061198f95506116a69150936020948589015261177d61167761166d6117768761126e565b03915afa8015610a545761033993610cd46117069261170c946000916119c1575b506001600160a01b03166040830152565b6119da915060203d60201161174257611734818361021f565b386119b0565b956119f56119fb9160206118318a86886114c6565b966111cd565b6118a9565b611a086112d6565b50611a1281612f5f565b6040810151611a2d90611369906001600160a01b031661134f565b611a3681610b7b565b600181148015611abb575b15611a50575061033990612d63565b611a5981610b7b565b60028103611a6b5750610339906126b4565b611a7481610b7b565b60038103611a86575061033990612a79565b611a8f81610b7b565b60048103611aa1575061033990612273565b80611aad600592610b7b565b036113f457610339906128d1565b50611ac581610b7b565b60068114611a41565b918091825b611add5750505090565b9091926000198401908482116111dc57610b5f611491611afe93868661122c565b9280156111dc5760001901919082611ad3565b90916000908193825b828110611ce65750611b2d831515614e32565b8392611b3761187f565b9160009360209788850190604094858701985b611b538561126e565b891015611c4a57611b88611be891611b7f848f8f61164a918f611b77908d8f6114c6565b013590611299565b9081875261128c565b92611ba3611677611b9a8c898b6114c6565b8a810190611538565b89526003548d90611bbc906001600160a01b031661080d565b611bca6116a68d8a8c6114c6565b8b5163657dcce560e01b81529586939284928392916004840161157f565b03915afa908115610a5457611c17611c20928f94611c2695600092611c2d575b50506001600160a01b03168d52565b61170c8a611d08565b986111cd565b9791611b4a565b611c439250803d1061174257611734818361021f565b8f80611c08565b6116a6929a508b979850611c98999b96959150611c7d935261177d611677611c746117768761126e565b87810190611538565b925180978194829363657dcce560e01b84526004840161157f565b03915afa8015610a54576103399561170c9461041093600093611cc7575b50506001600160a01b039091169052565b611cde929350803d1061174257611734818361021f565b903880611cb6565b949193926114a3611cfe9160206118318989876114c6565b9492939194611b1a565b611d106112d6565b50611d1a81612f5f565b6040810151611d3590611369906001600160a01b031661134f565b611d3e81610b7b565b600181148015611dc3575b15611d58575061033990612e20565b611d6181610b7b565b60028103611d73575061033990612795565b611d7c81610b7b565b60038103611d8e575061033990612ba5565b611d9781610b7b565b60048103611da9575061033990612477565b80611db5600592610b7b565b036113f45761033990612987565b50611dcd81610b7b565b60068114611d49565b611dde6112d6565b5060e0810151611dfa90611369906001600160a01b031661134f565b611e0381610b7b565b600181148015611ec7575b15611e1d5750610339906130a0565b611e2681610b7b565b60028103611e38575061033990613490565b611e4181610b7b565b60038103611e53575061033990614410565b611e5c81610b7b565b60048103611e6e5750610339906148c9565b611e7781610b7b565b60058103611e895750610339906137d9565b611e9281610b7b565b60078103611ea4575061033990613aa6565b80611eb0600892610b7b565b03611ebe5761033990613eef565b61033990614185565b50611ed181610b7b565b60068114611e0e565b6001600160401b0381116102075760051b60200190565b81601f820112156101d157805191611f0883611eda565b92611f16604051948561021f565b808452602092838086019260051b8201019283116101d1578301905b828210611f40575050505090565b8380918351611f4e8161033c565b815201910190611f32565b81601f820112156101d157805191611f7083611eda565b92611f7e604051948561021f565b808452602092838086019260051b8201019283116101d1578301905b828210611fa8575050505090565b81518152908301908301611f9a565b90916060828403126101d1578151916001600160401b03928381116101d15784611fe2918301611ef1565b936020808301518581116101d15783019082601f830112156101d15781519161200a83611eda565b92612018604051948561021f565b808452828085019160051b830101918583116101d1578301905b82821061205457505050509360408301519081116101d1576103399201611f59565b81518152908301908301612032565b906020828203126101d15781516001600160401b0381116101d1576103399201611f59565b906002821015610b855752565b60005b8381106120a85750506000910152565b8181015183820152602001612098565b906020916120d181518092818552858086019101612095565b601f01601f1916010190565b90815180825260208092019182818360051b85019501936000915b8483106121085750505050505090565b909192939495848061215283856001950387528a5180518252838101518483015260408082015190830152606080820151908301526080809101519160a0809282015201906120b8565b98019301930191949392906120f8565b90815180825260208080930193019160005b828110612182575050505090565b83516001600160a01b031685529381019392810192600101612174565b9392906121d26102ca936121c46060936000895260e060208a015260e08901906120dd565b908782036040890152612162565b9401906060809160018060a01b03808251168552602082015115156020860152604082015116604085015201511515910152565b9392906121d26102ca936121c46060936001895260e060208a015260e08901906120dd565b80511561124e5760200190565b80516001101561124e5760400190565b805182101561124e5760209160051b010190565b90816000039180830560001914901517156111dc57565b61080d61230960406122ac936122876112d6565b5061229c815160208082518301019101611fb7565b5095906020830196875191612f8f565b906122b5610260565b30815292600060208501819052308587015296879586926122eb9261080d9290916060890186905201516001600160a01b031690565b9260405196879586948593637c26833760e11b85526004850161219f565b03925af1908115610a545761235991612353918491612372575b506123438461233b612335845161126e565b84612248565b511315614e84565b61234d815161126e565b90612248565b5161225c565b6123616102bd565b925183526020830152604082015290565b61238e91503d8086833e612386818361021f565b810190612063565b38612323565b9061239e82611eda565b6123ab604051918261021f565b82815280926123bc601f1991611eda565b0190602036910137565b906123d082611eda565b60406123de8151928361021f565b83825281936123ef601f1991611eda565b019060005b8281106124015750505050565b81519060a08201918083106001600160401b038411176102075760209284526000815282600081830152600085830152606060008184015260808301528287010152016123f4565b60405190604082018281106001600160401b03821117610207576040526002825261060f60f31b6020830152565b61247f6112d6565b508051612496602091828082518301019101611fb7565b506124a18251612394565b906124ac81516123c6565b936124b5610260565b30815291600083830181905230604080860191909152989094906060948686820152865b6124e3895161126e565b81101561259e57806125938b8e61258c612585858f8f908f918f928f938f86612580966125999f61254c936125388261253261080d612525612547968e612248565b516001600160a01b031690565b92612248565b6001600160a01b039091169052565b612248565b51988661255881611253565b9261256161027f565b9b8c528b0152890152870152612575612449565b60808701525161127d565b61128c565b8093612248565b528c612248565b506111cd565b6124d9565b5092509895908561260961080d61080d8a6126269d6125fb869e989c9a9c8d83019c8d51906125cc8c61222b565b5101526125386125f56125ee61080d6125256125e8865161126e565b86612248565b925161126e565b8a612248565b01516001600160a01b031690565b9288519a8b9586948593637c26833760e11b855260048501612206565b03925af1948515610a5457849561266d575b5061264e846126468761222b565b511215614e9d565b61265f6126596102bd565b9561222b565b518552519084015282015290565b6126829195503d8086833e612386818361021f565b9338612638565b908160209103126101d1575190565b9291906126af6020916040865260408601906120b8565b930152565b6126bc6112d6565b506040810151612738906020906001600160a01b0390612704906126f79083165b6001600160a01b0316600090815260026020526040902090565b546001600160a01b031690565b1692612711841515614eb6565b818151910193845191600060405180968195829463cdca175360e01b845260048401612698565b03925af1908115610a5457600091612767575b506127546102bd565b9151825260208201526000604082015290565b612788915060203d811161278e575b612780818361021f565b810190612689565b3861274b565b503d612776565b6127f6906127a16112d6565b5060408101516020906001600160a01b03906127c2906126f79083166126dd565b16916127cf831515614eb6565b8181519101928351916000604051809781958294632f80bb1d60e01b845260048401612698565b03925af1918215610a5457600092612825575b506128126102bd565b9182525160208201526000604082015290565b61283e91925060203d811161278e57612780818361021f565b9038612809565b91906040838203126101d15782519260209081810151906001600160401b0382116101d157019180601f840112156101d157825161288281611eda565b93612890604051958661021f565b818552838086019260051b8201019283116101d1578301905b8282106128b7575050505090565b815161ffff811681036101d15781529083019083016128a9565b6128d96112d6565b506040818101516001600160a01b0390811660009081526002602052918220541691612932919061290b841515614eb6565b602081519101938451918360405180968195829463cdca175360e01b845260048401612698565b03925af1908115610a5457600091612965575b5060405191612953836101ec565b51825260208201526000604082015290565b612980913d8091833e612978818361021f565b810190612845565b5038612945565b6129e7906129936112d6565b506040818101516001600160a01b03908116600090815260026020529182205416916129c0831515614eb6565b6020815191019283519183604051809781958294632f80bb1d60e01b845260048401612698565b03925af1918215610a5457600092612a1a575b5060405191612a08836101ec565b82525160208201526000604082015290565b612a2e91923d8091833e612978818361021f565b5090386129fa565b9190916040818403126101d1578051926001600160401b03938481116101d15781612a62918401611ef1565b9360208301519081116101d1576103399201611ef1565b6060604051612a87816101ec565b369037612abd612aa1825160208082518301019101612a36565b906020840193845190604060018060a01b039101511690612aca565b60405191612953836101ec565b6000949385915b612adb855161126e565b831015612b9d57612b52612af26125258585612248565b612aff6125258689612248565b92612b0f6125256125f588611253565b604051630e5cfa0d60e21b81526001600160a01b039384166004820152948316602486015290911660448401526064830152602091908290829081906084820190565b03816001600160a01b0389165afa908115610a5457612b7a928992612b80575b5050926111cd565b91612ad1565b612b969250803d1061278e57612780818361021f565b3880612b72565b955050505050565b612bad6112d6565b50612bc2815160208082518301019101612a36565b60208301805160409094018051939491939091612bfb916001600160a01b0316612beb87612ed3565b90612bf586612ed3565b92612aca565b91612c0e612c0884614f47565b93614fab565b9060009586925b6064841115612c2d575b5050505050506128126102bd565b909192939496612c46612c40838a611261565b60011c90565b90808214612ca757508097612c6c8585612c668a5160018060a01b031690565b85612aca565b885190808203612c7e57505050612c1f565b1015612c9a5750612c8f90946111cd565b929190949394612c15565b949150612c8f90916111cd565b9750612c1f565b906020828203126101d15781516001600160401b0381116101d1576103399201611ef1565b60209081818403126101d1578051906001600160401b0382116101d157019180601f840112156101d1578251612d0881611eda565b93612d16604051958661021f565b818552838086019260051b8201019283116101d1578301905b828210612d3d575050505090565b81518152908301908301612d2f565b604090610339939281528160208201520190612162565b612d6b6112d6565b50612dc26000612d85835160208082518301019101612cae565b6040840151602090612da19061080d906001600160a01b031681565b940193845160405180958194829363d06ca61f60e01b845260048401612d4c565b03915afa8015610a5457612def91600091612dff575b50612de16102bd565b9251835261234d815161126e565b5160208201526000604082015290565b612e1a913d8091833e612e12818361021f565b810190612cd3565b38612dd8565b612e8090612e2c6112d6565b506000612e43825160208082518301019101612cae565b6040830151602090612e5f9061080d906001600160a01b031681565b93019283516040518096819482936307c0329d60e21b845260048401612d4c565b03915afa918215610a5457600092612eb8575b50612ea5612e9f6102bd565b9261222b565b5182525160208201526000604082015290565b612ecc91923d8091833e612e12818361021f565b9038612e93565b8051612ede81611eda565b91612eec604051938461021f565b818352601f19612efb83611eda565b013660208501376000801980840193808511925b818110612f1f5750505050505090565b83906001600160a01b03612f338288612248565b5116916111dc578381840301918783116111dc57612f54612f5a938a612248565b526111cd565b612f0f565b60408101516001600160a01b03161561103a576020015115612f7d57565b604051630f6fa54560e41b8152600490fd5b9092612f9b8251612394565b93612fa681516123c6565b92600092835b612fb6835161126e565b8110156130355780612fde612fd461080d6125256130309588612248565b612538838c612248565b612fe88186612248565b51612ff282611253565b612ffa61027f565b9182528260208301526040820152866060820152613016612449565b60808201526130258289612248565b526125938188612248565b612fac565b5093949091506102ca9250606061304b8661222b565b5101526125386125e86125ee61080d6125256125e8865161126e565b919260809361308c92979695978452602084015260a0604084015260a0830190612162565b6001600160a01b0390951660608201520152565b6130a86112d6565b506020818101517399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e92916001600160a01b03918216841461330e575b6130eb8351828082518301019101612cae565b926130f86125258561222b565b60e08201805160608401805160408051636fe2528b60e11b81526001600160a01b039687166004820152959093166024860152604485015297909592909190858160648173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af48015610a54576132f1575b50518751608085015160a086015160c087015189516338ed173960e01b815260009b90958c9587956001600160a01b03928316958795899587956131ac959294931692909160048701613067565b03925af1938415610a5457869188956132cb575b5001516131d5906001600160a01b031661080d565b14613201575b506131f6906131e86102bd565b9551865261234d815161126e565b519084015282015290565b83516370a0823160e01b81523060048201527f000000000000000000000000000000000000000000000000000000000000000091909116908381602481855afa908115610a545786916132ae575b50813b156132aa578451632e1a7d4d60e01b81526004810191909152919085908390602490829084905af1918215610a54576131f692613291575b50906131db565b8061329e6132a49261020c565b806106a2565b3861328a565b8580fd5b6132c59150843d861161278e57612780818361021f565b3861324f565b61080d919550916132e86131d5933d808c833e612e12818361021f565b959150916131c0565b61330790863d881161278e57612780818361021f565b503861315e565b60608301517f00000000000000000000000000000000000000000000000000000000000000008316803b156101d157600090600460405180948193630d0e30db60e41b83525af18015610a5457613366575b506130d8565b8061329e6133739261020c565b38613360565b6020815260a06080613396845183602086015260c08501906120b8565b93600180841b03602082015116604085015260408101516060850152606081015182850152015191015290565b60009060033d116133d057565b905060046000803e60005160e01c90565b600060443d1061033957604051600319913d83016004833e81516001600160401b03918282113d60248401111761343e57818401948551938411613446573d8501016020848701011161343e57506103399291016020019061021f565b949350505050565b50949350505050565b9060206103399281815201906120b8565b3d1561348b573d90613471826102cc565b9161347f604051938461021f565b82523d6000602084013e565b606090565b6134986112d6565b506020818101516001600160a01b0392907399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e908416811461376e575b6134d28251614f25565b60e08301805160608501805160408051636fe2528b60e11b81526001600160a01b039687166004820152959093166024860152604485015296909492939091868560648173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4908115610a545761080d958792613751575b50845160a086015189916135c2916001600160a01b031660c08901518d519061358160808c01519361356f61027f565b9586526001600160a01b031687860152565b87840152606083015260808201526135a661080d60009a8b965160018060a01b031690565b90855194858094819363c04b8d5960e01b835260048301613379565b03925af1869181613732575b5061364a57505050505060016135e26133c3565b6308c379a014613618575b61360a576000925b6135fd6102bd565b9451855284015282015290565b613612613460565b50614f13565b6136206133e1565b8061362b57506135ed565b835162461bcd60e51b8152908190613646906004830161344f565b0390fd5b9301519293509091613664906001600160a01b031661080d565b14613673575b506000926135f5565b82516370a0823160e01b815230600482015293907f0000000000000000000000000000000000000000000000000000000000000000168185602481845afa948515610a5457600095613713575b50803b156101d1578351632e1a7d4d60e01b815260048101959095526000908590602490829084905af1938415610a5457600094613700575b509261366a565b8061329e61370d9261020c565b386136f9565b61372b919550823d841161278e57612780818361021f565b93386136c0565b61374a919250893d8b1161278e57612780818361021f565b90386135ce565b61376790893d8b1161278e57612780818361021f565b503861353f565b60608201517f00000000000000000000000000000000000000000000000000000000000000008516803b156101d157600090600460405180948193630d0e30db60e41b83525af18015610a54576137c6575b506134c8565b8061329e6137d39261020c565b386137c0565b6137e16112d6565b506020818101517399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e926001600160a01b03929183168414613a3b575b61381b8151614f25565b60e08201805160608401805160408051636fe2528b60e11b81526001600160a01b0396871660048201529590931660248601526044850152969195909492909190838160648173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af48015610a5457613a1e575b50835160a08501519096906001600160a01b031660c08601518951906080880151926138ad61027f565b9a8b526001600160a01b0316878b01528989015260608901526080880152516001600160a01b03166001600160a01b03166001600160a01b03169583865180809363c04b8d5960e01b8252600482019061390691613379565b03816000809b5af1948515610a5457869188966139f5575b500151613933906001600160a01b031661080d565b14613942575b506135fd6102bd565b83516370a0823160e01b81523060048201527f000000000000000000000000000000000000000000000000000000000000000091909116908281602481855afa908115610a545786916139d8575b50813b156132aa578451632e1a7d4d60e01b815260048101919091529085908290602490829084905af18015610a545715613939578061329e6139d29261020c565b38613939565b6139ef9150833d851161278e57612780818361021f565b38613990565b61080d91965091613a1561393393873d891161278e57612780818361021f565b9691509161391e565b613a3490843d861161278e57612780818361021f565b5038613883565b60608101517f00000000000000000000000000000000000000000000000000000000000000008416803b156101d157600090600460405180948193630d0e30db60e41b83525af18015610a5457613a93575b50613811565b8061329e613aa09261020c565b38613a8d565b613aae6112d6565b50604080820190613b0a613ace61080d61080d855160018060a01b031690565b60a08501805184516370a0823160e01b8082526001600160a01b0390921660048201529560209490939192918591889190829081906024820190565b03915afa958615610a5457600096613d71575b5083870180519093859392917399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e908a906001600160a01b03167399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9d198101613c74575b5061080d613be593613bc9613bd794613c089a85613b9160e061080d98015160018060a01b031690565b81519251909390613baa906001600160a01b031661080d565b6000929103613c6d57606091500151905b613bc3613d94565b92613ddf565b50516001600160a01b031690565b91516001600160a01b031690565b86519283526001600160a01b031660048301529092839190829081906024820190565b03915afa938415610a5457600094613c27928691613c50575b5061128c565b90613c386080860151831015614ecf565b6060613c426102bd565b950151855284015282015290565b613c679150843d861161278e57612780818361021f565b38613c21565b5090613bbb565b969295613c9261080d61080d60e0600495015160018060a01b031690565b8a51631a5896b360e31b815292839182905afa8015610a54578891600091613d54575b5060608c01518a51636fe2528b60e11b81526001600160a01b03998a16600482015291909816602482015260448101979097528660648173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4918215610a545761080d8896613bc9613bd79461080d948f613c089c613be599613d37575b5095509a509450509350613b67565b613d4d908d803d1061278e57612780818361021f565b5038613d28565b613d6b9150823d841161174257611734818361021f565b38613cb5565b8492919650613d8c90833d851161278e57612780818361021f565b959091613b1d565b60405190613da1826101ec565b60298252681d594819985a5b195960ba1b6040837f416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c60208201520152565b90929192834710613e0a57600081610339956020839451920190855af1613e04613460565b91613e5e565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608490fd5b91929015613ec05750815115613e72575090565b3b15613e7b5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015613ed35750805190602001fd5b60405162461bcd60e51b8152908190613646906004830161344f565b613ef76112d6565b50604081018051613f519190613f179061080d906001600160a01b031681565b60a0840180516040516370a0823160e01b8082526001600160a01b0390921660048201526020959293909286918491829081906024820190565b03915afa928315610a545785926000946140e8575b5082870180519095907399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e9089906001600160a01b03167399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9d198101614043575b5061080d613fd793613bc9613bd794613ffb9b85613b9160e061080d98015160018060a01b031690565b6040519283526001600160a01b031660048301529093849190829081906024820190565b03915afa8015610a545761401692600091613c50575061128c565b906140276080840151831015614ecf565b60606140316102bd565b93015183528201526000604082015290565b60e0919091015160608b0151604051636fe2528b60e11b81526001600160a01b039384166004820152929091166024830152604482015291948260648173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4968715610a545761080d8996613bc9613bd79461080d948e613fd798613ffb9e6140cb575b5095509b509450509350613fad565b6140e1908d803d1061278e57612780818361021f565b50386140bc565b614100919450833d851161278e57612780818361021f565b9238613f66565b90916060828403126101d157815161411e8161033c565b92602083015161412d8161033c565b926040810151906001600160401b0382116101d1570181601f820112156101d1578051614159816102cc565b92614167604051948561021f565b818452602082840101116101d1576103399160208085019101612095565b61418d6112d6565b506040810180516141e0906020906141af9061080d906001600160a01b031681565b60a08501516040516370a0823160e01b81526001600160a01b03909116600482015292839190829081906024820190565b03915afa908115610a54576000916143f1575b50614208835160208082518301019101614107565b602086018051929391929091906001600160a01b03167399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9d198101614339575b505061080d6142d195613bc96020956142a0957399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e61427961080d61080d985160018060a01b031690565b60009103614333575060608b0151905b614291613d94565b926001600160a01b0316613ddf565b60a08501516040516370a0823160e01b81526001600160a01b03909116600482015293849190829081906024820190565b03915afa8015610a54576142ec9260009161431a575061128c565b6142fc6080830151821015614ecf565b60606143066102bd565b920151825260208201526000604082015290565b613c67915060203d60201161278e57612780818361021f565b90614289565b6060880151604051636fe2528b60e11b81526001600160a01b039283166004820152929091166024830152604482015260208160648173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4958615610a5457613bc96020956142a0957399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e61427961080d61080d9861080d986142d19e6143d4575b50985050505095509550509561423b565b6143ea908d3d8f1161278e57612780818361021f565b50386143c3565b61440a915060203d60201161278e57612780818361021f565b386141f3565b6144186112d6565b5061442960c0820151421115614e19565b805191614440602093848082518301019101612a36565b606084929401938451936000945b614458835161126e565b8610156147505773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee61448461080d6125258987612248565b036145b85760e085015188906144a49061080d906001600160a01b031681565b6144b16125258988612248565b906144bf6125258a88612248565b846144cf6125256125f58d611253565b936144da895161127d565b8c148c8c6000926000146145ae5761456692506080810151915b6144fe8d5161127d565b036145a65760a001516001600160a01b0316905b604051631a4c1ca360e01b81526001600160a01b039485166004820152958416602487015296831660448601526064850198909852608484019590955290951660a4820152938492839190829060c4820190565b03925af18015610a545761458391600091614589575b50956111cd565b9461444e565b6145a09150893d8b1161278e57612780818361021f565b3861457c565b503090614512565b61456692916144f4565b6146136145c86125258886612248565b60e08701805160408051636fe2528b60e11b81526001600160a01b03948516600480830191909152949092166024830152604482018690529093909291908c90859081906064820190565b038173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4938415610a54578c94614733575b50516001600160a01b03169089614651818a612248565b516001600160a01b0316918a614667838b612248565b516001600160a01b0316958a61467c85611253565b6146869082612248565b516001600160a01b031699815161469c9061127d565b60009661456695918890820361472957506146bd6080830151945b5161127d565b1487146147215760a001516001600160a01b0316925b519a8b998a988997631a4c1ca360e01b8952880194909360a094979692939760c0870198600180881b038096818094168a521660208901521660408701526060860152608085015216910152565b5030926146d3565b6146bd90946146b7565b61474990853d871161278e57612780818361021f565b503861463a565b9450959250505061475f6102bd565b925183528201526000604082015290565b959493916147a76147de91949294600089526147996101209660209780898d01528b01906120dd565b9089820360408b0152612162565b9160608801906060809160018060a01b03808251168552602082015115156020860152604082015116604085015201511515910152565b85810360e087015282808351928381520192019260005b828110614809575050506101009150930152565b8451845293810193928101926001016147f5565b90926148c061488960a060c09598979660e08652805160e087015261484b6020820151610100880190612088565b600180831b038060408301511661012088015260608201511661014087015260808101516101608701520151856101808601526101a08501906120b8565b9660208401906060809160018060a01b03808251168552602082015115156020860152604082015116604085015201511515910152565b60a08201520152565b6148d16112d6565b508051906148e9602092838082518301019101611fb7565b929091936148fb600286511015614ee8565b808201517399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e906001600160a01b039081168214614dae575b6149336125258861222b565b9160e085019561499161494c885160018060a01b031690565b97606088019a878c5160409b8c519586928392636fe2528b60e11b845260049c8d850160409194939294606082019560018060a01b0380921683521660208201520152565b038173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4928315610a54578a93614d91575b5060a08901516001600160a01b0316908c906149d2610260565b308152956000878c018190526001600160a01b0390941686880152929c8d93908460608901528251600210614bec57508b96948b9694614a75614a9495614a6561080d96614a2261080d9761222b565b5199614a4261080d612525614a3c61080d6125258761222b565b94612238565b935195614a4d61029e565b9b8c528d8c01526001600160a01b03909116908a0152565b6001600160a01b03166060880152565b6080860152614a82612449565b60a0860152516001600160a01b031690565b908b88614abf8d60c060808a01519901519051988997889687956352bbbe2960e01b8752860161481d565b03925af1958615610a545787918997614bc3575b500151614ae8906001600160a01b031661080d565b14614af8575b50506135fd6102bd565b84516370a0823160e01b81523083820190815290927f00000000000000000000000000000000000000000000000000000000000000009290921691908490849081906020010381855afa928315610a54578793614ba4575b50813b15614ba0578551632e1a7d4d60e01b8152908101928352918691839182908490829060200103925af18015610a5457614b8d575b80614aee565b8061329e614b9a9261020c565b38614b87565b8680fd5b614bbc919350843d861161278e57612780818361021f565b9138614b50565b61080d91975091614be3614ae893883d8a1161278e57612780818361021f565b97915091614ad3565b8496614c419160c08f9e9f979561080d8f96614c2492614c119161080d9b5191612f8f565b9b51909b996001600160a01b0390911690565b970151915163945bcec960e01b8152998a98899788968701614770565b03925af1948515610a545787918996614d6b575b500151614c6a906001600160a01b031661080d565b14614c99575b5050612353614c8f91614c816102bd565b9651875261234d815161126e565b9084015282015290565b84516370a0823160e01b81523083820190815290927f00000000000000000000000000000000000000000000000000000000000000009290921691908590849081906020010381855afa928315610a54578793614d4c575b50813b15614ba0578551632e1a7d4d60e01b815290810192835292918691849182908490829060200103925af1908115610a5457614c8f9261235392614d39575b5091614c70565b8061329e614d469261020c565b38614d32565b614d64919350853d871161278e57612780818361021f565b9138614cf1565b61080d91965091614d88614c6a933d808d833e612386818361021f565b96915091614c55565b614da790893d8b1161278e57612780818361021f565b50386149b8565b60608401517f00000000000000000000000000000000000000000000000000000000000000008216803b156101d157600090600460405180948193630d0e30db60e41b83525af18015610a5457614e06575b50614927565b8061329e614e139261020c565b38614e00565b15614e2057565b60405163883bf0db60e01b8152600490fd5b15614e3957565b604051635269639360e01b8152600490fd5b15614e5257565b604051631aa5e6a560e21b8152600490fd5b15614e6b57565b60405163036be76f60e61b8152600490fd5b1561103a57565b15614e8b57565b604051630279891960e11b8152600490fd5b15614ea457565b6040516301f9d96160e71b8152600490fd5b15614ebd57565b6040516339028fcd60e21b8152600490fd5b15614ed657565b604051637974230960e11b8152600490fd5b15614eef57565b6040516367678b8760e11b8152600490fd5b6040516368a1e68f60e11b8152600490fd5b60405163076fc27360e51b8152600490fd5b6014815110614f35576014015190565b60405163a78aa27f60e01b8152600490fd5b6706f05b59d3b20000808202918083048214811517156111dc5781830403614f99578101908181116111dc578110614f8757670de0b6b3a7640000900490565b604051630a77254f60e01b8152600490fd5b604051631550e8b760e01b8152600490fd5b6714d1120d7b16000090818102918183048114821517156111dc57820403614f99576706f05b59d3b200008101908181116111dc578110614f8757670de0b6b3a764000090049056fea2646970667358221220e301396bb5723b05f4663bc0fc6fb7c317124d13682f4c9d0f64cfd08473d42464736f6c63430008120033";

type DexAdapterConstructorParams =
  | [linkLibraryAddresses: DexAdapterLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DexAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DexAdapter__factory extends ContractFactory {
  constructor(...args: DexAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DexAdapter__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DexAdapterLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d13cb5064fc43aa5afb84d8e93c86c1222\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/TokenApproveLibrary.sol:TokenApproveLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _registry: AddressLike,
    _WNative: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_registry, _WNative, overrides || {});
  }
  override deploy(
    _registry: AddressLike,
    _WNative: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_registry, _WNative, overrides || {}) as Promise<
      DexAdapter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DexAdapter__factory {
    return super.connect(runner) as DexAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DexAdapterInterface {
    return new Interface(_abi) as DexAdapterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DexAdapter {
    return new Contract(address, _abi, runner) as unknown as DexAdapter;
  }
}

export interface DexAdapterLibraryAddresses {
  ["contracts/libraries/TokenApproveLibrary.sol:TokenApproveLibrary"]: string;
}
