/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ActivityRewardDistributor,
  ActivityRewardDistributorInterface,
} from "../../../contracts/ActivityRewardDistributor/ActivityRewardDistributor";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "buckets",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdatedTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "scaledTotalSupply",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isFinished",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "fixedReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdatedRewardTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerDay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bucketAddress",
            type: "address",
          },
          {
            internalType: "enum IActivityRewardDistributor.Role",
            name: "role",
            type: "uint8",
          },
        ],
        internalType: "struct IActivityRewardDistributor.BucketWithRole[]",
        name: "bucketsArray",
        type: "tuple[]",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "rewardPerDay",
        type: "uint256",
      },
    ],
    name: "decreaseRewardPerDay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dns",
    outputs: [
      {
        internalType: "contract IPrimexDNSV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
    ],
    name: "getBucketAccumulatedReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bucketAddress",
            type: "address",
          },
          {
            internalType: "enum IActivityRewardDistributor.Role",
            name: "role",
            type: "uint8",
          },
        ],
        internalType: "struct IActivityRewardDistributor.BucketWithRole[]",
        name: "bucketsArray",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getClaimableReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserInfoFromBucket",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "fixedReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdatedRewardIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oldBalance",
            type: "uint256",
          },
        ],
        internalType: "struct IActivityRewardDistributorStorage.UserInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_pmx",
        type: "address",
      },
      {
        internalType: "contract IPrimexDNSV3",
        name: "_dns",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "contract ITraderBalanceVault",
        name: "_traderBalanceVault",
        type: "address",
      },
      {
        internalType: "contract IWhiteBlackList",
        name: "_whiteBlackList",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pmx",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "increaseAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerDay",
        type: "uint256",
      },
    ],
    name: "setupBucket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "traderBalanceVault",
    outputs: [
      {
        internalType: "contract ITraderBalanceVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBucketV3",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
    ],
    name: "updateUserActivity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBucketV3",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "newBalances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
    ],
    name: "updateUsersActivities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawPmx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100c1576000549060ff8260081c1661006f575060ff80821603610034575b60405161233b90816100c78239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a71461161a575081630460f0f3146115f15781630b49839d146115c857816310982b3c146113dd5781631ad4c4b314611021578163266aa8a514610fe45781633f4ba83a14610ed45781635c975abb14610eb057816361d027b314610e875781636706cb6b14610c1b578163785ad74614610b625781637b10399914610b395781638036032d146109b65781638456cb59146108c55781639968861e1461089c578163c88157e314610821578163cc2a9a5b146103de578163e1a91ba6146101f057508063e313b249146101415763fdfd56c91461010157600080fd5b3461013d578060031936011261013d57610119611683565b60243592600284101561013a5750602092610133916120d3565b9051908152f35b80fd5b5080fd5b503461013d57606036600319011261013d5761015b611683565b9160243592600284101561013d576101a860609484610178611699565b94808280516101868161176e565b828152826020820152015260018060a01b03809516815260ce60205220611713565b509116600052602052806000209080516101c18161176e565b825492838252826002600183015492602085019384520154920191825282519384525160208401525190820152f35b9050346103da57610200366116af565b9291939060018060a01b03604460208260cb5416855192838092632474521560e21b82527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb8a8301523360248301525afa9081156103d05788916103a2575b5015610393578516865260ce6020528186206002821015610380578161028491611713565b50946008860192835486101561037157509061029f916120d3565b806006860155600985015491818311600014610365578442915b60038801926102d984546102d360028c01938454906118f0565b906118fd565b6102e860018b0191825461189f565b9055429055556102fb84870154866122b4565b9055426007860155836103175750505050600a60001991015580f35b610320916118f0565b9062015180918281029281840414901517156103525750610346600a9261034c92611910565b4261189f565b91015580f35b634e487b7160e01b855260119052602484fd5b84600a870154916102b9565b516302f8fa5360e41b81528490fd5b634e487b7160e01b875260218452602487fd5b50505163036be76f60e61b8152fd5b6103c3915060203d81116103c9575b6103bb81836117bc565b8101906117de565b3861025f565b503d6103b1565b84513d8a823e3d90fd5b8280fd5b83833461013d5760c036600319011261013d576001600160a01b0392803584811692919083900361081d5760249283359186831680930361081957610421611699565b926064359288841680940361081457608435918983168093036108105760a435938a851680950361080c5789549a60ff8c60081c161597888d819a6107fe575b5080156107df575b156107865760ff19808e166001178d559b9c89610775575b5016908b89519a6301ffc9a760e01b808d528c84637965db0b60e01b91015260209c8d818481895afa93841561065e57908e929194610756575b5083610707575b836106b8575b83610669575b8361060f575b836105b7575b505050156105a957506bffffffffffffffffffffffff60a01b948560cf54161760cf558460cb54161760cb558360ca54161760ca558260c954161760c9558160cd54161760cd5560cc54161760cc5561056b85549460ff8660081c1690610540826117f6565b610549826117f6565b60018055610556826117f6565b61055f826117f6565b606554166065556117f6565b610573578380f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989261ff00191684555160018152a18180808380f35b885163044aa57560e41b8152fd5b8c519081526329abf30760e11b858201529250908290818b5afa908115610605578d916105e8575b508d8b816104da565b6105ff91508b3d8d116103c9576103bb81836117bc565b8d6105df565b8a513d8f823e3d90fd5b9250508d8b51838152633df6cef760e01b858201528d8184818d5afa91821561065e57908e92610641575b50926104d4565b6106589150823d84116103c9576103bb81836117bc565b3861063a565b8d51903d90823e3d90fd5b9250508d8b518381526336372b0760e01b858201528d8184818b5afa91821561065e57908e9261069b575b50926104ce565b6106b29150823d84116103c9576103bb81836117bc565b38610694565b9250508d8b518381526312b3ed2b60e01b858201528d8184818c5afa91821561065e57908e926106ea575b50926104c8565b6107019150823d84116103c9576103bb81836117bc565b386106e3565b9250508d8b5183815263081e57a760e31b858201528d8184818a5afa91821561065e57908e92610739575b50926104c2565b6107509150823d84116103c9576103bb81836117bc565b38610732565b61076e919450823d84116103c9576103bb81836117bc565b92386104bb565b61ffff1916610101178d558d610481565b895162461bcd60e51b8152602081850152602e818d01527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158d816107f0575b50610469565b6001915060ff16148d6107ea565b6001915060ff16108d610461565b8980fd5b8880fd5b600080fd5b8580fd5b8380fd5b83903461013d5760a036600319011261013d5761083c611683565b67ffffffffffffffff906024358281116108985761085d903690850161173d565b929093604435918211610819576108769136910161173d565b90608435936002851015610894576108919560643594611d62565b80f35b8680fd5b8480fd5b50503461013d578160031936011261013d5760cd5490516001600160a01b039091168152602090f35b9050346103da57826003193601126103da5760cb548251632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb8382015233602482015290602090829060449082906001600160a01b03165afa9081156109a957849161098b575b501561097d575060207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916109686118ac565b600160ff19606554161760655551338152a180f35b905163036be76f60e61b8152fd5b6109a3915060203d81116103c9576103bb81836117bc565b38610935565b50505051903d90823e3d90fd5b8391503461013d578260031936011261013d57803567ffffffffffffffff81116103da5783916109e8913691016116e2565b9190926109f361166d565b6001600160a01b03949193849291839087165b828510610a17576020878751908152f35b909192939587610a30610a2b89878961187b565b61188b565b16835260209060ce82528684209180610a4a8a888a61187b565b0135600293848210156108945790610a6191611713565b5090600982015415610b2c579080610ad99493928660005252886000209280840154918215610b1e57610ac6610acd936102d3610ad39794670de0b6b3a764000094600190818101549260ff60058301541615610ae2575b50508654960154906118f0565b049061189f565b9061189f565b96611856565b93929190610a06565b610b0e9293916102d3610acd924290600a84015480831015610b16575b506003840154930154906118f0565b903880610ab9565b915038610aff565b505050610ad391549061189f565b505096610ad99150611856565b50503461013d578160031936011261013d5760cb5490516001600160a01b039091168152602090f35b9050346103da57816003193601126103da57610b7c611683565b6001600160a01b0316835260ce60205281832060243593600285101561013a575061014093610baa91611713565b5060018101549260028201549260038301549083015460ff600585015416600685015491600786015493600887015495600a60098901549801549881519a8b5260208b015289015260608801521515608087015260a086015260c085015260e0840152610100830152610120820152f35b9050346103da5760803660031901126103da57610c36611683565b9160243560028110156108985760cb548251632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b63858201523360248201526064359360209390926001600160a01b039260448035939287918391829088165afa908115610e7d578a91610e60575b5015610e505790610cd783928a95948a16865260ce8752610cd081868820611713565b50996120d3565b90600889019680885403610dde575b5080610d1e575b50505050505054908115600014610d0b575050600a60001991015580f35b61032060098401546006850154906118f0565b8592610d7892610d40838c6009810193845491818314610dba575b505061189f565b905560c95485516323b872dd60e01b8152338b8201908152306020820152604081019490945296879492909116928492839160600190565b03925af1908115610db15750610d93575b8080808893610ced565b81610da992903d106103c9576103bb81836117bc565b503880610d89565b513d88823e3d90fd5b60059142600283015560068201554260078201550160ff198154169055388e610d39565b8260068b01558260098b015411600014610e4257610e3442915b60038c01928c610e226001610e1887546102d360028601968754906118f0565b920191825461189f565b9055429055808a558a8c0154906122b4565b90554260078a015538610ce6565b610e34600a8b015491610df8565b835163036be76f60e61b81528790fd5b610e779150863d88116103c9576103bb81836117bc565b38610cad565b85513d8c823e3d90fd5b50503461013d578160031936011261013d5760cc5490516001600160a01b039091168152602090f35b50503461013d578160031936011261013d5760209060ff6065541690519015158152f35b9050346103da57826003193601126103da5760cb548251632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d88382015233602482015290602090829060449082906001600160a01b03165afa9081156109a9578491610fc6575b501561097d576065549060ff821615610f8c575060ff1916606555513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b610fde915060203d81116103c9576103bb81836117bc565b38610f44565b833461013a57608036600319011261013a57610ffe611683565b61100661166d565b9060643590600282101561081d576108919260443591611a5f565b9050823461013a576020928360031936011261013d5767ffffffffffffffff92803584811161081d5761105790369083016116e2565b94906002966001968888541461139a578888556110726118ac565b60cf548651630723eb0360e51b815233878201526001600160a01b039a918490829060249082908f165afa908115611390578991611373575b50611363578793885b8381106111c957505060c95460cd54885163a9059cbb60e01b8152908c166001600160a01b03168882019081526020810187905290935084925083918c169082908b90829060400103925af180156111bf576111a1575b50508660cd54169660c95416873b1561081957845163220eb46560e11b8152338582019081526001600160a01b0390921660208301526040820192909252959694959094869186919082908490829060600103925af1801561119757611173575b8486805580f35b83116111845750528280808061116c565b634e487b7160e01b845260419052602483fd5b83513d87823e3d90fd5b816111b792903d106103c9576103bb81836117bc565b50878061110b565b86513d89823e3d90fd5b8b6111d8610a2b83878661187b565b168a5260ce8552888a20856111ee83878661187b565b0135908482101561135f579061120391611713565b5060098101541561134f57338b52808652898b20968754918d868a0180546112b4575b50505081156112a45761123a828d9261189f565b975561124a610a2b83878661187b565b908661125784888761187b565b013591858310156112a057908e61129b9493928d5192835216907fb163b3b4233df3f97edbed53bf70628a14bbc4d7d9a2d8dc5349cd466383653a893392a4611856565b6110b4565b8c80fd5b8a5163093c58cd60e21b81528a90fd5b93670de0b6b3a7640000610ac683859760056112ed969701805460ff8116156112f7575b505054970154948d01966102d38854876118f0565b92558e8d81611226565b429184600a8d0154928385101561133d575b505050508c61132560038c0154918c01916102d38354856118f0565b611333858d0191825461189f565b90555538806112d8565b60ff1916179055905038808481611309565b895163aedbcd8360e01b81528990fd5b8b80fd5b86516333df015b60e01b81528690fd5b61138a9150843d86116103c9576103bb81836117bc565b8b6110ab565b88513d8b823e3d90fd5b855162461bcd60e51b8152808601839052601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b83833461013d576113ed366116af565b90929160018060a01b03908160cb54169484518096632474521560e21b8252888a8301523360248301528160446020998a935afa9081156115be5788916115a1575b501561159157828216875260ce8652848720600282101561157e57906114588161145f93611713565b50926120d3565b600982019081548561147183836118f0565b1061156e5785611480916118f0565b809255600883015491821560001461151d57505050908495966114e3959392600a600019915b0155878260c954169260cc54169186519788958694859363a9059cbb60e01b8552840160209093929193604081019460018060a01b031681520152565b03925af190811561151457506114f7578280f35b8161150d92903d106103c9576103bb81836117bc565b5081808280f35b513d85823e3d90fd5b90611527916118f0565b620151809081810291818304149015171561155b5791600a611555610346899a9b946114e39a989796611910565b916114a6565b634e487b7160e01b885260118952602488fd5b865163547dc75760e11b81528a90fd5b634e487b7160e01b885260218952602488fd5b845163036be76f60e61b81528890fd5b6115b89150873d89116103c9576103bb81836117bc565b8961142f565b86513d8a823e3d90fd5b50503461013d578160031936011261013d5760ca5490516001600160a01b039091168152602090f35b50503461013d578160031936011261013d5760c95490516001600160a01b039091168152602090f35b8491346103da5760203660031901126103da573563ffffffff60e01b81168091036103da576020925063187d5ef960e11b811490811561165c575b5015158152f35b6301ffc9a760e01b14905083611655565b602435906001600160a01b038216820361081457565b600435906001600160a01b038216820361081457565b604435906001600160a01b038216820361081457565b6060906003190112610814576004356001600160a01b038116810361081457906024356002811015610814579060443590565b9181601f840112156108145782359167ffffffffffffffff8311610814576020808501948460061b01011161081457565b90600281101561172757600b020190600090565b634e487b7160e01b600052603260045260246000fd5b9181601f840112156108145782359167ffffffffffffffff8311610814576020808501948460051b01011161081457565b6060810190811067ffffffffffffffff82111761178a57604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761178a57604052565b90601f8019910116810190811067ffffffffffffffff82111761178a57604052565b90816020910312610814575180151581036108145790565b156117fd57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b60001981146118655760010190565b634e487b7160e01b600052601160045260246000fd5b91908110156117275760061b0190565b356001600160a01b03811681036108145790565b9190820180921161186557565b60ff606554166118b857565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b9190820391821161186557565b8181029291811591840414171561186557565b811561191a570490565b634e487b7160e01b600052601260045260246000fd5b60005b8381106119435750506000910152565b8181015183820152602001611933565b60208183031261081457805167ffffffffffffffff9182821161081457019082601f8301121561081457815190811161178a576040519261199e601f8301601f1916602001856117bc565b81845260208284010111610814576119bc9160208085019101611930565b90565b91908260809103126108145781516001600160a01b038116810361081457916020810151600381101561081457916060604083015192015190565b60409160208252611a1a8151809281602086015260208686019101611930565b601f01601f1916010190565b67ffffffffffffffff811161178a5760051b60200190565b8051156117275760200190565b80518210156117275760209160051b010190565b93929060018060a01b03908160ca5416938260409788519687916306fdde0360e01b83526000988991816004998a92165afa918215611d585791608091611ac1938a92611d34575b508b51808095819463481d98fb60e11b83528b83016119fa565b03915afa908115611d2a578791611cf9575b50818116908115611ce957611ae98784926121f4565b163303611cd9578652602060ce81528887209560029687821015611cc65790611b1191611713565b50956009870154158015611cb8575b8015611cac575b611ca057895199611b378b6117a0565b6001808c52958336818e013784611b4d8d611a3e565b91169052805194611b5d866117a0565b868652833681880137611b6f86611a3e565b52429860038901998a548015600014611c535750611b90848b0154826118f0565b600a8b01611b9f82825461189f565b9055611bb060078c0191825461189f565b90555b838a0155805b878110611be1575050505050505050611bdd929394506008820154910154906122b4565b9055565b80611c49878f611c4e94611c35918f8f8c8f92611c11611c2e93820194611c0a88875492611a4b565b519061189f565b9188611c1d8888611a4b565b51168d52528c8c8c200154906118f0565b9055611a4b565b5116611c41838b611a4b565b51908d6121a0565b611856565b611bb9565b600a8b015480831015611c88575b50611c73906102d3868d0154846118f0565b611c81898c0191825461189f565b9055611bb3565b60058c01805460ff19168b1790559150611c73611c61565b50505050505050509050565b50600887015415611b27565b5060ff600588015416611b20565b634e487b7160e01b895260218752602489fd5b885163036be76f60e61b81528590fd5b8951630983ac6960e11b81528690fd5b611d1a915060803d8111611d23575b611d1281836117bc565b8101906119bf565b50505038611ad3565b503d611d08565b89513d89823e3d90fd5b611d519192503d808c833e611d4981836117bc565b810190611953565b9038611aa7565b8a513d8a823e3d90fd5b60ca54604080516306fdde0360e01b8152949998979396600496949590946001600160a01b039490936000929190861690839083908b9082908a165afa9182156120c95791608091611dd19385926120ad575b50855163481d98fb60e11b815293849283918291828f016119fa565b03915afa9081156120a3578291612082575b5084611def8b836121f4565b163303612072578416815260209260ce845282822060028b101561205f578a611e1791611713565b509860098a0154158015612051575b8015612045575b61203657611e3a8d611a26565b9c8585519e8f90611e4b90826117bc565b828152019060051b82019136831161089857905b82821061201e57505050611e7286611a26565b95611e7f845197886117bc565b8087528487019060051b82019136831161081d578590915b83831061200e57505050506001429989600381019b8c548015600014611fc05750906002611ec7910154826118f0565b600a8c01611ed682825461189f565b9055611ee760078d0191825461189f565b90555b60028b015503611f7957805b868110611f195750505050505050611bdd929394506008820154910154906122b4565b80611c4986611f608f94611f74958b8f8f90611f41611c2e92820193611c0a87865492611a4b565b9087611f4d8787611a4b565b51168c528d5260028c8c200154906118f0565b5116611f6c838a611a4b565b51908c6121a0565b611ef6565b9396975050509250959094955b858110611f9557505050505050565b80611c4984611fa7611fbb9486611a4b565b5116611fb38388611a4b565b5190886121a0565b611f86565b600a83015480831015611ff6575b506102d36002611fe193940154846118f0565b611fef848d0191825461189f565b9055611eea565b60058401805460ff19168717905591506102d3611fce565b8235815291810191869101611e97565b81358881168103610819578152908601908601611e5f565b50505050505050505050509050565b5060088a015415611e2d565b5060ff60058b015416611e26565b634e487b7160e01b835260218952602483fd5b825163036be76f60e61b81528890fd5b61209a915060803d8111611d2357611d1281836117bc565b50505038611de3565b83513d84823e3d90fd5b6120c29192503d8087833e611d4981836117bc565b9038611db5565b84513d85823e3d90fd5b6001600160a01b0316600090815260ce6020526040902090600281101561218a576120fd91611713565b50600781015480156121835780600a83015490600384015415612150575b504210156121485762015180610ac683600861213f60066119bc97015495426118f0565b910154906118fd565b506009015490565b915061216a6121636002850154426118f0565b809361189f565b91600182011561211b5761217d9161189f565b3861211b565b5050600090565b634e487b7160e01b600052602160045260246000fd5b9060018060a01b0316600052806020526040600020906002820191600183549201906121ec670de0b6b3a76400006121e48454956102d360018601978854906118f0565b04825461189f565b905554905555565b90600281101561218a5761227d576040516358a06f0760e01b81526001600160a01b03916020908290600490829086165afa9081156122715760009161223957501690565b6020813d8211612269575b81612251602093836117bc565b8101031261013d575190828216820361013a57501690565b3d9150612244565b6040513d6000823e3d90fd5b604051631f1b131360e31b81526001600160a01b03916020908290600490829086165afa9081156122715760009161223957501690565b6000929190816122c657506000925050565b620151809004670de0b6b3a7640000908181029181830414901517156122f1576119bc929350611910565b634e487b7160e01b84526011600452602484fdfea26469706673582212206ba48285b66c3a3566c938674d47788de1898312ae6c36b9b2a480b1457a36c464736f6c63430008120033";

type ActivityRewardDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ActivityRewardDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ActivityRewardDistributor__factory extends ContractFactory {
  constructor(...args: ActivityRewardDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ActivityRewardDistributor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ActivityRewardDistributor__factory {
    return super.connect(runner) as ActivityRewardDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ActivityRewardDistributorInterface {
    return new Interface(_abi) as ActivityRewardDistributorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ActivityRewardDistributor {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ActivityRewardDistributor;
  }
}
