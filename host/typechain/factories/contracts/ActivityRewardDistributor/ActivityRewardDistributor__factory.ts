/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ActivityRewardDistributor,
  ActivityRewardDistributorInterface,
} from "../../../contracts/ActivityRewardDistributor/ActivityRewardDistributor";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "buckets",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdatedTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "scaledTotalSupply",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isFinished",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "fixedReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdatedRewardTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerDay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bucketAddress",
            type: "address",
          },
          {
            internalType: "enum IActivityRewardDistributor.Role",
            name: "role",
            type: "uint8",
          },
        ],
        internalType: "struct IActivityRewardDistributor.BucketWithRole[]",
        name: "bucketsArray",
        type: "tuple[]",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "rewardPerDay",
        type: "uint256",
      },
    ],
    name: "decreaseRewardPerDay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dns",
    outputs: [
      {
        internalType: "contract IPrimexDNSV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
    ],
    name: "getBucketAccumulatedReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bucketAddress",
            type: "address",
          },
          {
            internalType: "enum IActivityRewardDistributor.Role",
            name: "role",
            type: "uint8",
          },
        ],
        internalType: "struct IActivityRewardDistributor.BucketWithRole[]",
        name: "bucketsArray",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getClaimableReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserInfoFromBucket",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "fixedReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdatedRewardIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oldBalance",
            type: "uint256",
          },
        ],
        internalType: "struct IActivityRewardDistributorStorage.UserInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_pmx",
        type: "address",
      },
      {
        internalType: "contract IPrimexDNSV3",
        name: "_dns",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "contract ITraderBalanceVault",
        name: "_traderBalanceVault",
        type: "address",
      },
      {
        internalType: "contract IWhiteBlackList",
        name: "_whiteBlackList",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pmx",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "increaseAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerDay",
        type: "uint256",
      },
    ],
    name: "setupBucket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "traderBalanceVault",
    outputs: [
      {
        internalType: "contract ITraderBalanceVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBucketV3",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
    ],
    name: "updateUserActivity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBucketV3",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "newBalances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
    ],
    name: "updateUsersActivities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        internalType: "enum IActivityRewardDistributor.Role",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawPmx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460bd576000549060ff8260081c16606b575060ff808216036031575b6040516122fe90816100c38239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a1386022565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816301ffc9a714611643575080630460f0f31461161a5780630b49839d146115f157806310982b3c146114355780631ad4c4b314611080578063266aa8a51461103f5780633f4ba83a14610f2d5780635c975abb14610f0a57806361d027b314610ee15780636706cb6b14610c7d578063785ad74614610bc05780637b10399914610b975780638036032d14610a1a5780638456cb59146109375780639968861e1461090e578063c88157e314610894578063cc2a9a5b146103f6578063e1a91ba6146101f8578063e313b2491461013a5763fdfd56c9146100fd57600080fd5b34610137576040366003190112610137576101166116b3565b60243591600283101561013757602061012f8484612014565b604051908152f35b80fd5b5034610137576060366003190112610137576101546116b3565b60243560028110156101f457906101a46040926060946101726116c9565b93818680516101808161179e565b828152826020820152015260018060a01b0316815260ce6020528481209050611743565b5060009160018060a01b03168252602052206040516101c28161179e565b815491828252604060026001830154926020850193845201549201918252604051928352516020830152516040820152f35b8280fd5b503461013757610207366116df565b60cb54604051632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb600482015233602482015291929190602090829060449082906001600160a01b03165afa9081156103eb5785916103bc575b50156103aa576001600160a01b038316845260ce602052604084206002821015610396578161029891611743565b509260088401918254841015610384576102b191612014565b806006850155600984015491818311600014610378578342915b60038701926102eb84546102e560028b019384549061180a565b9061182d565b6102fa60018a01918254611860565b90554290555561030e6004860154856121d6565b90554260078501558261032957505050600a60001991015580f35b6103329161180a565b6201518081029080820462015180149015171561036457610358600a9261035e92611840565b42611860565b91015580f35b634e487b7160e01b84526011600452602484fd5b83600a860154916102cb565b6040516302f8fa5360e41b8152600490fd5b634e487b7160e01b85526021600452602485fd5b60405163036be76f60e61b8152600490fd5b6103de915060203d6020116103e4575b6103d681836117d0565b8101906117f2565b3861026a565b503d6103cc565b6040513d87823e3d90fd5b50346101375760c0366003190112610137576004356001600160a01b03811690819003610890576024356001600160a01b03811691908290036101f45761043b6116c9565b916064356001600160a01b038116929083900361088c576084356001600160a01b03811692908390036108885760a4356001600160a01b038116908190036108845786549560ff8760081c161596878098610877575b8015610860575b156108045760ff1981166001178955876107f3575b506040516301ffc9a760e01b8152637965db0b60e01b60048201526001600160a01b03919091169190602081602481865afa90811561066d5789916107d4575b508061077d575b80610726575b806106cf575b80610678575b80610616575b15610604576001600160601b0360a01b60cf54161760cf556001600160601b0360a01b60cb54161760cb556001600160601b0360a01b60ca54161760ca556001600160601b0360a01b60c954161760c9556001600160601b0360a01b60cd54161760cd556001600160601b0360a01b60cc54161760cc558154906105c760ff8360081c1661059981612213565b6105a281612213565b600180556105af81612213565b6105b881612213565b60ff1960655416606555612213565b6105cf575080f35b61ff00191681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b60405163044aa57560e41b8152600490fd5b506040516301ffc9a760e01b81526329abf30760e11b60048201526020816024818a5afa90811561066d57899161064e575b5061050c565b610667915060203d6020116103e4576103d681836117d0565b38610648565b6040513d8b823e3d90fd5b506040516301ffc9a760e01b8152633df6cef760e01b6004820152602081602481855afa90811561066d5789916106b0575b50610506565b6106c9915060203d6020116103e4576103d681836117d0565b386106aa565b506040516301ffc9a760e01b81526336372b0760e01b6004820152602081602481885afa90811561066d578991610707575b50610500565b610720915060203d6020116103e4576103d681836117d0565b38610701565b506040516301ffc9a760e01b81526312b3ed2b60e01b6004820152602081602481895afa90811561066d57899161075e575b506104fa565b610777915060203d6020116103e4576103d681836117d0565b38610758565b506040516301ffc9a760e01b8152633f9940a760e11b6004820152602081602481875afa90811561066d5789916107b5575b506104f4565b6107ce915060203d6020116103e4576103d681836117d0565b386107af565b6107ed915060203d6020116103e4576103d681836117d0565b386104ed565b61ffff1916610101178855386104ad565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156104985750600160ff821614610498565b50600160ff821610610491565b8680fd5b8580fd5b8480fd5b5080fd5b50346101375760a0366003190112610137576108ae6116b3565b60243567ffffffffffffffff81116101f4576108ce90369060040161176d565b909160443567ffffffffffffffff811161088c576108f090369060040161176d565b906084359360028510156108845761090b9560643594611ce1565b80f35b503461013757806003193601126101375760cd546040516001600160a01b039091168152602090f35b503461013757806003193601126101375760cb54604051632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb600482015233602482015290602090829060449082906001600160a01b03165afa908115610a0f5782916109f0575b50156103aa576109b66120cb565b600160ff1960655416176065557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b610a09915060203d6020116103e4576103d681836117d0565b386109a8565b6040513d84823e3d90fd5b50346101375760403660031901126101375760043567ffffffffffffffff811161089057610a4c903690600401611712565b610a57929192611698565b82919082906001600160a01b03165b828410610a7857602085604051908152f35b9293919290916001600160a01b03610a99610a9487878a61186d565b61187d565b16835260ce602052604083206020610ab287878a61186d565b013590600282101561088c5790610ac891611743565b5090600982015415610b8d5790600191604060008581528360205220916002830154908115610b7a5792670de0b6b3a7640000610b29610b30936102e58789610b369901549060ff60058201541615610b41575b508986549601549061180a565b0490611860565b90611860565b945b01929190610a66565b90610b30610b6c926102e542600a83015480421015610b72575b50600260038401549301549061180a565b38610b1c565b905038610b5b565b5050610b87915490611860565b94610b38565b9460019150610b38565b503461013757806003193601126101375760cb546040516001600160a01b039091168152602090f35b503461013757604036600319011261013757610bda6116b3565b6001600160a01b0316815260ce6020526040812060243591600283101561013757610140610c088484611743565b506001810154906002810154906003810154600482015460ff600584015416600684015490600785015492600886015494600a600988015497015497604051998a5260208a0152604089015260608801521515608087015260a086015260c085015260e0840152610100830152610120820152f35b503461013757608036600319011261013757610c976116b3565b60243560028110156101f45760cb54604051632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b6360048201523360248201526064359291604480359291602091839182906001600160a01b03165afa908115610ed6578691610eb7575b50156103aa576001600160a01b038416855260ce602052604085208592610d3d91610d36908290611743565b5095612014565b600885019380855403610e45575b5081610d7e575b505050548015600014610d6b5750600a60001991015580f35b610332600983015460068401549061180a565b81610de191610d9f6020946009890192835490808214610e22575b50611860565b905560c9546040516323b872dd60e01b81523360048201523060248201526044810192909252909384926001600160a01b039092169183919082906064820190565b03925af18015610e1757610df8575b808491610d52565b610e109060203d6020116103e4576103d681836117d0565b5038610df0565b6040513d86823e3d90fd5b4260028c015560068b01554260078b015560058a0160ff19815416905538610d99565b81600687015581600987015411600014610ea957610e9b42915b6003880192610e7984546102e560028c019384549061180a565b610e8860018b01918254611860565b90554290558087556004880154906121d6565b905542600786015538610d4b565b610e9b600a87015491610e5f565b610ed0915060203d6020116103e4576103d681836117d0565b38610d0a565b6040513d88823e3d90fd5b503461013757806003193601126101375760cc546040516001600160a01b039091168152602090f35b5034610137578060031936011261013757602060ff606554166040519015158152f35b503461013757806003193601126101375760cb54604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8600482015233602482015290602090829060449082906001600160a01b03165afa908115610a0f578291611020575b50156103aa5760655460ff811615610fe45760ff19166065557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b611039915060203d6020116103e4576103d681836117d0565b38610f9e565b5034610137576080366003190112610137576110596116b3565b611061611698565b9060643590600282101561107c5761090b92604435916119c6565b8380fd5b50346101375760203660031901126101375760043567ffffffffffffffff8111610890576110b2903690600401611712565b6002600154146113f05760026001556110c96120cb565b60cf54604051630723eb0360e51b815233600482015290602090829060249082906001600160a01b03165afa908115610e175784916113d1575b506113bf57829133835b83811061120a5760c95460cd5460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810188905288928892602091839160449183918891165af180156111ff576111e2575b5060cd5460c9546001600160a01b0391821692849290911690833b156101f45760405163220eb46560e11b81523360048201526001600160a01b0392909216602483015260448201529181908390606490829084905af180156111d5576111c5575b6001805580f35b6111ce916117d0565b81816111be565b50604051903d90823e3d90fd5b6111fa9060203d6020116103e4576103d681836117d0565b61115c565b6040513d85823e3d90fd5b6001600160a01b03611220610a9483878761186d565b16865260ce60205260408620602061123983878761186d565b013560028110156113bb5761124d91611743565b50906009820154156113a957828752816020526040872095878780549460028201805461130b575b5050505082156112f95761128a838992611860565b965561129a610a9482878761186d565b9160206112a883888861186d565b01359060028210156112f5576040519081526001936001600160a01b03169033907fb163b3b4233df3f97edbed53bf70628a14bbc4d7d9a2d8dc5349cd466383653a90602090a40161110d565b8880fd5b60405163093c58cd60e21b8152600490fd5b610b29826102e5600180670de0b6b3a7640000956005611348999a9d9801805460ff811615611353575b5050549301549701998a5490508761180a565b935587873880611275565b4291600a8801549182421015611397575b505050600386015461137f60028801916102e583548561180a565b61138d858901918254611860565b9055553880611335565b60ff1916851790559050388080611364565b60405163aedbcd8360e01b8152600490fd5b8780fd5b6040516333df015b60e01b8152600490fd5b6113ea915060203d6020116103e4576103d681836117d0565b38611103565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b503461013757611444366116df565b91906044602060018060a01b0360cb541660405192838092632474521560e21b82528960048301523360248301525afa9081156103eb5785916115d2575b50156103aa576001600160a01b038216845260ce60205260408420600282101561039657906114b4816114bb93611743565b5092612014565b60098201908154846114cd838361180a565b106115c057846114dc9161180a565b809255600883015491821560001461156f5750505061154191602091600a600019915b015560c95460cc5460405163a9059cbb60e01b81526001600160a01b039182166004820152602481019390935291938492909116908290869082906044820190565b03925af18015610a0f57611553575080f35b61156b9060203d6020116103e4576103d681836117d0565b5080f35b906115799161180a565b620151808102908082046201518014901517156115ac5791600a6115a66103586115419694602096611840565b916114ff565b634e487b7160e01b85526011600452602485fd5b60405163547dc75760e11b8152600490fd5b6115eb915060203d6020116103e4576103d681836117d0565b38611482565b503461013757806003193601126101375760ca546040516001600160a01b039091168152602090f35b503461013757806003193601126101375760c9546040516001600160a01b039091168152602090f35b9050346108905760203660031901126108905760043563ffffffff60e01b81168091036101f4576020925063187d5ef960e11b8114908115611687575b5015158152f35b6301ffc9a760e01b14905038611680565b602435906001600160a01b03821682036116ae57565b600080fd5b600435906001600160a01b03821682036116ae57565b604435906001600160a01b03821682036116ae57565b60609060031901126116ae576004356001600160a01b03811681036116ae579060243560028110156116ae579060443590565b9181601f840112156116ae5782359167ffffffffffffffff83116116ae576020808501948460061b0101116116ae57565b90600281101561175757600b020190600090565b634e487b7160e01b600052603260045260246000fd5b9181601f840112156116ae5782359167ffffffffffffffff83116116ae576020808501948460051b0101116116ae57565b6060810190811067ffffffffffffffff8211176117ba57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176117ba57604052565b908160209103126116ae575180151581036116ae5790565b9190820391821161181757565b634e487b7160e01b600052601160045260246000fd5b8181029291811591840414171561181757565b811561184a570490565b634e487b7160e01b600052601260045260246000fd5b9190820180921161181757565b91908110156117575760061b0190565b356001600160a01b03811681036116ae5790565b60005b8381106118a45750506000910152565b8181015183820152602001611894565b6020818303126116ae5780519067ffffffffffffffff82116116ae570181601f820112156116ae57805167ffffffffffffffff81116117ba5760405192611905601f8301601f1916602001856117d0565b818452602082840101116116ae576119239160208085019101611891565b90565b91908260809103126116ae5781516001600160a01b03811681036116ae5791602081015160038110156116ae57916060604083015192015190565b604091602082526119818151809281602086015260208686019101611891565b601f01601f1916010190565b67ffffffffffffffff81116117ba5760051b60200190565b8051156117575760200190565b80518210156117575760209160051b010190565b60ca546040516306fdde0360e01b81529294926001600160a01b0391821692909160009183916004918391165afa8015611cb057611a2592608092600092611cbc575b50604051808095819463481d98fb60e11b835260048301611961565b03915afa908115611cb057600091611c7e575b506001600160a01b038116908115611c6c576001600160a01b0390611a5e90849061210f565b1633036103aa5760005260ce6020526040600020906002811015611c5657611a8591611743565b506009810154158015611c48575b8015611c3c575b611c3757604091825190611aae84836117d0565b60018252601f1984019485366020850137611ac8836119a5565b6001600160a01b039091169052835194611ae285876117d0565b60018652366020870137611af5856119a5565b524293600383019485548015600014611be45750611b1760028501548261180a565b600a8501611b26828254611860565b9055611b3760078601918254611860565b90559391935b6002840155600483019360005b60018110611b6b5750505050906008611b679201549054906121d6565b9055565b600190611bb5611b878854611b8084886119b2565b5190611860565b600287858060a01b03611b9a86896119b2565b5116600090878060a01b031681528a6020522001549061180a565b8755611bde828060a01b03611bca83866119b2565b5116611bd683876119b2565b519088612273565b01611b4a565b600a85015480421015611c1e575b50611c05906102e560028701548461180a565b611c1460018601918254611860565b9055939193611b3d565b60058601805460ff191660011790559150611c05611bf2565b505050565b50600881015415611a9a565b5060ff600582015416611a93565b634e487b7160e01b600052602160045260246000fd5b604051630983ac6960e11b8152600490fd5b611ca0915060803d608011611ca9575b611c9881836117d0565b810190611926565b50505038611a38565b503d611c8e565b6040513d6000823e3d90fd5b611cda9192503d806000833e611cd281836117d0565b8101906118b4565b9038611a09565b60ca546040516306fdde0360e01b8152949593946001600160a01b0391821692909160009183916004918391165afa8015611cb057611d4092608092600092611cbc5750604051808095819463481d98fb60e11b835260048301611961565b03915afa908115611cb057600091611ff2575b506001600160a01b03611d66888361210f565b1633036103aa576001600160a01b0316600090815260ce602052604090206002871015611c565786611d9791611743565b50936009850154158015611fe4575b8015611fd8575b611fcf57600093611dbd8161198d565b92611dcb60405194856117d0565b818452602084019160051b81019036821161088457915b818310611faf57505050611df58361198d565b92611e0360405194856117d0565b808452602084019060051b82019136831161088857905b828210611f9f5750505060014296600386019788548015600014611f515750611e4760028801548261180a565b600a8801611e56828254611860565b9055611e6760078901918254611860565b90555b600287015503611f0a57600484019492805b848110611e99575050505050906008611b679201549054906121d6565b600190611edb611eae8954611b8084896119b2565b838060a01b03611ebe84886119b2565b5116848060a01b031685528860205260026040862001549061180a565b8855611f04828060a01b03611ef083876119b2565b5116611efc83886119b2565b519089612273565b01611e7c565b9394509192905b848110611f1f575050505050565b600190611f4b6001600160a01b03611f3783866119b2565b5116611f4383876119b2565b519087612273565b01611f11565b600a88015480421015611f87575b50611f72906102e560028a01548461180a565b611f80848901918254611860565b9055611e6a565b60058901805460ff1916861790559150611f72611f5f565b8135815260209182019101611e1a565b82356001600160a01b03811681036113bb57815260209283019201611de2565b50505050505050565b50600885015415611dad565b5060ff600586015416611da6565b61200b915060803d608011611ca957611c9881836117d0565b50505038611d53565b6001600160a01b0316600090815260ce60205260409020906002811015611c565761203e91611743565b50600781015480156120c45780600a83015490600384015415612091575b504210156120895762015180610b298360086120806006611923970154954261180a565b9101549061182d565b506009015490565b91506120ab6120a460028501544261180a565b8093611860565b91600182011561205c576120be91611860565b3861205c565b5050600090565b60ff606554166120d757565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b906002811015611c565760049160209161219e576040516358a06f0760e01b815292839182906001600160a01b03165afa908115611cb05760009161215c575b506001600160a01b031690565b6020813d602011612196575b81612175602093836117d0565b810103126108905751906001600160a01b038216820361013757503861214f565b3d9150612168565b604051631f1b131360e31b815292839182906001600160a01b03165afa908115611cb05760009161215c57506001600160a01b031690565b816121e2575050600090565b62015180900490670de0b6b3a7640000820291808304670de0b6b3a764000014901517156118175761192391611840565b1561221a57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b9060409060009060018060a01b031681528260205220906002820191600183549201906122c0670de0b6b3a76400006122b88454956102e5600186019788549061180a565b048254611860565b90555490555556fea2646970667358221220d0733dc6c1cc44cec80c54f2bd044c370229eddbfcd71cfe843ada07326d325564736f6c634300081a0033";

type ActivityRewardDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ActivityRewardDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ActivityRewardDistributor__factory extends ContractFactory {
  constructor(...args: ActivityRewardDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ActivityRewardDistributor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ActivityRewardDistributor__factory {
    return super.connect(runner) as ActivityRewardDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ActivityRewardDistributorInterface {
    return new Interface(_abi) as ActivityRewardDistributorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ActivityRewardDistributor {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ActivityRewardDistributor;
  }
}
