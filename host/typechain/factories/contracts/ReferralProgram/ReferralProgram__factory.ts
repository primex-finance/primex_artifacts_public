/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ReferralProgram,
  ReferralProgramInterface,
} from "../../../contracts/ReferralProgram/ReferralProgram";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "parent",
        type: "address",
      },
    ],
    name: "RegisteredUser",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "SetReferralByAdmin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "SetReferrerByAdmin",
    type: "event",
  },
  {
    inputs: [],
    name: "MAGIC_MESSAGE",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referrer",
        type: "address",
      },
    ],
    name: "getReferralsOf",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referrer",
        type: "address",
      },
    ],
    name: "getReferralsOfLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReferrers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "referralsOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "referrerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "referrers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_sig",
        type: "bytes",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "referrals",
            type: "address[]",
          },
        ],
        internalType: "struct IReferralProgramStorage.ReferralProgramUnit[]",
        name: "referralProgramUnits",
        type: "tuple[]",
      },
    ],
    name: "setReferrals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460bd576000549060ff8260081c16606b575060ff808216036031575b60405161111990816100c38239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a1386022565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806301c7224f14610c7657806301ffc9a714610c205780632f0ae3be14610be65780634b02c01714610877578063552f79251461082d5780635fb4f8b4146107ca5780637b103999146107a157806382fbdc9c1461041e5780638f6a98e51461039e578063c4d66de814610177578063d21cacdf146101355763f743d89c146100a057600080fd5b34610130576020366003190112610130576001600160a01b036100c1610d20565b166000526035602052604060002060405190816020825491828152019160005260206000209060005b8181106101115761010d8561010181870382610d36565b60405191829182610dd8565b0390f35b82546001600160a01b03168452602090930192600192830192016100ea565b600080fd5b34610130576020366003190112610130576001600160a01b03610156610d20565b166000526034602052602060018060a01b0360406000205416604051908152f35b3461013057602036600319011261013057610190610d20565b6000549060ff8260081c161591828093610391575b801561037a575b1561031e5760ff1981166001176000558261030c575b506040516301ffc9a760e01b8152637965db0b60e01b60048201526001600160a01b039190911690602081602481855afa908115610300576000916102d1575b50156102bf576001600160601b0360a01b60335416176033556000549060ff8260081c16156102665761023157005b61ff0019166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b60405163044aa57560e41b8152600490fd5b6102f3915060203d6020116102f9575b6102eb8183610d36565b810190610e1b565b83610202565b503d6102e1565b6040513d6000823e3d90fd5b61ffff191661010117600055826101c2565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156101ac5750600160ff8216146101ac565b50600160ff8216106101a5565b346101305760003660031901126101305760405180602060365491828152019060366000527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b89060005b8181106103ff5761010d8561010181870382610d36565b82546001600160a01b03168452602090930192600192830192016103e8565b346101305760203660031901126101305760043567ffffffffffffffff811161013057366023820112156101305780600401359067ffffffffffffffff821161013057366024838301011161013057336000908152603460205260409020546001600160a01b03161580610788575b156107765761049a610d8a565b90815192839160009272184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b861015610753575b806d04ee2d6d415b85acef8100000000600a921015610738575b662386f26fc10000811015610724575b6305f5e100811015610713575b612710811015610704575b60648110156106f6575b10156106ec575b6001830194600a602161054061052a89610d6e565b986105386040519a8b610d36565b808a52610d6e565b602089019690601f19013688378801015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530490811561058057600a90610551565b5050602494610630946105f461062895603a6040519384926105cf60208501977f19457468657265756d205369676e6564204d6573736167653a0a000000000000895251809285870190610db5565b83016105e48251809360208685019101610db5565b010103601f198101835282610d36565b51902090602061060384610d6e565b936106116040519586610d36565b808552806000988994018387013784010152610f11565b919091610f49565b6001600160a01b038116903382146106da57818352603760205260ff604084205416156106b4575b50338252603460205260408220816001600160601b0360a01b825416179055808252603560205261068c3360408420610ef4565b337fefca3fdd715e739f1e080ddc77892fc7ccce29dc771f8b664f46554d69efda4c8380a380f35b818352603760205260408320805460ff191660011790556106d490610eaf565b82610658565b60405163636e39bb60e01b8152600490fd5b9160010191610515565b60646002910494019361050e565b61271060049104940193610504565b6305f5e100600891049401936104f9565b662386f26fc10000601091049401936104ec565b6d04ee2d6d415b85acef8100000000602091049401936104dc565b506040925072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b85046104c2565b6040516357799e4160e11b8152600490fd5b5033600052603760205260ff604060002054161561048d565b34610130576000366003190112610130576033546040516001600160a01b039091168152602090f35b34610130576040366003190112610130576107e3610d20565b6001600160a01b03166000908152603560205260409020805460243591908210156101305760209161081491610cf2565b905460405160039290921b1c6001600160a01b03168152f35b3461013057600036600319011261013057610846610d8a565b604080518092602082526108698151809281602086015260208686019101610db5565b601f01601f19168101030190f35b346101305760203660031901126101305760043567ffffffffffffffff811161013057366023820112156101305780600401359067ffffffffffffffff8211610130576024810190602436918460051b01011161013057603354604051632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b63600482015233602482015290602090829060449082906001600160a01b03165afa90811561030057600091610bc7575b5015610bb55760005b82811061094157005b61095961094f828585610e33565b6020810190610e55565b9050610a4e575b6001906001600160a01b0361097e610979838787610e33565b610e9b565b16600052603760205260ff604060002054161580610a23575b6109a2575b01610938565b818060a01b036109b6610979838787610e33565b16600052603760205260406000208260ff198254161790556109e46109df610979838787610e33565b610eaf565b818060a01b036109f8610979838787610e33565b167fbfb9522d943541239ac4c4e0128e95a98f1fd3682b2a597ee1da3a62f0ea94d3600080a261099c565b50818060a01b03610a38610979838787610e33565b1660005260356020526040600020541515610997565b91906000925b610a6261094f828585610e33565b9050841015610bac576001848195610a93610979610a8461094f878a8a610e33565b868060a09693961b0394610e8b565b166000526034602052818060a01b036040600020541615610ab7575b019350610a54565b818060a01b03610acb610979858888610e33565b166000526035602052610afd6040600020610af761097984610af161094f898c8c610e33565b90610e8b565b90610ef4565b610b0b610979848787610e33565b81610b2f610979610b2061094f888b8b610e33565b878060a09693961b0394610e8b565b166000526034602052604060002090838060a01b03166001600160601b0360a01b825416179055610b64610979848787610e33565b81610b79610979610b2061094f888b8b610e33565b1690838060a01b03167f9b2b789e1f5ce0bc7ab2b2d2d787af0f1638d8bd218759d6abdb1f5ef10f932d600080a3610aaf565b91925090610960565b60405163036be76f60e61b8152600490fd5b610be0915060203d6020116102f9576102eb8183610d36565b8361092f565b34610130576020366003190112610130576001600160a01b03610c07610d20565b1660005260356020526020604060002054604051908152f35b346101305760203660031901126101305760043563ffffffff60e01b8116809103610130576020906301ffc9a760e01b8114908115610c65575b506040519015158152f35b63168334a960e21b14905082610c5a565b346101305760203660031901126101305760043560365481101561013057600090603654811015610cde5760369091527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b801546040516001600160a01b039091168152602090f35b634e487b7160e01b82526032600452602482fd5b8054821015610d0a5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b600435906001600160a01b038216820361013057565b90601f8019910116810190811067ffffffffffffffff821117610d5857604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff8111610d5857601f01601f191660200190565b60405190610d99604083610d36565b600d82526c526566657272616c206c696e6b60981b6020830152565b60005b838110610dc85750506000910152565b8181015183820152602001610db8565b602060408183019282815284518094520192019060005b818110610dfc5750505090565b82516001600160a01b0316845260209384019390920191600101610def565b90816020910312610130575180151581036101305790565b9190811015610d0a5760051b81013590603e1981360301821215610130570190565b903590601e1981360301821215610130570180359067ffffffffffffffff821161013057602001918160051b3603831361013057565b9190811015610d0a5760051b0190565b356001600160a01b03811681036101305790565b603654600160401b811015610d5857806001610ed092016036556036610cf2565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b8054600160401b811015610d5857610ed091600182018155610cf2565b906041815114600014610f3f57610f3b916020820151906060604084015193015160001a90611063565b9091565b5050600090600290565b600581101561104d5780610f5a5750565b60018103610fa75760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b60028103610ff45760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b600314610ffd57565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116110d75760209360009360ff60809460405194855216868401526040830152606082015282805260015afa15610300576000516001600160a01b038116156110ce5790600090565b50600090600190565b5050505060009060039056fea2646970667358221220ea0971f1c95260c760fe383fbcd811a32615271283a5d9ad10d589f845a4d2bc64736f6c634300081a0033";

type ReferralProgramConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReferralProgramConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReferralProgram__factory extends ContractFactory {
  constructor(...args: ReferralProgramConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ReferralProgram & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ReferralProgram__factory {
    return super.connect(runner) as ReferralProgram__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReferralProgramInterface {
    return new Interface(_abi) as ReferralProgramInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ReferralProgram {
    return new Contract(address, _abi, runner) as unknown as ReferralProgram;
  }
}
