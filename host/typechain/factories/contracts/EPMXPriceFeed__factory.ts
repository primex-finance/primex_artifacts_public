/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EPMXPriceFeed,
  EPMXPriceFeedInterface,
} from "../../contracts/EPMXPriceFeed";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "current",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
    ],
    name: "AnswerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "startedBy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
    ],
    name: "NewRound",
    type: "event",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "getAnswer",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "_roundId",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "getTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestAnswer",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
    ],
    name: "setAnswer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0806040523461010a57602081610767803803809161001f828561010f565b83398101031261010a57516001600160a01b03811680820361010a576000805460ff191660081781556040516301ffc9a760e01b8152637965db0b60e01b600482015291602090839060249082905afa9182156100fd5781926100b8575b5050156100a65760805260405161061e9081610149823960805181818161025a01526104480152f35b60405163044aa57560e41b8152600490fd5b9091506020813d82116100f5575b816100d36020938361010f565b810103126100f157519081151582036100ee5750388061007d565b80fd5b5080fd5b3d91506100c6565b50604051903d90823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761013257604052565b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b600090813560e01c908163313ce5671461057a5750806350d25bcd1461055b57806354fd4d5014610540578063668a0f02146105185780637284e416146104775780637b103999146104335780638205bf6a1461041557806399213cd8146102235780639a6fc8f514610145578063b5ab58dc14610126578063b633620c146101005763feaf968c146100a857600080fd5b346100fd57806003193601126100fd5750600154600254600354935460055493516001600160501b03938416815260208101929092526040820194909452606081019390935216608082015260a090f35b0390f35b80fd5b50346100fd5760203660031901126100fd575061011f602092356105c3565b9051908152f35b50346100fd5760203660031901126100fd575061011f60209235610597565b50903461021f57602036600319011261021f578235926001600160501b039384811680910361021b57835260066020528183209180519360a085019085821067ffffffffffffffff831117610208575091816080936100f9959352868354169586815260018401549788602083015260028501549384848401526003860154958660608501520154169485910152519586958693608093969591929660a08601976001600160501b03809516875260208701526040860152606085015216910152565b634e487b7160e01b815260418452602490fd5b8380fd5b5080fd5b50903461021f57602080600319360112610411578151632474521560e21b81528085018490523360248201528435919081816044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156104075785916103a3575b501561039357816002556001600160501b0380855460081c166001600160501b03198760019280838554161784554260035542825580836005541617600555808952600686528789209084820361035f575b505050508554828160081c1683811461034c57906affffffffffffffffffff00837f0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f969594930160081b16906affffffffffffffffffff00191617875554169351428152a380f35b634e487b7160e01b885260118952602488fd5b83825416178155600254848201556003546002820155815460038201550190836005541690825416179055388781806102e4565b825163036be76f60e61b81528590fd5b9050813d8311610400575b601f8101601f1916820167ffffffffffffffff8111838210176103ed57839183918752810103126103e9575180151581036103e95738610292565b8480fd5b634e487b7160e01b875260418852602487fd5b503d6103ae565b84513d87823e3d90fd5b8280fd5b50913461041157826003193601126104115760209250549051908152f35b50903461021f578160031936011261021f57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5091346104115782600319360112610411578151908282019082821067ffffffffffffffff83111761050557508252600a81526020906911541356080bc81554d160b21b8282015282519382859384528251928382860152825b8481106104ef57505050828201840152601f01601f19168101030190f35b81810183015188820188015287955082016104d1565b634e487b7160e01b855260419052602484fd5b50903461021f578160031936011261021f576020906001600160501b03600154169051908152f35b50903461021f578160031936011261021f5751908152602090f35b50903461021f578160031936011261021f576020906002549051908152f35b90503461021f578160031936011261021f5760ff60209254168152f35b6001600160501b03908181116105bc5716600052600660205260016040600020015490565b5050600090565b6001600160501b03908181116105bc571660005260066020526003604060002001549056fea26469706673582212207f1f2352a1b41c0f877255bda750b1523b42f08aa37f32b662dd92a24878c18064736f6c63430008120033";

type EPMXPriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EPMXPriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EPMXPriceFeed__factory extends ContractFactory {
  constructor(...args: EPMXPriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_registry, overrides || {});
  }
  override deploy(
    _registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_registry, overrides || {}) as Promise<
      EPMXPriceFeed & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EPMXPriceFeed__factory {
    return super.connect(runner) as EPMXPriceFeed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EPMXPriceFeedInterface {
    return new Interface(_abi) as EPMXPriceFeedInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EPMXPriceFeed {
    return new Contract(address, _abi, runner) as unknown as EPMXPriceFeed;
  }
}
