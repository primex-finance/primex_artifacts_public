/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EPMXPriceFeed,
  EPMXPriceFeedInterface,
} from "../../contracts/EPMXPriceFeed";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "current",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
    ],
    name: "AnswerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "startedBy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
    ],
    name: "NewRound",
    type: "event",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "getAnswer",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "_roundId",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "getTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestAnswer",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
    ],
    name: "setAnswer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a08060405234610106576020816107dc803803809161001f828561010b565b83398101031261010657516001600160a01b038116808203610106576000805460ff191660081790556040516301ffc9a760e01b8152637965db0b60e01b600482015290602090829060249082905afa9081156100fa576000916100b8575b50156100a6576080526040516106979081610145823960805181818161028001526104c30152f35b60405163044aa57560e41b8152600490fd5b6020813d6020116100f2575b816100d16020938361010b565b810103126100ee57519081151582036100eb57503861007e565b80fd5b5080fd5b3d91506100c4565b6040513d6000823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761012e57604052565b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c908163313ce567146105e75750806350d25bcd146105c957806354fd4d50146105ad578063668a0f02146105865780637284e416146104f25780637b103999146104ad5780638205bf6a1461048f57806399213cd8146102285780639a6fc8f514610142578063b5ab58dc14610124578063b633620c146100fe5763feaf968c146100a357600080fd5b346100f95760003660031901126100f957600154600254600354600454600554604080516001600160501b0396871681526020810195909552840192909252606083015291909116608082015260a090f35b0390f35b600080fd5b346100f95760203660031901126100f957602061011c600435610636565b604051908152f35b346100f95760203660031901126100f957602061011c600435610605565b346100f95760203660031901126100f9576004356001600160501b0381168091036100f957600052600660205260406000206040519060a0820182811067ffffffffffffffff821117610212576040526100f560806001600160501b03835416928385526001810154948560208201526002820154908160408201526001600160501b036004600385015494856060850152015416938491015260405195869586936080936001600160501b0393979692978460a088019916875260208701526040860152606085015216910152565b634e487b7160e01b600052604160045260246000fd5b346100f95760203660031901126100f957604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d860048281019190915233602483015235906020816044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561048357600091610417575b501561040557806002556001600160501b0360005460081c16806001600160501b031960015416176001554260035542600455806001600160501b03196005541617600555806000526006602052604060002090600182036103ac575b50506000546001600160501b038160081c166001600160501b0381146103965760016affffffffffffffffffff00910160081b16906affffffffffffffffffff001916176000556001600160501b0360015416907f0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f6020604051428152a3005b634e487b7160e01b600052601160045260246000fd5b6001600160501b03166001600160501b03198254161781556002546001820155600354600282015560045460038201556001600160501b0360048160055416920191166001600160501b03198254161790558180610316565b60405163036be76f60e61b8152600490fd5b60203d60201161047c575b601f8101601f1916820167ffffffffffffffff8111838210176104685760209183916040528101031261046457519081151582036104615750826102b9565b80fd5b5080fd5b634e487b7160e01b84526041600452602484fd5b503d610422565b6040513d6000823e3d90fd5b346100f95760003660031901126100f9576020600454604051908152f35b346100f95760003660031901126100f9576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100f95760003660031901126100f9576040516040810181811067ffffffffffffffff82111761021257604052600a81526911541356080bc81554d160b21b602082015260405190602082528181519182602083015260005b83811061056e5750508160006040809484010152601f80199101168101030190f35b6020828201810151604087840101528593500161054c565b346100f95760003660031901126100f95760206001600160501b0360015416604051908152f35b346100f95760003660031901126100f957602060405160008152f35b346100f95760003660031901126100f9576020600254604051908152f35b346100f95760003660031901126100f95760209060ff600054168152f35b6001600160501b038111610630576001600160501b0316600052600660205260016040600020015490565b50600090565b6001600160501b038111610630576001600160501b031660005260066020526003604060002001549056fea2646970667358221220dff955df9054bd35959bf20a3f610284fa221a1221c3abb2c652ccf4b96dd4b564736f6c634300081a0033";

type EPMXPriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EPMXPriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EPMXPriceFeed__factory extends ContractFactory {
  constructor(...args: EPMXPriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_registry, overrides || {});
  }
  override deploy(
    _registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_registry, overrides || {}) as Promise<
      EPMXPriceFeed & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EPMXPriceFeed__factory {
    return super.connect(runner) as EPMXPriceFeed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EPMXPriceFeedInterface {
    return new Interface(_abi) as EPMXPriceFeedInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EPMXPriceFeed {
    return new Contract(address, _abi, runner) as unknown as EPMXPriceFeed;
  }
}
