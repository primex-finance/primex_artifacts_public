/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DebtToken,
  DebtTokenInterface,
} from "../../../contracts/DebtToken/DebtToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_users",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_length",
        type: "uint256",
      },
    ],
    name: "batchBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bucket",
    outputs: [
      {
        internalType: "contract IBucketV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeDecreaser",
    outputs: [
      {
        internalType: "contract IFeeExecutor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_bucketsFactory",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "scaledBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "scaledTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBucket",
        name: "_bucket",
        type: "address",
      },
    ],
    name: "setBucket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFeeExecutor",
        name: "_feeDecreaser",
        type: "address",
      },
    ],
    name: "setFeeDecreaser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IActivityRewardDistributor",
        name: "_traderRewardDistributor",
        type: "address",
      },
    ],
    name: "setTraderRewardDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "traderRewardDistributor",
    outputs: [
      {
        internalType: "contract IActivityRewardDistributor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100c1576000549060ff8260081c1661006f575060ff80821603610034575b604051611d4290816100c78239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe60806040818152600436101561001457600080fd5b600091823560e01c90816301ffc9a7146117415750806306fdde0314611698578063095ea7b314610fb15780630a3f0f001461154f578063156e29f6146112ac57806318160ddd146112085780631da24f3e146111c657806323b872dd146111a0578063313ce5671461117c5780633950935114610fb157806370a08231146110be5780637ed095fe1461109657806395d89b4114610fb6578063a457c2d714610fb1578063a9059cbb14610f87578063b1bf962d14610f69578063c029e86814610f41578063dd62ed3e14610ef4578063de7ea79d14610a82578063e4a24bc0146109b4578063eb1738e514610580578063ed18aea9146103de578063f31157c2146103b65763f5298aca1461012a57600080fd5b346103b25761013836611836565b6097546001600160a01b039081169493913386036103a15781831695861561039057841561037f5761016a8286611c85565b90811561036e579083929189946098541690816102b3575b505061018f915084611a0f565b806099541690816101ca575b82877fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca56020888a51908152a280f35b6097546001600160a01b038516600090815260336020526040902054911691803b156102af57865163266aa8a560e01b81526001600160a01b03938416600482015294909216602485015260448401526001606484015281908390608490829084905af19182610293575b5050907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5926020921560001461028e57600080516020611ced8339815191528382516312df74af60e21b8152a15b92509084388061019b565b610283565b61029f90939293611860565b6102ab57908438610235565b8480fd5b8380fd5b6001600160a01b03871660009081526033602052604090205490823b1561036a57895163627749b360e11b81526001600160a01b0389811660048301526024820193909352911660448201526064810193909352849081908490608490829084905af19283610356575b505061018f911560001461035157600080516020611ced8339815191526020885163303a98e360e21b8152a15b3880610182565b61034a565b61035f90611860565b6102af57833861031d565b8680fd5b8651630512674560e41b8152600490fd5b8551633abe877f60e11b8152600490fd5b855163044aa57560e41b8152600490fd5b845163d291739b60e01b8152600490fd5b5080fd5b50346103b257816003193601126103b25760985490516001600160a01b039091168152602090f35b50346103b2576020908160031936011261057c576004356001600160a01b0381811693918490036102ab576004828260975416855192838092637b10399960e01b82525afa908115610572579083918791610545575b506044855180948193632474521560e21b83528a6004840152336024840152165afa90811561050d578591610528575b50156105175782159081156104a6575b501561049657506bffffffffffffffffffffffff60a01b609854161760985580f35b5163044aa57560e41b8152600490fd5b82516301ffc9a760e01b8152636c91bd0560e11b60048201529091508181602481875afa91821561050d5785926104e0575b505038610474565b6104ff9250803d10610506575b6104f7818361188a565b8101906119b5565b38806104d8565b503d6104ed565b83513d87823e3d90fd5b815163036be76f60e61b8152600490fd5b61053f9150823d8411610506576104f7818361188a565b38610464565b6105659150823d841161056b575b61055d818361188a565b8101906119cd565b38610434565b503d610553565b84513d88823e3d90fd5b8280fd5b50346103b25760803660031901126103b25767ffffffffffffffff6004358181116102af57366023820112156102af5780600401356105be81611903565b916105cb8551938461188a565b8183526024602084019260051b8201019036821161036a57602401915b81831061098f575050506024359182116102af57366023830112156102af5781600401359161061683611903565b926106238551948561188a565b8084526024602085019160051b8301019136831161036a57602401905b82821061097f5750506097546001600160a01b0316905033810361096e57610669606435611b08565b610674606435611b08565b60985460995491956001600160a01b0392831615159490929091899116801515825b606435811061090e5750610862575b50949392919050845b6064358110610781575050506106c2575080f35b6099546097546001600160a01b039081169116803b156102af5783928361070f9361072189519889968795869463c88157e360e01b8652600486015260a0602486015260a4850190611b73565b83810360031901604485015290611bb0565b60643560648301526001608483015203925af1918261076d575b505061076757516312df74af60e21b8152600080516020611ced83398151915290602090a15b38808280f35b50610761565b61077690611860565b61057c57823861073b565b8293949550610794816107e79394611b49565b516107f2575b6001600160a01b036107ac8288611b49565b51167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca560206107db8487611b49565b518b51908152a2611b3a565b9087949392916106ae565b8461081b6001600160a01b03610808848a611b49565b51166108148488611b49565b5190611a0f565b1561079a576108526001600160a01b036108358389611b49565b51166001600160a01b031660009081526033602052604090205490565b61085c8289611b49565b5261079a565b803b156103b257878291610899838a6108ab978e51988996879586946305c6a25960e21b8652608060048701526084860190611b73565b84810360031901602486015290611bb0565b906044830152604435606483015203925af191826108f6575b50506108f157600080516020611ced8339815191526020875163303a98e360e21b8152a15b3887816106a5565b6108e9565b6108ff90611860565b61090a5787386108c4565b8780fd5b816109409293945061092c604435610926848a611b49565b51611c85565b610936838a611b49565b5261094957611b3a565b908a9291610696565b61095e6001600160a01b03610835838c611b49565b610968828c611b49565b52611b3a565b835163d291739b60e01b8152600490fd5b8135815260209182019101610640565b82356001600160a01b03811681036109af578152602092830192016105e8565b600080fd5b50346103b25760203660031901126103b2576001600160a01b0360043581811692908390036102af5781609a54163303610a7257609754918216610a625780516301ffc9a760e01b8152633aa17d5560e11b6004820152602081602481875afa908115610a58578591610a3a575b501561049657506001600160a01b0319161760975580f35b610a52915060203d8111610506576104f7818361188a565b38610a22565b82513d87823e3d90fd5b516307d64eb160e21b8152600490fd5b5163036be76f60e61b8152600490fd5b50346103b25760803660031901126103b25767ffffffffffffffff6004358181116102af57610ab59036906004016118ac565b6024358281116102ab57610acd9036906004016118ac565b6044359260ff84168403610ef0576064356001600160a01b03811691908290036109af5786549360ff8560081c161593848095610ee3575b8015610ecc575b15610e7157600195858760ff198316178b55610e60575b50610b3d60ff8a5460081c16610b3881611955565b611955565b8151838111610e4c5780610b5260365461191b565b93601f94858111610dde575b50602090858311600114610d5f578c92610d54575b5050600019600383901b1c191690871b176036555b8051928311610d4057908291610b9f60375461191b565b828111610cd0575b506020918311600114610c51578992610c46575b5050600019600383901b1c191690841b176037555b855493610be260ff8660081c16611955565b609a549060ff60a01b9060a01b16906affffffffffffffffffffff60a81b161717609a55610c0e578380f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989260209261ff001916855551908152a13880808380f35b015190503880610bbb565b60378a528693507f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae9190601f1984168b5b818110610cb857508411610c9f575b505050811b01603755610bd0565b015160001960f88460031b161c19169055388080610c91565b82840151855589969094019360209384019301610c82565b9091925060378a527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae8380860160051c82019260208710610d37575b9186958a929594930160051c01915b828110610d29575050610ba7565b8c8155869550899101610d1b565b92508192610d0c565b634e487b7160e01b89526041600452602489fd5b015190503880610b73565b60368d528993507f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b89190601f1984168e5b818110610dc657508411610dad575b505050811b01603655610b88565b015160001960f88460031b161c19169055388080610d9f565b8284015185558c969094019360209384019301610d90565b90915060368c527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b88580850160051c82019260208610610e43575b918b91869594930160051c01915b828110610e35575050610b5e565b8e81558594508b9101610e27565b92508192610e19565b634e487b7160e01b8a52604160045260248afd5b61ffff191661010117895538610b23565b875162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015610b0c5750600160ff871614610b0c565b50600160ff871610610b05565b8580fd5b50346103b257806003193601126103b257602091610f106117df565b82610f196117f5565b6001600160a01b03928316845260348652922091166000908152908352819020549051908152f35b50346103b257816003193601126103b25760975490516001600160a01b039091168152602090f35b50346103b257816003193601126103b2576020906035549051908152f35b50346103b257806003193601126103b257600490610fa36117df565b50516365cf163b60e11b8152fd5b61180b565b50346103b257816003193601126103b25780519082603754610fd78161191b565b8085529160019180831690811561106e5750600114611011575b5050506110038261100d94038361188a565b5191829182611796565b0390f35b9450603785527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae5b8286106110565750505061100382602061100d9582010194610ff1565b80546020878701810191909152909501948101611039565b61100d97508693506020925061100394915060ff191682840152151560051b82010194610ff1565b50346103b257816003193601126103b25760995490516001600160a01b039091168152602090f35b50346103b25760209182600319360112611179576001600160a01b03806110e36117df565b168252603384526004848484205492609754168551928380926368d0612f60e01b82525afa92831561116e579261113d575b506111306b033b2e3c9fd0803ce80000009261113592611c36565b611c04565b049051908152f35b91508382813d8311611167575b611154818361188a565b810103126109af57905190611130611115565b503d61114a565b8451903d90823e3d90fd5b80fd5b50346103b257816003193601126103b25760209060ff609a5460a01c169051908152f35b50346103b25760603660031901126103b2576004906111bd6117df565b50610fa36117f5565b50346103b25760203660031901126103b2576020906112016111e66117df565b6001600160a01b031660009081526033602052604090205490565b9051908152f35b50346103b257816003193601126103b25760355460975482516368d0612f60e01b815291939190602090829060049082906001600160a01b03165afa9182156112a1579161126e575b506111356111306b033b2e3c9fd0803ce800000092602095611c36565b90506020813d8211611299575b816112886020938361188a565b810103126109af5751611135611251565b3d915061127b565b8351903d90823e3d90fd5b50346103b2576112bb36611836565b6097546001600160a01b039081169493913386036103a15781831695861561039057841561037f576112ed8286611c85565b91821561153e5791879184938a95609854168061145c575b505050600080516020611ccd83398151915260208261132787946035546119ec565b603555848452603382528984208181540190558951908152a38060995416908161137b575b82877f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968856020888a51908152a280f35b6097546001600160a01b038516600090815260336020526040902054911691803b156102af57865163266aa8a560e01b81526001600160a01b03938416600482015294909216602485015260448401526001606484015281908390608490829084905af19182611444575b5050907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885926020921560001461143f57600080516020611ced8339815191528382516312df74af60e21b8152a15b92509084388061134c565b611434565b61145090939293611860565b6102ab579084386113e6565b6001600160a01b0388166000908152603360205260409020549596939594509091813b156102af57895163627749b360e11b81526001600160a01b03898116600483015260248201969096529416604485015260648401919091528290608490829084905af19081611512575b5087600080516020611ccd83398151915260208295948a941560001461150d57600080516020611ced833981519152828b5163303a98e360e21b8152a15b92611305565b611507565b90600080516020611ccd8339815191526020996115328a94969596611860565b995050909291926114c9565b865163abd351b160e01b8152600490fd5b50346103b2576020908160031936011261057c576004356001600160a01b0381811693918490036102ab576004828260975416855192838092637b10399960e01b82525afa90811561057257908391879161167b575b506044855180948193632474521560e21b83528a6004840152336024840152165afa90811561050d57859161165e575b5015610517578215908115611607575b501561049657506bffffffffffffffffffffffff60a01b609954161760995580f35b82516301ffc9a760e01b815263187d5ef960e11b60048201529091508181602481875afa91821561050d578592611641575b5050386115e5565b6116579250803d10610506576104f7818361188a565b3880611639565b6116759150823d8411610506576104f7818361188a565b386115d5565b6116929150823d841161056b5761055d818361188a565b386115a5565b50346103b257816003193601126103b257805190826036546116b98161191b565b8085529160019180831690811561106e57506001146116e4575050506110038261100d94038361188a565b9450603685527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b85b8286106117295750505061100382602061100d9582010194610ff1565b8054602087870181019190915290950194810161170c565b8390346103b25760203660031901126103b25760043563ffffffff60e01b811680910361057c5760209250633d5b079f60e11b8114908115611785575b5015158152f35b6301ffc9a760e01b1490508361177e565b6020808252825181830181905290939260005b8281106117cb57505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016117a9565b600435906001600160a01b03821682036109af57565b602435906001600160a01b03821682036109af57565b346109af5760403660031901126109af576118246117df565b5060405162944b8d60e21b8152600490fd5b60609060031901126109af576004356001600160a01b03811681036109af57906024359060443590565b67ffffffffffffffff811161187457604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761187457604052565b81601f820112156109af5780359067ffffffffffffffff821161187457604051926118e1601f8401601f19166020018561188a565b828452602083830101116109af57816000926020809301838601378301015290565b67ffffffffffffffff81116118745760051b60200190565b90600182811c9216801561194b575b602083101461193557565b634e487b7160e01b600052602260045260246000fd5b91607f169161192a565b1561195c57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b908160209103126109af575180151581036109af5790565b908160209103126109af57516001600160a01b03811681036109af5790565b919082018092116119f957565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03168015611ab95780600052603360205260406000205491808310611a6957602081600080516020611ccd83398151915292600095858752603384520360408620558060355403603555604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b90611b1282611903565b611b1f604051918261188a565b8281528092611b30601f1991611903565b0190602036910137565b60001981146119f95760010190565b8051821015611b5d5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b90815180825260208080930193019160005b828110611b93575050505090565b83516001600160a01b031685529381019392810192600101611b85565b90815180825260208080930193019160005b828110611bd0575050505090565b835185529381019392810192600101611bc2565b8115611bee570490565b634e487b7160e01b600052601260045260246000fd5b906b019d971e4fe8401e740000008201918281116119f9578210611c2457565b604051630a77254f60e01b8152600490fd5b600092918015918215611c5f575b505015611c4d57565b604051631550e8b760e01b8152600490fd5b808202945091508115828504821417156119f957611c7d9084611be4565b143880611c44565b906b033b2e3c9fd0803ce800000091828102928184048114821517156119f957830403611c4d57611cb98160011c836119ec565b918210611c2457611cc991611be4565b9056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef97e3d6f5d9606f45b75b508f1245f23d4d4e5470e8adae85f3156477ffdcdff0a2646970667358221220f50126f7ff53c47a3bfe8e29300f94ea08b2e8838d53d31d8510f46ac677f0e264736f6c63430008120033";

type DebtTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DebtTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DebtToken__factory extends ContractFactory {
  constructor(...args: DebtTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DebtToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DebtToken__factory {
    return super.connect(runner) as DebtToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebtTokenInterface {
    return new Interface(_abi) as DebtTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DebtToken {
    return new Contract(address, _abi, runner) as unknown as DebtToken;
  }
}
