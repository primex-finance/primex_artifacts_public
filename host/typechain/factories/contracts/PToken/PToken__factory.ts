/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { PToken, PTokenInterface } from "../../../contracts/PToken/PToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "BalanceTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LockDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "UnlockDeposit",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "availableBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bucket",
    outputs: [
      {
        internalType: "contract IBucketV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getDepositIndexById",
    outputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserLockedBalance",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalLockedBalance",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lockedBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
            ],
            internalType: "struct IPTokenStorage.Deposit[]",
            name: "deposits",
            type: "tuple[]",
          },
        ],
        internalType: "struct IPTokenStorage.LockedBalance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_bucketsFactory",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "interestIncreaser",
    outputs: [
      {
        internalType: "contract IFeeExecutor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lenderRewardDistributor",
    outputs: [
      {
        internalType: "contract IActivityRewardDistributor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "lockDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reserve",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "mintToReserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "scaledBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "scaledTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBucket",
        name: "_bucket",
        type: "address",
      },
    ],
    name: "setBucket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFeeExecutor",
        name: "_interestIncreaser",
        type: "address",
      },
    ],
    name: "setInterestIncreaser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IActivityRewardDistributor",
        name: "_lenderRewardDistributor",
        type: "address",
      },
    ],
    name: "setLenderRewardDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_depositId",
        type: "uint256",
      },
    ],
    name: "unlockDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100c2576000549060ff8260081c16610070575060ff80821603610035575b60405161320d9081620000c88239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608060408181526004908136101561001657600080fd5b600092833560e01c908162050bc11461212e5750806301ffc9a7146120d857806306fdde031461202e578063095ea7b314612004578063156e29f614611d6157806318160ddd14611d445780631da24f3e14611d0857806323b872dd14611adc57806325d998bb146118e8578063313ce567146118c65780633950935114611877578063663866ec1461182e57806370a082311461180157806371617534146117d857806377b9de8e146114ad57806386b8357b1461133a57806395d89b41146112515780639e20f9841461120a578063a457c2d71461115d578063a9059cbb14610f8e578063b1bf962d14610f6f578063b708e68e14610f46578063bf0e92c414610bcb578063c029e86814610ba2578063d2e8b482146109fd578063dd62ed3e146109ab578063de7ea79d1461052b578063e4a24bc0146104365763f5298aca1461016257600080fd5b3461043257610170366122f8565b60c9546001600160a01b039081169691959293903388036104225780821694851561041257876101a09184612e94565b9890978260ca541680610357575b5050508483526020976033895286842054818110610309577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8a8387948a9485875260338452038b86205580603554036035558a51908152a38060cb54169081610246575b50505050507fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5848351858152a251908152f35b60c9546001600160a01b03841660009081526033602052604090205491169094823b1561030557875163266aa8a560e01b81526001600160a01b03928316918101918252919093166020840152604083019490945260006060830152829184919082908490829060800103925af191826102ee575b50506102e9576000805160206131b883398151915284835163115a489160e01b8152a15b3880808080610213565b6102df565b6102f88291612370565b61030257806102bb565b80fd5b8480fd5b875162461bcd60e51b81528087018b9052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b6001600160a01b03851660009081526033602052604090205491813b1561040e57895163627749b360e11b81526001600160a01b03808816828b0190815260208101959095529094166040840152606083015285918291849182908490829060800103925af191826103f6575b50506103f1576000805160206131b883398151915260208751636c029f4b60e11b8152a15b3880806101ae565b6103e9565b6103ff90612370565b61040a5783386103c4565b8380fd5b8680fd5b865163044aa57560e41b81528590fd5b855163d291739b60e01b81528490fd5b8280fd5b5034610432576020366003190112610432576001600160a01b03823581811693919290849003610305578260cf5416330361051e5760c9549283166105115780516301ffc9a760e01b8152633aa17d5560e11b83820152602081602481885afa9081156105075786916104ca575b50156104bd5750506001600160a01b0319161760c95580f35b5163044aa57560e41b8152fd5b90506020813d82116104ff575b816104e460209383612384565b810103126104fb576104f5906125c8565b386104a4565b8580fd5b3d91506104d7565b82513d88823e3d90fd5b516307d64eb160e21b8152fd5b5163036be76f60e61b8152fd5b5090346104325760803660031901126104325767ffffffffffffffff9080358281116103055761055e90369083016123c2565b906024358381116104fb5761057690369083016123c2565b916044359360ff851680950361040e576064356001600160a01b03811692908390036109a65787549460ff8660081c161594858096610999575b8015610982575b1561092857600196868860ff198316178c55610917575b506105e860ff8b5460081c166105e381612568565b612568565b825184811161090457806105fd603654612409565b94601f95868111610895575b506020908d878411600114610816579261080b575b5050600019600383901b1c191690881b176036555b81519384116107f8575090829161064b603754612409565b828111610787575b5060209183116001146107085789926106fd575b5050600019600383901b1c191690841b176037555b85549361069b60ff8660081c1661069281612568565b6105e381612568565b8360975560ff1960cd54161760cd556001600160601b0360a01b60cf54161760cf556106c5578380f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989260209261ff001916855551908152a13880808380f35b015190503880610667565b60378a528693507f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae9190601f1984168b5b81811061076f57508411610756575b505050811b0160375561067c565b015160001960f88460031b161c19169055388080610748565b82840151855589969094019360209384019301610739565b9091925060378a527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae8380860160051c820192602087106107ef575b9186958a929594930160051c01915b8281106107e0575050610653565b600081558695508991016107d2565b925081926107c3565b634e487b7160e01b8a5260419052602489fd5b01519050388061061e565b91908b9450601f198416603684527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b8935b81811061087d57508411610864575b505050811b01603655610633565b015160001960f88460031b161c19169055388080610856565b8284015185558d969094019360209384019301610847565b90915060368d527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b88680850160051c820192602086106108fb575b918c91869594930160051c01915b8281106108ec575050610609565b600081558594508c91016108de565b925081926108d0565b634e487b7160e01b8b526041825260248bfd5b61ffff1916610101178a55386105ce565b60849060208a519162461bcd60e51b8352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152fd5b50303b1580156105b75750600160ff8816146105b7565b50600160ff8816106105b0565b600080fd5b8382346109f957806003193601126109f9576020916109c8612284565b826109d161229a565b6001600160a01b03928316845260348652922091166000908152908352819020549051908152f35b5080fd5b509034610432576020918260031936011261040a5781356001600160a01b0381811694918590036104fb5783828260c95416855192838092637b10399960e01b82525afa908115610b98579083918891610b6b575b506044855180948193632474521560e21b83528b8a840152336024840152165afa908115610b1e578691610b36575b5015610b28578315908115610aaf575b50156104bd5750506001600160601b0360a01b60cb54161760cb5580f35b82516301ffc9a760e01b815263187d5ef960e11b858201529091508181602481885afa918215610b1e578692610ae8575b505038610a91565b90809250813d8311610b17575b610aff8183612384565b8101031261030557610b10906125c8565b3880610ae0565b503d610af5565b83513d88823e3d90fd5b505163036be76f60e61b8152fd5b90508181813d8311610b64575b610b4d8183612384565b810103126104fb57610b5e906125c8565b38610a81565b503d610b43565b610b8b9150823d8411610b91575b610b838183612384565b8101906125d5565b38610a52565b503d610b79565b84513d89823e3d90fd5b8382346109f957816003193601126109f95760c95490516001600160a01b039091168152602090f35b508290346109f957610bdc366122f8565b919092610be761266a565b60c954815163ef379d1760e01b81526001600160a01b0397602096909290919089169087818581855afa908115610e6757908a9392918a91610f29575b508886518092630723eb0360e51b825233888301528160249e8f92165afa908115610eba578a91610ef4575b50610ee457338103610ed4578615610ec45784516308bcf8b560e21b815288818681855afa908115610eba578a91610e81575b5015610e71579087849286519384809263220f1ac960e21b82525afa908115610e67578991610e36575b610cb8925086612e94565b5093169283875260ce8652828720610cd1828254612443565b905583875260ce86526001958684892001549560cc5496680100000000000000009788811015610e2457610d319291610d12828c610d2b940160cc556125f4565b90919082549060031b91821b91600019901b1916179055565b42612443565b9285895260ce825288888682200160cc5490600019998a8301928311610e1257885190610d5d82612354565b878252868201928984528a8301948552805491821015610e005790610d86918e8201815561264e565b949094610def5750518355518a8301555160029091015560cc54968701968711610ddd575083519283528201527f9e5b9f0bb6ee6fb341a47d742f013538f79f386f5da5ecf744fc8e492da28d2f9190a360975580f35b634e487b7160e01b8952601190528888fd5b634e487b7160e01b81528086528e90fd5b634e487b7160e01b8652604187528f86fd5b634e487b7160e01b8452601185528d84fd5b634e487b7160e01b8b52604186528b8bfd5b90508782813d8311610e60575b610e4d8183612384565b810103126109a657610cb8915190610cad565b503d610e43565b85513d8b823e3d90fd5b845163d42bba7f60e01b81528490fd5b90508881813d8311610eb3575b610e988183612384565b81010312610eaf57610ea9906125c8565b8b610c83565b8980fd5b503d610e8e565b86513d8c823e3d90fd5b8451633974fc9760e11b81528490fd5b845163d291739b60e01b81528490fd5b84516333df015b60e01b81528490fd5b90508881813d8311610f22575b610f0b8183612384565b81010312610eaf57610f1c906125c8565b8b610c50565b503d610f01565b610f409150893d8b11610b9157610b838183612384565b8b610c24565b8382346109f957816003193601126109f95760cb5490516001600160a01b039091168152602090f35b8382346109f957816003193601126109f9576020906035549051908152f35b509034610432578160031936011261043257610fa8612284565b610fb061266a565b60c954835163ef379d1760e01b8152602095909390916001600160a01b039081169087868481855afa95861561112f579088918597611139575b5090602491885192838092630723eb0360e51b8252808a169a8b89840152165afa90811561112f5784916110fa575b506110eb5784156110dc57869086519283809263220f1ac960e21b82525afa9182156110d157916110a4575b5061106a6110568260243533612e94565b909361106482858333612c29565b336127bc565b8351918252848201527f4beccb90f994c31aced7a23b5611020728a23d8ec5cddd1a3e9d97b96fda8666833392a360016097555160018152f35b90508481813d83116110ca575b6110bb8183612384565b810103126109a6575138611045565b503d6110b1565b8551903d90823e3d90fd5b50845163044aa57560e41b8152fd5b50845163e453974560e01b8152fd5b90508781813d8311611128575b6111118183612384565b8101031261040a57611122906125c8565b38611019565b503d611107565b87513d86823e3d90fd5b82919750611155906024933d8411610b9157610b838183612384565b969091610fea565b509134610302578260031936011261030257611177612284565b91836024359233815260346020522060018060a01b0384166000526020528360002054908282106111b9576020856111b28585038733612466565b5160018152f35b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b508290346109f95761121b366122f8565b60c9549093919291906001600160a01b03163303611242575061123f939450612764565b80f35b5163d291739b60e01b81528590fd5b8382346109f957816003193601126109f9578051908260375461127381612409565b8085529160019180831690811561131257506001146112b5575b50505061129f826112b1940383612384565b519182916020835260208301906122d3565b0390f35b9450603785527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae5b8286106112fa5750505061129f8260206112b1958201019461128d565b805460208787018101919091529095019481016112dd565b6112b197508693506020925061129f94915060ff191682840152151560051b8201019461128d565b509034610432576020918260031936011261040a5781356001600160a01b0381811694918590036104fb5783828260c95416855192838092637b10399960e01b82525afa908115610b98579083918891611490575b506044855180948193632474521560e21b83528b8a840152336024840152165afa908115610b1e57869161145b575b5015610b285783159081156113ec575b50156104bd5750506001600160601b0360a01b60ca54161760ca5580f35b82516301ffc9a760e01b8152636c91bd0560e11b858201529091508181602481885afa918215610b1e578692611425575b5050386113ce565b90809250813d8311611454575b61143c8183612384565b810103126103055761144d906125c8565b388061141d565b503d611432565b90508181813d8311611489575b6114728183612384565b810103126104fb57611483906125c8565b386113be565b503d611468565b6114a79150823d8411610b9157610b838183612384565b3861138f565b5034610432576020918260031936011261040a578035916114cc61266a565b60c954815163ef379d1760e01b81526001600160a01b03918216939192919086818381885afa9081156117b15788916117bb575b508683518092630723eb0360e51b82523385830152816024978892165afa9081156117b1578891611778575b5061176a5733875260ce865260019586838920019283541561175b57611551876125f4565b90549060031b1c95876002611566898861264e565b5001540361174b57828491835192838092634ad09aa560e01b82525afa908115611741578a9161170c575b50156116e9575b6115b99060ce6115a8888761264e565b505493338c52528920918254612641565b9055815460001994908581019081116116aa576115d6908461264e565b506115e1828561264e565b9190916116d8578082036116bc575b505082548581019081116116aa5790610d126002611611611619948761264e565b5001546125f4565b815480156116985784019261162e848461264e565b92909261168857505060028160008093558288820155015555611650826125f4565b909182549160031b1b19169055337f0900a4d6663fcbd5127fbbf9b38da11d0e98b2c17e263b127d4398df9cb0112b8480a360975580f35b634e487b7160e01b895288905287fd5b634e487b7160e01b8852603182528388fd5b634e487b7160e01b8952601183528489fd5b60028181925484558a8101548b850155015491015538806115f0565b634e487b7160e01b8a52898452858afd5b876116f4878661264e565b500154421161159857516301d29b5b60e01b81529050fd5b90508281813d831161173a575b6117238183612384565b81010312610eaf57611734906125c8565b38611591565b503d611719565b82513d8c823e3d90fd5b8151633e6c339760e01b81528490fd5b51636e5e2b1f60e01b81529050fd5b90516333df015b60e01b8152fd5b90508681813d83116117aa575b61178f8183612384565b810103126117a6576117a0906125c8565b3861152c565b8780fd5b503d611785565b83513d8a823e3d90fd5b6117d29150873d8911610b9157610b838183612384565b38611500565b8382346109f957816003193601126109f95760ca5490516001600160a01b039091168152602090f35b8382346109f95760203660031901126109f957602090611827611822612284565b61292c565b9051908152f35b508234610302576020366003190112610302575081359160cc54831015611869575061185b6020926125f4565b91905490519160031b1c8152f35b9051635364b43760e01b8152fd5b8382346109f957806003193601126109f9576111b260209282611898612284565b91338152603486522060018060a01b03821660005284526118bf6024358460002054612443565b9033612466565b8382346109f957816003193601126109f95760209060ff60cd54169051908152f35b5034610432576020928360031936011261030257611904612284565b61190d8161292c565b6001600160a01b03828116845260ce875284842054909161192e9190612641565b948160c95416918551632e51d3ed60e01b815288818481875afa908115611a66578691611aa7575b5015611966575b87878751908152f35b8551634c66358f60e11b8152959694956101209081818581885afa918215611a9d579184939189938492611a70575b50505116938851938480926306fdde0360e01b82525afa918215611a665791889391879695936119e09892611a42575b50885163be5daee560e01b8152978894859384938401612ad6565b03915afa918215611a375791611a06575b6119fb9250612641565b90388080808061195d565b90508382813d8311611a30575b611a1d8183612384565b810103126109a6576119fb9151906119f1565b503d611a13565b8451903d90823e3d90fd5b611a5f9192503d8089833e611a578183612384565b810190612a74565b90386119c5565b87513d88823e3d90fd5b611a8f9250803d10611a96575b611a878183612384565b8101906129db565b3880611995565b503d611a7d565b89513d8a823e3d90fd5b90508881813d8311611ad5575b611abe8183612384565b810103126104fb57611acf906125c8565b38611956565b503d611ab4565b50823461030257606036600319011261030257611af7612284565b90611b0061229a565b93611b0961266a565b60c954845163ef379d1760e01b815260209690946001600160a01b039392841688878581845afa968715611c75578697611ce9575b508751630723eb0360e51b81528981602481898089169c8d8b840152165afa908115611cdf578791611caa575b50611c9a5786151580611c8f575b15611c7f5788849189519586809263220f1ac960e21b82525afa938415611c755790889392918795611c42575b50611bb48560443584612e94565b94909683169788815260348c5220336000528a52886000205490868210611c34575092889492611c1e92611c0d887f4beccb90f994c31aced7a23b5611020728a23d8ec5cddd1a3e9d97b96fda86669997033383612466565b611c1983868484612c29565b6127bc565b825191825287820152a360016097555160018152f35b8951631d2c488b60e31b8152fd5b8a809296508195503d8311611c6e575b611c5c8183612384565b810103126109a657879251938a611ba6565b503d611c52565b88513d88823e3d90fd5b875163044aa57560e41b81528490fd5b508482161515611b79565b875163e453974560e01b81528490fd5b90508981813d8311611cd8575b611cc18183612384565b8101031261040e57611cd2906125c8565b8a611b6b565b503d611cb7565b89513d89823e3d90fd5b611d01919750893d8b11610b9157610b838183612384565b9589611b3e565b8382346109f95760203660031901126109f957602090611827611d29612284565b6001600160a01b031660009081526033602052604090205490565b8382346109f957816003193601126109f957602090611827612afe565b50903461043257611d71366122f8565b60c95490956001600160a01b03918216949193338603611ff457848116948515611c7f578415611fe457611da58986613174565b968715611fd4578160ca541680611f23575b5050611dc387836126c0565b8060cb54169081611e22575b602089676765c793fa10079d601b1b611e1a611e158e8d8d7f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885888f8951908152a2613125565b6130f3565b049051908152f35b60c9546001600160a01b03841660009081526033602052604090205491169094823b1561030557895163266aa8a560e01b81526001600160a01b03928316918101918252919093166020840152604083019490945260006060830152829184919082908490829060800103925af19182611f0f575b505094676765c793fa10079d601b1b93611e1a937f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968856020611e1595819a15600014611f0a576000805160206131b8833981519152828b5163115a489160e01b8152a15b9550849950839750829650611dcf565b611efa565b611f198291612370565b6103025780611e97565b6001600160a01b03841660009081526033602052604090205490803b156104fb578a5163627749b360e11b81526001600160a01b03808716828a0190815260208101949094529093166040830152606082018c9052859183919082908490829060800103925af19081611fc1575b50611fbc576000805160206131b883398151915260208951636c029f4b60e11b8152a15b3880611db7565b611fb5565b611fcd90949194612370565b9238611f91565b885163abd351b160e01b81528590fd5b8751633abe877f60e11b81528490fd5b865163d291739b60e01b81528390fd5b8382346109f957806003193601126109f9576020906111b2612024612284565b6024359033612466565b8382346109f957816003193601126109f9578051908260365461205081612409565b80855291600191808316908115611312575060011461207b5750505061129f826112b1940383612384565b9450603685527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b85b8286106120c05750505061129f8260206112b1958201019461128d565b805460208787018101919091529095019481016120a3565b50903461043257602036600319011261043257359063ffffffff60e01b821680920361043257602092506337a557d360e01b821491821561211d575b50519015158152f35b6301ffc9a760e01b14915038612114565b90503461040a576020908160031936011261030557819061214d612284565b9061215781612322565b868152606093018390526001600160a01b0316855260ce815282852083519095909261218284612322565b8654845260018097019586549067ffffffffffffffff82116122715750859197959493929451966121b8848360051b0189612384565b818852855282852085908489015b83831061222f57505050508183019586528051958287528787019351838801525196818088015287518094528260808801980194915b8483106122095787890388f35b855180518a52808501518a860152810151898201529781019794830194918601916121fc565b97600386869a839d979a98999a5161224681612354565b85548152848601548382015260028601548d82015281520192019201919099979399969594966121c6565b634e487b7160e01b845260419052602483fd5b600435906001600160a01b03821682036109a657565b602435906001600160a01b03821682036109a657565b60005b8381106122c35750506000910152565b81810151838201526020016122b3565b906020916122ec815180928185528580860191016122b0565b601f01601f1916010190565b60609060031901126109a6576004356001600160a01b03811681036109a657906024359060443590565b6040810190811067ffffffffffffffff82111761233e57604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761233e57604052565b67ffffffffffffffff811161233e57604052565b90601f8019910116810190811067ffffffffffffffff82111761233e57604052565b67ffffffffffffffff811161233e57601f01601f191660200190565b81601f820112156109a6578035906123d9826123a6565b926123e76040519485612384565b828452602083830101116109a657816000926020809301838601378301015290565b90600182811c92168015612439575b602083101461242357565b634e487b7160e01b600052602260045260246000fd5b91607f1691612418565b9190820180921161245057565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0390811691821561251757169182156124c75760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260348252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b1561256f57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b519081151582036109a657565b908160209103126109a657516001600160a01b03811681036109a65790565b60cc5481101561262b5760cc6000527f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebe0190600090565b634e487b7160e01b600052603260045260246000fd5b9190820391821161245057565b805482101561262b576000526003602060002091020190600090565b60026097541461267b576002609755565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b6001600160a01b031690811561271f577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082612702600094603554612443565b6035558484526033825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b90916127709083613174565b80156127b757816127a46020927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885946126c0565b6040519384526001600160a01b031692a2565b505050565b6001600160a01b039081169182156128d95716918215612888576000828152603360205260408120549180831061283457604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260338652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b60018060a01b03908160009116815260336020526004602060408320549360c954166040519283809263220f1ac960e21b82525afa9182156129cf57809261298e575b5050611e1561298a91676765c793fa10079d601b1b93613125565b0490565b9091506020823d82116129c7575b816129a960209383612384565b81010312610302575051611e15676765c793fa10079d601b1b61296f565b3d915061299c565b604051903d90823e3d90fd5b809161012092839103126109a65760405191820182811067ffffffffffffffff82111761233e5760405280516001600160a01b03811681036109a6578252612a25602082016125c8565b602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e0830152610100809101519082015290565b6020818303126109a65780519067ffffffffffffffff82116109a6570181601f820112156109a6578051612aa7816123a6565b92612ab56040519485612384565b818452602082840101116109a657612ad391602080850191016122b0565b90565b90612aee6020919493946040845260408401906122d3565b6001600160a01b03909416910152565b6035548015612b955760c95460405163220f1ac960e21b815290602090829060049082906001600160a01b03165afa908115612b8957600091612b56575b50611e1561298a91676765c793fa10079d601b1b93613125565b906020823d8211612b81575b81612b6f60209383612384565b81010312610302575051611e15612b3c565b3d9150612b62565b6040513d6000823e3d90fd5b50600090565b80511561262b5760200190565b80516001101561262b5760400190565b90815180825260208080930193019160005b828110612bd8575050505090565b83516001600160a01b031685529381019392810192600101612bca565b90815180825260208080930193019160005b828110612c15575050505090565b835185529381019392810192600101612c07565b60ca5460cb549394929391926000926001600160a01b0392831680159291841615908380612e8d575b612e8257604098895194612c6586612354565b600286526020998b368c8901378b5199612c7e8b612354565b60028b528c368d8d013788612c9289612b9b565b911680915288612ca189612ba8565b9216809252895260338b528b892054612cb98b612b9b565b52885260338a528a882054612ccd8a612ba8565b5215612ddb575b505015612ce5575b50505050505050565b80612cfc612d1592612cf688612b9b565b51612641565b612d0587612b9b565b52612d0f86612ba8565b51612443565b612d1e85612ba8565b528160cb54169160c954168151833b15610305579184809492612d6794612d798b51998a978896879563c88157e360e01b8752600487015260a0602487015260a4860190612bb8565b84810360031901604486015290612bf5565b9060648301526000608483015203925af19182612dc7575b5050612dc0576000805160206131b8833981519152915163115a489160e01b8152a15b38808080808080612cdc565b5050612db4565b612dd18291612370565b6103025780612d91565b8560c9541690823b156117a6578a516305c6a25960e21b815260806004820152928892849283918591839190612e2a8f612e18608486018f612bb8565b85810360031901602487015290612bf5565b916044840152606483015203925af19081612e6f575b50612e6a576000805160206131b8833981519152878951636c029f4b60e11b8152a15b3880612cd4565b612e63565b612e7b90969196612370565b9438612e40565b505050505050505050565b5081612c52565b92919060018060a01b039081851694600086815260209060338252612ee3604098676765c793fa10079d601b1b612ed1611e158a8d872054613125565b0490835260ce84528983205490612641565b928560c95416895196632e51d3ed60e01b885260049785818a81865afa9081156130c9578591613094575b5015612f6e575b5050505050906000198114600014612f4e5750612f3490925b83613174565b938415612f415750509190565b5163fae8279160e01b8152fd5b80939110612f5f57612f3490612f2e565b508351631206cae160e11b8152fd5b8a51634c66358f60e11b81526101209081818b81875afa91821561308a57918a93918793849261306d575b50505116928c51928380926306fdde0360e01b82525afa90811561306357918493918693612fe29691613049575b508c5180968194829363be5daee560e01b84528d8401612ad6565b03915afa92831561303d57819361300a575b50505061300091612641565b3880808080612f15565b9091809350813d8311613036575b6130228183612384565b810103126103025750516130003880612ff4565b503d613018565b508851903d90823e3d90fd5b61305d91503d8087833e611a578183612384565b38612fc7565b8b513d86823e3d90fd5b6130839250803d10611a9657611a878183612384565b3880612f99565b8d513d88823e3d90fd5b90508581813d83116130c2575b6130ab8183612384565b81010312610305576130bc906125c8565b38612f0e565b503d6130a1565b8c513d87823e3d90fd5b81156130dd570490565b634e487b7160e01b600052601260045260246000fd5b906b019d971e4fe8401e7400000082019182811161245057821061311357565b604051630a77254f60e01b8152600490fd5b60009291801591821561314e575b50501561313c57565b604051631550e8b760e01b8152600490fd5b808202945091508115828504821417156124505761316c90846130d3565b143880613133565b90676765c793fa10079d601b1b91828102928184048114821517156124505783040361313c576131a78160011c83612443565b91821061311357612ad3916130d356fe97e3d6f5d9606f45b75b508f1245f23d4d4e5470e8adae85f3156477ffdcdff0a26469706673582212201a2a35397425c2c768a9d631847ae783a21471f9a4158a973ca0ce777c71ab5564736f6c63430008120033";

type PTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PToken__factory extends ContractFactory {
  constructor(...args: PTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PToken__factory {
    return super.connect(runner) as PToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PTokenInterface {
    return new Interface(_abi) as PTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PToken {
    return new Contract(address, _abi, runner) as unknown as PToken;
  }
}
