/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPrimexDNS,
  IPrimexDNSInterface,
} from "../../../../contracts/PrimexDNS/IPrimexDNS.sol/IPrimexDNS";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aavePool",
        type: "address",
      },
    ],
    name: "AavePoolChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bucketAddress",
            type: "address",
          },
          {
            internalType: "enum IPrimexDNSStorage.Status",
            name: "currentStatus",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "delistingDeadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "adminDeadline",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IPrimexDNSStorage.BucketData",
        name: "newBucketData",
        type: "tuple",
      },
    ],
    name: "AddNewBucket",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "routerAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IPrimexDNSStorage.DexData",
        name: "newDexData",
        type: "tuple",
      },
    ],
    name: "AddNewDex",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bucketAddress",
        type: "address",
      },
    ],
    name: "BucketActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "bucketAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "delistingTime",
        type: "uint256",
      },
    ],
    name: "BucketDeprecated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bucketAddress",
        type: "address",
      },
    ],
    name: "BucketFrozen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IPrimexDNSStorage.OrderType",
        name: "orderType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "ChangeFeeRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "cmType",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "cmAddress",
        type: "address",
      },
    ],
    name: "ConditionalManagerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "routerAddress",
        type: "address",
      },
    ],
    name: "DexActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAdapterAddress",
        type: "address",
      },
    ],
    name: "DexAdapterChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "routerAddress",
        type: "address",
      },
    ],
    name: "DexFrozen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pmx",
        type: "address",
      },
    ],
    name: "PMXchanged",
    type: "event",
  },
  {
    inputs: [],
    name: "aavePool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_bucket",
        type: "string",
      },
    ],
    name: "activateBucket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_dex",
        type: "string",
      },
    ],
    name: "activateDEX",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newBucket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pmxRewardAmount",
        type: "uint256",
      },
    ],
    name: "addBucket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_routerAddress",
        type: "address",
      },
    ],
    name: "addDEX",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "adminWithdrawalDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "buckets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "enum IPrimexDNSStorage.Status",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cmType",
        type: "uint256",
      },
    ],
    name: "cmTypeToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delistingDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_bucket",
        type: "string",
      },
    ],
    name: "deprecateBucket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dexAdapter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "dexes",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPrimexDNSStorage.OrderType",
        name: "_orderType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "feeRates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_bucket",
        type: "string",
      },
    ],
    name: "freezeBucket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_dex",
        type: "string",
      },
    ],
    name: "freezeDEX",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllDexes",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getBucketAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getDexAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pmx",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_delistingDelay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_adminWithdrawalDelay",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum IPrimexDNSStorage.OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256",
          },
        ],
        internalType: "struct IPrimexDNS.FeeRateParams[]",
        name: "_feeRateParams",
        type: "tuple[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pmx",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_aavePool",
        type: "address",
      },
    ],
    name: "setAavePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cmType",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setConditionalManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdapterAddress",
        type: "address",
      },
    ],
    name: "setDexAdapter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IPrimexDNSStorage.OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256",
          },
        ],
        internalType: "struct IPrimexDNS.FeeRateParams",
        name: "_feeRateParams",
        type: "tuple",
      },
    ],
    name: "setFeeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pmx",
        type: "address",
      },
    ],
    name: "setPMX",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IPrimexDNS__factory {
  static readonly abi = _abi;
  static createInterface(): IPrimexDNSInterface {
    return new Interface(_abi) as IPrimexDNSInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IPrimexDNS {
    return new Contract(address, _abi, runner) as unknown as IPrimexDNS;
  }
}
