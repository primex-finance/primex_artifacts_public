/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPrimexDNSV3,
  IPrimexDNSV3Interface,
} from "../../../../contracts/PrimexDNS/IPrimexDNS.sol/IPrimexDNSV3";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aavePool",
        type: "address",
      },
    ],
    name: "AavePoolChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bucketAddress",
            type: "address",
          },
          {
            internalType: "enum IPrimexDNSStorage.Status",
            name: "currentStatus",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "delistingDeadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "adminDeadline",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IPrimexDNSStorage.BucketData",
        name: "newBucketData",
        type: "tuple",
      },
    ],
    name: "AddNewBucket",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "routerAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IPrimexDNSStorage.DexData",
        name: "newDexData",
        type: "tuple",
      },
    ],
    name: "AddNewDex",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bucketAddress",
        type: "address",
      },
    ],
    name: "BucketActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "bucketAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "delistingTime",
        type: "uint256",
      },
    ],
    name: "BucketDeprecated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bucketAddress",
        type: "address",
      },
    ],
    name: "BucketFrozen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "additionalGasSpent",
        type: "uint256",
      },
    ],
    name: "ChangeAdditionalGasSpent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum IPrimexDNSStorageV3.TradingOrderType",
        name: "tradingOrderType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "averageGasPerAction",
        type: "uint256",
      },
    ],
    name: "ChangeAverageGasPerAction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gasPriceBuffer",
        type: "uint256",
      },
    ],
    name: "ChangeGasPriceBuffer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "leverageTolerance",
        type: "uint256",
      },
    ],
    name: "ChangeLeverageTolerance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "liquidationGasAmount",
        type: "uint256",
      },
    ],
    name: "ChangeLiquidationGasAmount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "maxProtocolFee",
        type: "uint256",
      },
    ],
    name: "ChangeMaxProtocolFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum IPrimexDNSStorageV3.CallingMethod",
        name: "callingMethod",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxGasAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseLength",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IPrimexDNSStorageV3.MinFeeRestrictions",
        name: "minFeeRestrictions",
        type: "tuple",
      },
    ],
    name: "ChangeMinFeeRestrictions",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pmxDiscountMultiplier",
        type: "uint256",
      },
    ],
    name: "ChangePmxDiscountMultiplier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "protocolFeeCoefficient",
        type: "uint256",
      },
    ],
    name: "ChangeProtocolFeeCoefficient",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum IPrimexDNSStorageV3.FeeRateType",
        name: "feeRateType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "feeRate",
        type: "uint256",
      },
    ],
    name: "ChangeProtocolFeeRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "cmType",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "cmAddress",
        type: "address",
      },
    ],
    name: "ConditionalManagerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "routerAddress",
        type: "address",
      },
    ],
    name: "DexActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAdapterAddress",
        type: "address",
      },
    ],
    name: "DexAdapterChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "routerAddress",
        type: "address",
      },
    ],
    name: "DexFrozen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pmx",
        type: "address",
      },
    ],
    name: "PMXchanged",
    type: "event",
  },
  {
    inputs: [],
    name: "aavePool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_bucket",
        type: "string",
      },
    ],
    name: "activateBucket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_dex",
        type: "string",
      },
    ],
    name: "activateDEX",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newBucket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pmxRewardAmount",
        type: "uint256",
      },
    ],
    name: "addBucket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_routerAddress",
        type: "address",
      },
    ],
    name: "addDEX",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "additionalGasSpent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adminWithdrawalDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPrimexDNSStorageV3.TradingOrderType",
        name: "_tradingOrderType",
        type: "uint8",
      },
    ],
    name: "averageGasPerAction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "buckets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "enum IPrimexDNSStorage.Status",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cmType",
        type: "uint256",
      },
    ],
    name: "cmTypeToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delistingDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_bucket",
        type: "string",
      },
    ],
    name: "deprecateBucket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dexAdapter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "dexes",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPrimexDNSStorage.OrderType",
        name: "_orderType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "feeRates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPrimexDNSStorage.OrderType",
        name: "_orderType",
        type: "uint8",
      },
    ],
    name: "feeRestrictions",
    outputs: [
      {
        internalType: "uint256",
        name: "minProtocolFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxProtocolFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_bucket",
        type: "string",
      },
    ],
    name: "freezeBucket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_dex",
        type: "string",
      },
    ],
    name: "freezeDEX",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasPriceBuffer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllDexes",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getBucketAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getDexAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPrimexDNSStorageV3.TradingOrderType",
        name: "_tradingOrderType",
        type: "uint8",
      },
    ],
    name: "getL1BaseLengthForTradingOrderType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPrimexDNSStorageV3.TradingOrderType",
        name: "_tradingOrderType",
        type: "uint8",
      },
    ],
    name: "getParamsForMinPositionSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPrimexDNSStorageV3.CallingMethod",
        name: "_callingMethod",
        type: "uint8",
      },
    ],
    name: "getParamsForMinProtocolFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPrimexDNSStorageV3.FeeRateType",
        name: "_feeRateType",
        type: "uint8",
      },
    ],
    name: "getPrimexDNSParams",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "registry",
            type: "address",
          },
          {
            internalType: "address",
            name: "pmx",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "delistingDelay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "adminWithdrawalDelay",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "enum IPrimexDNSStorageV3.FeeRateType",
                name: "feeRateType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "feeRate",
                type: "uint256",
              },
            ],
            internalType: "struct IPrimexDNSV3.FeeRateParams[]",
            name: "feeRateParams",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum IPrimexDNSStorageV3.TradingOrderType",
                name: "tradingOrderType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "averageGasPerAction",
                type: "uint256",
              },
            ],
            internalType: "struct IPrimexDNSV3.AverageGasPerActionParams[]",
            name: "averageGasPerActionParams",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "maxProtocolFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationGasAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "protocolFeeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "additionalGasSpent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pmxDiscountMultiplier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasPriceBuffer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "leverageTolerance",
            type: "uint256",
          },
        ],
        internalType: "struct IPrimexDNSV3.InitParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "leverageTolerance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidationGasAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxProtocolFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPrimexDNSStorageV3.CallingMethod",
        name: "_callingMethod",
        type: "uint8",
      },
    ],
    name: "minFeeRestrictions",
    outputs: [
      {
        internalType: "uint256",
        name: "maxGasAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseLength",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pmx",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pmxDiscountMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFeeCoefficient",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPrimexDNSStorageV3.FeeRateType",
        name: "_feeRateType",
        type: "uint8",
      },
    ],
    name: "protocolFeeRates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_aavePool",
        type: "address",
      },
    ],
    name: "setAavePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_additionalGasSpent",
        type: "uint256",
      },
    ],
    name: "setAdditionalGasSpent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IPrimexDNSStorageV3.TradingOrderType",
            name: "tradingOrderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "averageGasPerAction",
            type: "uint256",
          },
        ],
        internalType: "struct IPrimexDNSV3.AverageGasPerActionParams",
        name: "_averageGasPerActionParams",
        type: "tuple",
      },
    ],
    name: "setAverageGasPerAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cmType",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setConditionalManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdapterAddress",
        type: "address",
      },
    ],
    name: "setDexAdapter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasPriceBuffer",
        type: "uint256",
      },
    ],
    name: "setGasPriceBuffer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_leverageTolerance",
        type: "uint256",
      },
    ],
    name: "setLeverageTolerance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxProtocolFee",
        type: "uint256",
      },
    ],
    name: "setLiquidationGasAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxProtocolFee",
        type: "uint256",
      },
    ],
    name: "setMaxProtocolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPrimexDNSStorageV3.CallingMethod",
        name: "_callingMethod",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxGasAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseLength",
            type: "uint256",
          },
        ],
        internalType: "struct IPrimexDNSStorageV3.MinFeeRestrictions",
        name: "_minFeeRestrictions",
        type: "tuple",
      },
    ],
    name: "setMinFeeRestrictions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pmx",
        type: "address",
      },
    ],
    name: "setPMX",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pmxDiscountMultiplier",
        type: "uint256",
      },
    ],
    name: "setPmxDiscountMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxProtocolFee",
        type: "uint256",
      },
    ],
    name: "setProtocolFeeCoefficient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IPrimexDNSStorageV3.FeeRateType",
            name: "feeRateType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "feeRate",
            type: "uint256",
          },
        ],
        internalType: "struct IPrimexDNSV3.FeeRateParams",
        name: "_feeRateType",
        type: "tuple",
      },
    ],
    name: "setProtocolFeeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IPrimexDNSV3__factory {
  static readonly abi = _abi;
  static createInterface(): IPrimexDNSV3Interface {
    return new Interface(_abi) as IPrimexDNSV3Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IPrimexDNSV3 {
    return new Contract(address, _abi, runner) as unknown as IPrimexDNSV3;
  }
}
