/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { PMXToken, PMXTokenInterface } from "../../contracts/PMXToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200040b57601f906001600160401b03601f1962000d3a3881900385810183168501848111868210176200030a578592829160405283396020948591810103126200040b57516001600160a01b039190828116908181036200040b57916200006962000410565b9460068652650a0e4d2dacaf60d31b878701526200008662000410565b95600390818852620a09ab60eb1b8989015280518381116200030a5782546001928382811c9216801562000400575b8c831014620003ea578b828e85941162000391575b50508b908d83116001146200032c5760009262000320575b505060001982851b1c191690821b1782555b87519283116200030a5760049788548281811c91168015620002ff575b8b821014620002ea578b81116200029f575b5089908b85116001146200023657849550908492916000956200022a575b50501b92600019911b1c19161784555b1562000222575b16928315620001e257506002546b033b2e3c9fd0803ce800000091828201809211620001cd57506002556000838152808352604080822080548401905551918252917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a36040516109099081620004318239f35b601190634e487b7160e01b6000525260246000fd5b6064926040519262461bcd60e51b845283015260248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b503362000158565b01519350388062000141565b92919484169289600052848b6000209460005b8d898383106200028757505050106200026c575b50505050811b01845562000151565b01519060f884600019921b161c19169055388080806200025d565b86860151895590970196948501948893500162000249565b896000528a6000208c80870160051c8201928d8810620002e0575b0160051c019083905b828110620002d357505062000123565b60008155018390620002c3565b92508192620002ba565b60228a634e487b7160e01b6000525260246000fd5b90607f169062000111565b634e487b7160e01b600052604160045260246000fd5b015190503880620000e2565b908c91888695168760005283600020936000905b82821062000379575050841162000360575b505050811b018255620000f4565b015160001983871b60f8161c1916905538808062000352565b83850151865588979095019493840193018f62000340565b90919250856000528d826000209181860160051c8301938610620003e0575b918691869594930160051c01915b828110620003d057508d9150620000ca565b60008155859450869101620003be565b92508192620003b0565b634e487b7160e01b600052602260045260246000fd5b91607f1691620000b5565b600080fd5b60408051919082016001600160401b038111838210176200030a5760405256fe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a7146105925750816306fdde03146104b8578163095ea7b31461048e57816318160ddd1461046f57816323b872dd146103a5578163313ce56714610389578163395093511461032257816370a08231146102eb57816395d89b41146101cc578163a457c2d71461012457508063a9059cbb146100f45763dd62ed3e146100a957600080fd5b346100f057806003193601126100f057806020926100c5610632565b6100cd61064d565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100f057806003193601126100f05760209061011d610113610632565b6024359033610663565b5160018152f35b905082346101c957826003193601126101c95761013f610632565b918360243592338152600160205281812060018060a01b03861682526020522054908282106101785760208561011d85850387336107d1565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b8383346100f057816003193601126100f057805190828454600181811c908083169283156102e1575b60209384841081146102ce578388529081156102b2575060011461025d575b505050829003601f01601f191682019267ffffffffffffffff84118385101761024a57508291826102469252826105e9565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b83851061029e5750505050830101858080610214565b805488860183015293019284908201610288565b60ff1916878501525050151560051b8401019050858080610214565b634e487b7160e01b895260228a52602489fd5b91607f16916101f5565b5050346100f05760203660031901126100f05760209181906001600160a01b03610313610632565b16815280845220549051908152f35b8284346101c957816003193601126101c95761033c610632565b338252600160209081528383206001600160a01b03831684529052828220546024358101929083106103765760208461011d8585336107d1565b634e487b7160e01b815260118552602490fd5b5050346100f057816003193601126100f0576020905160128152f35b839150346100f05760603660031901126100f0576103c1610632565b6103c961064d565b91846044359460018060a01b038416815260016020528181203382526020522054906000198203610403575b60208661011d878787610663565b84821061042c57509183916104216020969561011d950333836107d1565b9193948193506103f5565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346100f057816003193601126100f0576020906002549051908152f35b5050346100f057806003193601126100f05760209061011d6104ae610632565b60243590336107d1565b8383346100f057816003193601126100f05780519082600354600181811c90808316928315610588575b60209384841081146102ce578388529081156102b2575060011461053257505050829003601f01601f191682019267ffffffffffffffff84118385101761024a57508291826102469252826105e9565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106105745750505050830101858080610214565b80548886018301529301928490820161055e565b91607f16916104e2565b8491346105e55760203660031901126105e5573563ffffffff60e01b81168091036105e557602092506336372b0760e01b81149081156105d4575b5015158152f35b6301ffc9a760e01b149050836105cd565b8280fd5b6020808252825181830181905290939260005b82811061061e57505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016105fc565b600435906001600160a01b038216820361064857565b600080fd5b602435906001600160a01b038216820361064857565b6001600160a01b0390811691821561077e571691821561072d576000828152806020526040812054918083106106d957604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561088257169182156108325760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fdfea26469706673582212200f4edfca7224b10e00ec8c7e1f5115721256ddf4d5a89763df3e38720345198764736f6c63430008120033";

type PMXTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PMXTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PMXToken__factory extends ContractFactory {
  constructor(...args: PMXTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _recipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_recipient, overrides || {});
  }
  override deploy(
    _recipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_recipient, overrides || {}) as Promise<
      PMXToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PMXToken__factory {
    return super.connect(runner) as PMXToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PMXTokenInterface {
    return new Interface(_abi) as PMXTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PMXToken {
    return new Contract(address, _abi, runner) as unknown as PMXToken;
  }
}
