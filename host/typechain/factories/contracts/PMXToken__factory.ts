/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { PMXToken, PMXTokenInterface } from "../../contracts/PMXToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523461042957610d616020813803918261001c8161042e565b93849283398101031261042957516001600160a01b038116908181036104295790610047604061042e565b9160068352650a0e4d2dacaf60d31b6020840152610065604061042e565b60038152620a09ab60eb1b602082015283519092906001600160401b03811161033257600354600181811c9116801561041f575b602082101461031257601f81116103ba575b50602094601f821160011461035357948192939495600092610348575b50508160011b916000199060031b1c1916176003555b82516001600160401b03811161033257600454600181811c91168015610328575b602082101461031257601f81116102ad575b506020601f8211600114610246578192939460009261023b575b50508160011b916000199060031b1c1916176004555b15610234575b6001600160a01b031680156101ef576002546b033b2e3c9fd0803ce800000081018091116101d95760025580600052600060205260406000206b033b2e3c9fd0803ce8000000815401905560007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206040516b033b2e3c9fd0803ce80000008152a360405161090d90816104548239f35b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b5033610147565b01519050388061012b565b601f198216906004600052806000209160005b8181106102955750958360019596971061027c575b505050811b01600455610141565b015160001960f88460031b161c1916905538808061026e565b9192602060018192868b015181550194019201610259565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c81019160208410610308575b601f0160051c01905b8181106102fc5750610111565b600081556001016102ef565b90915081906102e6565b634e487b7160e01b600052602260045260246000fd5b90607f16906100ff565b634e487b7160e01b600052604160045260246000fd5b0151905038806100c8565b601f198216956003600052806000209160005b8881106103a257508360019596979810610389575b505050811b016003556100de565b015160001960f88460031b161c1916905538808061037b565b91926020600181928685015181550194019201610366565b60036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c81019160208410610415575b601f0160051c01905b81811061040957506100ab565b600081556001016103fc565b90915081906103f3565b90607f1690610099565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176103325760405256fe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146105885750806306fdde03146104b2578063095ea7b31461048c57806318160ddd1461046e57806323b872dd146103b0578063313ce56714610394578063395093511461032c57806370a08231146102f257806395d89b41146101d1578063a457c2d71461012a578063a9059cbb146100f95763dd62ed3e146100a357600080fd5b346100f45760403660031901126100f4576100bc610624565b6100c461063a565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b600080fd5b346100f45760403660031901126100f45761011f610115610624565b6024359033610758565b602060405160018152f35b346100f45760403660031901126100f457610143610624565b60243590336000526001602052604060002060018060a01b0382166000526020526040600020549180831061017e5761011f92039033610650565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b346100f45760003660031901126100f45760405160006004548060011c906001811680156102e8575b6020831081146102d4578285529081156102b85750600114610261575b50819003601f01601f191681019067ffffffffffffffff82118183101761024b57610247829182604052826105db565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b8282106102a257506020915082010182610217565b600181602092548385880101520191019061028d565b90506020925060ff191682840152151560051b82010182610217565b634e487b7160e01b84526022600452602484fd5b91607f16916101fa565b346100f45760203660031901126100f4576001600160a01b03610313610624565b1660005260006020526020604060002054604051908152f35b346100f45760403660031901126100f457610345610624565b336000526001602052604060002060018060a01b038216600052602052604060002054602435810180911161037e5761011f9133610650565b634e487b7160e01b600052601160045260246000fd5b346100f45760003660031901126100f457602060405160128152f35b346100f45760603660031901126100f4576103c9610624565b6103d161063a565b6001600160a01b038216600090815260016020818152604080842033855290915290912054926044359291840161040d575b61011f9350610758565b828410610429576104248361011f95033383610650565b610403565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b346100f45760003660031901126100f4576020600254604051908152f35b346100f45760403660031901126100f45761011f6104a8610624565b6024359033610650565b346100f45760003660031901126100f45760405160006003548060011c9060018116801561057e575b6020831081146102d4578285529081156102b857506001146105275750819003601f01601f191681019067ffffffffffffffff82118183101761024b57610247829182604052826105db565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b82821061056857506020915082010182610217565b6001816020925483858801015201910190610553565b91607f16916104db565b346100f45760203660031901126100f4576004359063ffffffff60e01b82168092036100f4576020916336372b0760e01b81149081156105ca575b5015158152f35b6301ffc9a760e01b149050836105c3565b91909160208152825180602083015260005b81811061060e575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016105ed565b600435906001600160a01b03821682036100f457565b602435906001600160a01b03821682036100f457565b6001600160a01b0316908115610707576001600160a01b03169182156106b75760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6001600160a01b0316908115610884576001600160a01b0316918215610833578160005260006020526040600020548181106107df57817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209285600052600084520360406000205584600052600082526040600020818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fdfea2646970667358221220eebbd627d63a428fe8cc6a85790a1435dd9de418a08ea910af944644009d1e5a64736f6c634300081a0033";

type PMXTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PMXTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PMXToken__factory extends ContractFactory {
  constructor(...args: PMXTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _recipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_recipient, overrides || {});
  }
  override deploy(
    _recipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_recipient, overrides || {}) as Promise<
      PMXToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PMXToken__factory {
    return super.connect(runner) as PMXToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PMXTokenInterface {
    return new Interface(_abi) as PMXTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PMXToken {
    return new Contract(address, _abi, runner) as unknown as PMXToken;
  }
}
