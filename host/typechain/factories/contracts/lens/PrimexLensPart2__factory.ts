/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PrimexLensPart2,
  PrimexLensPart2Interface,
} from "../../../contracts/lens/PrimexLensPart2";

const _abi = [
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract IPositionManagerV2",
        name: "_pm",
        type: "address",
      },
    ],
    name: "getEstimatedMinProtocolFeeLiquidation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761088c908161001c8239f35b600080fdfe608060408181526004908136101561001657600080fd5b600092833560e01c90816301ffc9a7146107625750634b8863831461003a57600080fd5b3461052f57602091826003193601126105e9576001600160a01b0393813585811692919083900361038f578351632630c12f60e01b81529585878481875afa96871561075857829761071c575b50845191637496a94d60e11b9485845287848681845afa9384156107125782946106f3575b508651936080948581019a818c1067ffffffffffffffff8d11176106e057899a9b8a98999a528482528b80830192868452878a82019288845260608301948986528d3a9d518094819363455259cb60e01b8352165afa9081156106a4578f89926106ae575b505081528c519289848d818c632c18d6af60e21b9a8b8352165afa9283156106a4578894899461067b575b508390528390525190868213156106715750670de0b6b3a764000091820180831161061e5786918115918215610641575b505015610631576706f05b59d3b2000081019081811161061e57811061060e570480915b528087118015610606575b6105fe575b508851633f4a2d2760e01b8152978a898981865afa9889156105f457908b91859a6105b6575b50888b518095819382525afa91821561053b579187869286948693610587575b508b5196879384928352165afa95861561057d5782938397610545575b5060a089518099639a9a775f60e01b8252600184830152816024958692165afa91821561053b578395849985946104f6575b5050839760038110156104e45780610269575b8b8b6102628c61025d8d61025d8e8e610820565b610849565b9051908152f35b60018114610431575b600214610280575b80610249565b895163060c60b160e11b815295975093949293600f602160991b0193919290918b818581885afa9081156104275786916103f4575b506102bf91610849565b90604482018092116103e3576001600160fc1b03821682036103e35750885163519b4bd360e01b81528a818481875afa9081156103d957908b9186916103a4575b5061030e9192841b90610820565b92895192838092631e8bccbb60e31b82525afa92831561039957809361035f575b505092620f424061035461026297969461034f61025d9561025d98610820565b610820565b04949581943861027a565b909192508882813d8311610392575b6103788183610799565b8101031261038f57505190620f424061035461032f565b80fd5b503d61036e565b8851903d90823e3d90fd5b82819392503d83116103d2575b6103bb8183610799565b810103126103ce57518a9061030e610300565b8480fd5b503d6103b1565b8a513d87823e3d90fd5b634e487b7160e01b85526011835284fd5b90508b81813d8311610420575b61040b8183610799565b8101031261041c57516102bf6102b5565b8580fd5b503d610401565b8b513d88823e3d90fd5b8a5163f5d6ded760e01b81529098508b818481606c5afa9081156104da5785916104ad575b5080831b908082046010149015171561049b57608c8401908185116104895760029161048191610820565b989050610272565b634e487b7160e01b8652601184528286fd5b50634e487b7160e01b84526011825283fd5b90508b81813d83116104d3575b6104c48183610799565b810103126103ce575138610456565b503d6104ba565b8b513d87823e3d90fd5b50634e487b7160e01b84526021825283fd5b96509850915060a0853d8211610533575b8161051460a09383610799565b8101031261052f5784518a8601519890950151913880610236565b8280fd5b3d9150610507565b89513d85823e3d90fd5b909650610569919350843d8611610576575b6105618183610799565b8101906107f5565b9492509050929538610204565b503d610557565b88513d84823e3d90fd5b6105a89193508d803d106105af575b6105a08183610799565b8101906107d1565b91386101e7565b503d610596565b828193929b503d83116105ed575b6105ce8183610799565b810103126105e9575184811681036105e9578a9098386101c7565b8380fd5b503d6105c4565b8a513d86823e3d90fd5b9550386101a1565b50861561019c565b8b51630a77254f60e01b81528a90fd5b634e487b7160e01b875260118b52602487fd5b8b51631550e8b760e01b81528a90fd5b9091925061064f8183610820565b9261065e57820414388061016d565b634e487b7160e01b885260128c52602488fd5b9150508091610191565b9093506106969194508a3d8c11610576576105618183610799565b50509093849193909161013c565b8e513d8a823e3d90fd5b90809250813d83116106d9575b6106c58183610799565b810103126106d55751388f610111565b8780fd5b503d6106bb565b634e487b7160e01b855260418852602485fd5b61070b919450883d8a116105af576105a08183610799565b92386100ac565b87513d84823e3d90fd5b9096508581813d8311610751575b6107348183610799565b8101031261074d5751868116810361074d579538610087565b5080fd5b503d61072a565b85513d84823e3d90fd5b8490843461052f57602036600319011261052f573563ffffffff60e01b811680910361052f576301ffc9a760e01b14815260209150f35b90601f8019910116810190811067ffffffffffffffff8211176107bb57604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126107f057516001600160a01b03811681036107f05790565b600080fd5b91908260809103126107f0578151916020810151916060604083015192015160038110156107f05790565b8181029291811591840414171561083357565b634e487b7160e01b600052601160045260246000fd5b919082018092116108335756fea2646970667358221220e6c147937ab0d26706a4de092aff0dc6dcf8485f92f58d69b9dce2c9e6babef664736f6c63430008120033";

type PrimexLensPart2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrimexLensPart2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrimexLensPart2__factory extends ContractFactory {
  constructor(...args: PrimexLensPart2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PrimexLensPart2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrimexLensPart2__factory {
    return super.connect(runner) as PrimexLensPart2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrimexLensPart2Interface {
    return new Interface(_abi) as PrimexLensPart2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrimexLensPart2 {
    return new Contract(address, _abi, runner) as unknown as PrimexLensPart2;
  }
}
