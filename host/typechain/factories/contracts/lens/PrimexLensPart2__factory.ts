/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PrimexLensPart2,
  PrimexLensPart2Interface,
} from "../../../contracts/lens/PrimexLensPart2";

const _abi = [
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract IPositionManagerV2",
        name: "_pm",
        type: "address",
      },
    ],
    name: "getEstimatedMinProtocolFeeLiquidation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bucket",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "rewardToken",
            type: "address",
          },
          {
            internalType: "bytes[][]",
            name: "pullOracleData",
            type: "bytes[][]",
          },
          {
            internalType: "uint256[]",
            name: "pullOracleTypes",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "borrowedRewardAssetOracleData",
            type: "bytes",
          },
        ],
        internalType: "struct IPrimexLensPart2.CheckRewardParams",
        name: "_params",
        type: "tuple",
      },
      {
        internalType: "contract IDepositManager",
        name: "_depositManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "priceOracle",
        type: "address",
      },
    ],
    name: "hasEnoughRewardsInDepositManager",
    outputs: [
      {
        internalType: "bool",
        name: "isEnough",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "remainingReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxDepositAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601557610bb1908161001b8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816301ffc9a71461046a575080634b886383146104315763bb23e0fe1461004257600080fd5b606036600319011261034b5760043567ffffffffffffffff811161034e57368190036004820160e06003198301126102f0576024356001600160a01b038116929083900361042d576044356001600160a01b0381169290839003610429576100bb6001600160a01b036100b483610aec565b1691610aec565b9160648601966100ca88610aec565b6040516345473c0b60e01b81526001600160a01b039586166004820152941660248501526044878101359085018190526020856064818a5afa9485156103d85782956103f5575b5084156103e35760206001600160a01b0361012b8b610aec565b16976024604051809a81936370a0823160e01b835260048301525afa9687156103d85782976103a4575b506301e1338087028781046301e133801488151715610390579061017891610b00565b670de0b6b3a76400008082029282840482148315171561037c575082040361036b576101a78460011c82610551565b90811061035a576101c56101bf600495602093610b00565b98610aec565b926040519485809263011ddaef60e71b82525afa9283156102fc5760009361030d575b5060c486013590602219018112156103085785019060048201359167ffffffffffffffff831161030857602401918036038313610308578060c4936020966040519a8b97889663735aad2560e01b885260018060a01b0316600488015260018060a01b031660248701526044860152606485015260a060848501528160a4850152848401376000828201840152601f01601f1916810103018173__$75df3f6366b0557754cd3ba14359105414$__5af49283156102fc576000936102c5575b50916060926024604051930135821015835260208301526040820152f35b6020813d6020116102f4575b816102de602093836104a6565b810103126102f05751925060606102a7565b8380fd5b3d91506102d1565b6040513d6000823e3d90fd5b600080fd5b6020939193813d602011610352575b81610329602093836104a6565b8101031261034e5751906001600160a01b038216820361034b575091386101e8565b80fd5b5080fd5b3d915061031c565b630a77254f60e01b60005260046000fd5b631550e8b760e01b60005260046000fd5b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b83526011600452602483fd5b9096506020813d6020116103d0575b816103c0602093836104a6565b8101031261034e57519538610155565b3d91506103b3565b6040513d84823e3d90fd5b60405163fe702f8960e01b8152600490fd5b9094506020813d602011610421575b81610411602093836104a6565b8101031261034e57519338610111565b3d9150610404565b8580fd5b8480fd5b503461034b57602036600319011261034b57600435906001600160a01b038216820361034b5760206104628361055e565b604051908152f35b90503461034e57602036600319011261034e5760043563ffffffff60e01b81168091036104a2576301ffc9a760e01b14815260209150f35b8280fd5b90601f8019910116810190811067ffffffffffffffff8211176104c857604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261030857516001600160a01b03811681036103085790565b9190826080910312610308578151916020810151916060604083015192015160038110156103085790565b8181029291811591840414171561053b57565b634e487b7160e01b600052601160045260246000fd5b9190820180921161053b57565b604051632630c12f60e01b81526001600160a01b039190911690602081600481855afa9081156102fc57600091610aaa575b50604051637496a94d60e11b8152602081600481865afa9081156102fc57600091610a8b575b506000604051916080830183811067ffffffffffffffff821117610a77576040528183526020830192828452604081019280845260608201908152600460203a976040519283809263455259cb60e01b825260018060a01b03165afa9081156102fc57600091610a44575b508252604051632c18d6af60e21b815292608090849060049082906001600160a01b03165afa9384156102fc57600093600095610a19575b5084905282905251916000831315610a0f5750670de0b6b3a76400000180670de0b6b3a76400001161053b5761068e91610b20565b80915b52803a118015610a07575b6109ff575b50604051633f4a2d2760e01b815291602083600481845afa9283156102fc576000936109b8575b5090602060049260405193848092637496a94d60e11b82525afa9182156102fc57600492608091600091610989575b50604051632c18d6af60e21b815293849182906001600160a01b03165afa9182156102fc5760009060009361094d575b50604051639a9a775f60e01b815260016004820152929360a090849060249082906001600160a01b03165afa9081156102fc5760009182948391610908575b5060009560038110156108f25780610795575b5050509261078d61078d9261079295610528565b610551565b90565b60006001821461082b575b506002146107ae5780610779565b60405163f1c7a58b60e01b8152600481019190915290945091506020905081602481600f602160991b015afa9081156102fc576000916107f7575b506107929261078d91610b20565b90506020813d602011610823575b81610812602093836104a6565b8101031261030857516107926107e9565b3d9150610805565b60405163f5d6ded760e01b8152909750602081600481606c5afa9081156108e75788916108b1575b508060041b908082046010149015171561089d57608c830190818411610889576002929161088091610528565b979091506107a0565b634e487b7160e01b89526011600452602489fd5b634e487b7160e01b88526011600452602488fd5b90506020813d6020116108df575b816108cc602093836104a6565b810103126108db575138610853565b8780fd5b3d91506108bf565b6040513d8a823e3d90fd5b634e487b7160e01b600052602160045260246000fd5b929194505060a0823d60a011610945575b8161092660a093836104a6565b8101031261034b57508051926080602083015192015193919338610766565b3d9150610919565b6024935060a091506109769060803d608011610982575b61096e81836104a6565b8101906104fd565b95509291506107279050565b503d610964565b6109ab915060203d6020116109b1575b6109a381836104a6565b8101906104de565b386106f7565b503d610999565b6020939193813d6020116109f7575b816109d4602093836104a6565b8101031261034e5751906001600160a01b038216820361034b57509160206106c8565b3d91506109c7565b9050386106a1565b503a1561069c565b9150508091610691565b909450610a3691935060803d6080116109825761096e81836104a6565b505090928391949091610659565b90506020813d602011610a6f575b81610a5f602093836104a6565b8101031261030857516004610621565b3d9150610a52565b634e487b7160e01b83526041600452602483fd5b610aa4915060203d6020116109b1576109a381836104a6565b386105b6565b6020813d602011610ae4575b81610ac3602093836104a6565b8101031261034e5751906001600160a01b038216820361034b575038610590565b3d9150610ab6565b356001600160a01b03811681036103085790565b8115610b0a570490565b634e487b7160e01b600052601260045260246000fd5b6000918015918215610b5b575b50501561036b576706f05b59d3b2000081019081811161053b57811061035a57670de0b6b3a7640000900490565b91509150610b73610b6c8383610528565b9283610b00565b143880610b2d56fea26469706673582212205336aaa881827badd7c9fba4e3bab6832d374f772aee74eff8c235ddb8fe15d464736f6c634300081a0033";

type PrimexLensPart2ConstructorParams =
  | [linkLibraryAddresses: PrimexLensPart2LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrimexLensPart2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PrimexLensPart2__factory extends ContractFactory {
  constructor(...args: PrimexLensPart2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PrimexLensPart2__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PrimexLensPart2LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$75df3f6366b0557754cd3ba14359105414\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PrimexLensPart2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrimexLensPart2__factory {
    return super.connect(runner) as PrimexLensPart2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrimexLensPart2Interface {
    return new Interface(_abi) as PrimexLensPart2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrimexLensPart2 {
    return new Contract(address, _abi, runner) as unknown as PrimexLensPart2;
  }
}

export interface PrimexLensPart2LibraryAddresses {
  ["contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"]: string;
}
