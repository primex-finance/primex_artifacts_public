/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BestDexLens,
  BestDexLensInterface,
} from "../../../contracts/lens/BestDexLens";

const _abi = [
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IPositionManagerV2",
            name: "positionManager",
            type: "address",
          },
          {
            internalType: "contract ILimitOrderManager",
            name: "limitOrderManager",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "firstAssetShares",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "depositInThirdAssetShares",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "depositToBorrowedShares",
                type: "uint256",
              },
            ],
            internalType: "struct IBestDexLens.Shares",
            name: "shares",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "dex",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "ancillaryData",
                type: "bytes32",
              },
            ],
            internalType: "struct IBestDexLens.DexWithAncillaryData[]",
            name: "dexes",
            type: "tuple[]",
          },
          {
            internalType: "bytes",
            name: "depositBorrowedAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes[][]",
            name: "pullOracleData",
            type: "bytes[][]",
          },
          {
            internalType: "uint256[]",
            name: "pullOracleTypes",
            type: "uint256[]",
          },
        ],
        internalType: "struct IBestDexLens.BestDexByOrderParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getBestDexByOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "returnAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "estimateGasAmount",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "shares",
                    type: "uint256",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "to",
                        type: "address",
                      },
                      {
                        components: [
                          {
                            internalType: "string",
                            name: "dexName",
                            type: "string",
                          },
                          {
                            internalType: "uint256",
                            name: "shares",
                            type: "uint256",
                          },
                          {
                            internalType: "bytes",
                            name: "payload",
                            type: "bytes",
                          },
                        ],
                        internalType: "struct PrimexPricingLibrary.Path[]",
                        name: "paths",
                        type: "tuple[]",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Route[]",
                    name: "routes",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.MegaRoute[]",
                name: "megaRoutes",
                type: "tuple[]",
              },
            ],
            internalType:
              "struct IBestDexLens.GetBestMultipleDexesReturnParams",
            name: "firstAssetReturnParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "returnAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "estimateGasAmount",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "shares",
                    type: "uint256",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "to",
                        type: "address",
                      },
                      {
                        components: [
                          {
                            internalType: "string",
                            name: "dexName",
                            type: "string",
                          },
                          {
                            internalType: "uint256",
                            name: "shares",
                            type: "uint256",
                          },
                          {
                            internalType: "bytes",
                            name: "payload",
                            type: "bytes",
                          },
                        ],
                        internalType: "struct PrimexPricingLibrary.Path[]",
                        name: "paths",
                        type: "tuple[]",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Route[]",
                    name: "routes",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.MegaRoute[]",
                name: "megaRoutes",
                type: "tuple[]",
              },
            ],
            internalType:
              "struct IBestDexLens.GetBestMultipleDexesReturnParams",
            name: "depositInThirdAssetReturnParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "returnAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "estimateGasAmount",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "shares",
                    type: "uint256",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "to",
                        type: "address",
                      },
                      {
                        components: [
                          {
                            internalType: "string",
                            name: "dexName",
                            type: "string",
                          },
                          {
                            internalType: "uint256",
                            name: "shares",
                            type: "uint256",
                          },
                          {
                            internalType: "bytes",
                            name: "payload",
                            type: "bytes",
                          },
                        ],
                        internalType: "struct PrimexPricingLibrary.Path[]",
                        name: "paths",
                        type: "tuple[]",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Route[]",
                    name: "routes",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.MegaRoute[]",
                name: "megaRoutes",
                type: "tuple[]",
              },
            ],
            internalType:
              "struct IBestDexLens.GetBestMultipleDexesReturnParams",
            name: "depositToBorrowedReturnParams",
            type: "tuple",
          },
        ],
        internalType: "struct IBestDexLens.GetBestDexByOrderReturnParams",
        name: "_returnParams",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPositionManagerV2",
        name: "_positionManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_positionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_shares",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "dex",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "ancillaryData",
            type: "bytes32",
          },
        ],
        internalType: "struct IBestDexLens.DexWithAncillaryData[]",
        name: "_dexesWithAncillaryData",
        type: "tuple[]",
      },
    ],
    name: "getBestDexByPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "returnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "estimateGasAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
        ],
        internalType: "struct IBestDexLens.GetBestMultipleDexesReturnParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IPositionManagerV2",
            name: "positionManager",
            type: "address",
          },
          {
            internalType: "address",
            name: "borrowedAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "borrowedAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "depositAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "positionAsset",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "firstAssetShares",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "depositInThirdAssetShares",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "depositToBorrowedShares",
                type: "uint256",
              },
            ],
            internalType: "struct IBestDexLens.Shares",
            name: "shares",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "dex",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "ancillaryData",
                type: "bytes32",
              },
            ],
            internalType: "struct IBestDexLens.DexWithAncillaryData[]",
            name: "dexes",
            type: "tuple[]",
          },
        ],
        internalType: "struct IBestDexLens.BestDexForOpenablePositionParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getBestDexForOpenablePosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "returnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "estimateGasAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
        ],
        internalType: "struct IBestDexLens.GetBestMultipleDexesReturnParams",
        name: "_firstAssetReturnParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "returnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "estimateGasAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
        ],
        internalType: "struct IBestDexLens.GetBestMultipleDexesReturnParams",
        name: "_depositInThirdAssetReturnParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "returnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "estimateGasAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
        ],
        internalType: "struct IBestDexLens.GetBestMultipleDexesReturnParams",
        name: "_depositToBorrowedReturnParams",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IPositionManagerV2",
            name: "positionManager",
            type: "address",
          },
          {
            internalType: "address",
            name: "assetToBuy",
            type: "address",
          },
          {
            internalType: "address",
            name: "assetToSell",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isAmountToBuy",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasPriceInCheckedAsset",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "dex",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "ancillaryData",
                type: "bytes32",
              },
            ],
            internalType: "struct IBestDexLens.DexWithAncillaryData[]",
            name: "dexes",
            type: "tuple[]",
          },
        ],
        internalType: "struct IBestDexLens.GetBestMultipleDexesParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getBestMultipleDexes",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "returnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "estimateGasAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
        ],
        internalType: "struct IBestDexLens.GetBestMultipleDexesReturnParams",
        name: "_returnParams",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346015576131be908161001b8239f35b600080fdfe6101a080604052600436101561001457600080fd5b600061016052610160513560e01c90816301ffc9a71461161a5750806318cf81b41461128d578063373c00a11461040757806343116daf146101515763d61a1b941461005f57600080fd5b3461014a57602036600319011261014a576004356001600160401b03811161014a57610100600319823603011261014a576040519061009d8261166d565b6100a9816004016116f6565b82526100b7602482016116f6565b60208301526100c8604482016116f6565b6040830152606481013560608301526084810135801515810361014a57608083015260a481013560a083015260c481013560c083015260e4810135916001600160401b03831161014a5761012861013292600461014695369201016117a5565b60e0820152611ce6565b6040519182916020835260208301906118b9565b0390f35b6101605180fd5b3461014a57608036600319011261014a576004356001600160a01b0381169081900361014a576064356001600160401b03811161014a576101969036906004016117a5565b61019e611a2a565b506040516301ffc9a760e01b8152633d79d7fb60e11b6004820152602081602481865afa9081156103ad5761016051916103cd575b50156103bb5760405163eb02c30160e01b815260243560048201526101605181602481865afa9081156103ad576101605191610276575b606082015160a083015160c084015160405161014693610132939192889290916001600160a01b0391821691168a6102418661166d565b855260208501526040840152606083015261016051608083015260443560a08301526101605160c083015260e0820152611ce6565b9290503d8061016051853e61028b81856116d5565b83019260208185031261014a578051906001600160401b03821161014a5701916101808385031261014a5760405161018081018181106001600160401b038211176103935760405283518152602084015160208201526102ed60408501611a9a565b60408201526102fe60608501611a9a565b60608201526080840151608082015261031960a08501611a9a565b60a082015260c084015160c082015261033460e08501611a9a565b60e0820152610100840151610100820152610120840151610120820152610140840151610140820152610160840151936001600160401b03851161014a5761014695610132956103849201611aae565b6101608201529193509161020a565b634e487b7160e01b61016051526041600452602461016051fd5b6040513d61016051823e3d90fd5b60405163044aa57560e41b8152600490fd5b90506020813d6020116103ff575b816103e8602093836116d5565b8101031261014a576103f990611a4b565b836101d3565b3d91506103db565b602036600319011261014a576004356001600160401b03811161014a57610140600319823603011261014a5760405160a05261044460a05161166d565b610450816004016116f6565b60a051526024810135906001600160a01b038216820361014a57602060a05101918252604060a05101916044820135835261048e366064840161170a565b606060a0510160c05260c0515260c48201356001600160401b03811161014a576104be90600436918501016117a5565b608060a051015260e48201356001600160401b03811161014a576104e89060043691850101611a0c565b9160a08051019283526101048101356001600160401b03811161014a578101903660238301121561014a5760048201356105218161173c565b9261052f60405194856116d5565b818452602060048186019360051b830101019036821161014a5760248101925b8284106111e7575050505060c060a05101918252610124810135906001600160401b03821161014a5701903660238301121561014a576004820135916105948361173c565b926105a260405194856116d5565b808452602060048186019260051b840101019136831161014a57602401905b8282106111d75750505060e060a05101918252604051610140526105e76101405161169f565b6105ef611a2a565b61014051526020610140510161010052610607611a2a565b6101005152604061014051016101205261061f611a2a565b610120515260a051516040516301ffc9a760e01b8152633d79d7fb60e11b600482015290602090829060249082906001600160a01b03165afa9081156103ad57610160519161119d575b5080611119575b156103bb5760a05151604051632630c12f60e01b815290602090829060049082906001600160a01b03165afa9081156103ad5761016051916110fa575b5090519151906001600160a01b0316803b1561014a579160405192839163f197ce3560e01b8352604483016040600485015281518091526064840190602060648260051b87010193019161016051905b82821061107d575050505060031983820301602484015260208085519283815201940190610160515b8181106110645750505081806101605194039134905af180156103ad57611051575b5051915160405163d09ef24160e01b81526004810191909152610160519092839060249082906001600160a01b03165afa80156103ad576101605160e052610f17575b60e051610120015160049250670de0b6b3a764000003610e8a5760e051604001516001600160a01b0316905b60a05151604051633f4a2d2760e01b81529360209185919082906001600160a01b03165afa9283156103ad576101605193610e69575b5060e051604001516001600160a01b0390811660808190529083161415908180610e4b575b610dd0575b60018060a01b03604060e05101511690606060e051015191604061012051510151916040519660808801908882106001600160401b038311176103935760409182529288526001600160a01b0387811660208a81019182528a84019790975260608a0195865291516391f03efd60e01b81529195919384916004918391165afa9081156103ad576101605191610d94575b60a05151604051632630c12f60e01b81529350602090849060049082906001600160a01b03165afa9283156103ad576101605193610d63575b505160408051630e6e928f60e41b815260a0600482015289516001600160a01b0390811660a4830152965190961660c4870152979097015160e48501529151608061010485015280516101248501819052610160519497610144600583901b8a018101968a9692959492936020909301929187015b828210610c37575050505085151560248501526001600160a01b039081166044850152166064830152818303600319016084830152602092829161099a9190611894565b038173__$75df3f6366b0557754cd3ba14359105414$__5af49283156103ad576101605193610bfe575b5060e0516101200151670de0b6b3a763ffff19810193908411610bb05761016051938015908115610bdf575b5015610bca576706f05b59d3b20000840193848111610bb0578410610b9b57608051610aae94670de0b6b3a7640000900492906001600160a01b03851603610b065750610a3c91611a58565b60a051805160e0516020015160c05151516080909301516040519590949290916001600160a01b039081169116610a728761166d565b865260208601526001600160a01b0316604085015260608401526101608051608085015260a08401919091525160c083015260e0820152611ce6565b61014051526040516020815280610146610af0610ada61014051516060602086015260808501906118b9565b6101005151848203601f190160408601526118b9565b6101205151838203601f190160608501526118b9565b905015610a3c57610b9160018060a01b0360a051511660018060a01b03602060e05101511660018060a01b03604060e051015116606060e0510151602060c05151015191608060a05101519360405195610b5f8761166d565b865260208601526040850152606084015261016051608084015260a08301526101605160c083015260e0820152611ce6565b6101005152610a3c565b630a77254f60e01b6101605152600461016051fd5b634e487b7160e01b61016051526011600452602461016051fd5b631550e8b760e01b6101605152600461016051fd5b94505080610bf7610bf08683611c75565b9586611bba565b14856109f0565b9092506020813d602011610c2f575b81610c1a602093836116d5565b81010312610c2a575191836109c4565b600080fd5b3d9150610c0d565b9193949596509196610143198b820301825287519060206040820192805183520151916040602083015282518091526060820190602060608260051b850101940192610160515b828110610ca25750505050506020806001929901920192018a969594939192610956565b9091929394605f1983820301855285516020604083019160018060a01b0381511684520151916040602082015282518092526060810190602060608460051b83010194019261016051915b818310610d0e57505050505060208060019297019501910192919092610c7e565b9091929394602080610d56600193605f198682030189528951906040610d3d8351606084526060840190611894565b9285810151868401520151906040818403910152611894565b9701950193019190610ced565b610d8691935060203d602011610d8d575b610d7e81836116d5565b810190611a7b565b91886108e1565b503d610d74565b90506020823d602011610dc8575b81610daf602093836116d5565b8101031261014a57610dc2600492611a9a565b906108a8565b3d9150610da2565b610e4160018060a01b0360a0515116606060e0510151604060c051510151608060a05101519160405193610e038561166d565b845260018060a01b03881660208501526080516040850152606084015261016051608084015260a08301526101605160c083015260e0820152611ce6565b6101205152610817565b60e051602001516080516001600160a01b0390911614159250610812565b610e8391935060203d602011610d8d57610d7e81836116d5565b91836107ed565b60e0515160405163011ddaef60e71b81529260209184919082906001600160a01b03165afa80156103ad576101605190610ed2575b600492506001600160a01b0316906107b7565b50906020813d602011610f0f575b81610eed602093836116d5565b8101031261014a5751906001600160a01b038216820361014a57600491610ebf565b3d9150610ee0565b3d8061016051843e610f2981846116d5565b82019160208184031261014a578051906001600160401b03821161014a57016101c08184031261014a57604051906101c082018281106001600160401b0382111761039357604052610f7a81611a9a565b8252610f8860208201611a9a565b6020830152610f9960408201611a9a565b604083015260608101516060830152610fb460808201611a9a565b608083015260a081015160a0830152610fcf60c08201611a9a565b60c083015260e081015160e08301526101008101516101008301526101208101516101208301526110036101408201611a4b565b6101408301526101608101516101608301526101808101516101808301526101a0810151936001600160401b03851161014a576004946110439201611aae565b6101a082015260e05261078b565b6101605161105e916116d5565b83610748565b8251865260209586019587955090920191600101610726565b91939092949550606319888203018252845190815180825260208201906020808260051b850101940192610160515b8281106110cf5750505050506020806001929601920192018795949391926106fd565b90919293946020806110ed600193601f198782030189528951611894565b97019501939291016110ac565b611113915060203d602011610d8d57610d7e81836116d5565b866106ad565b5082516040516301ffc9a760e01b815263fabd349d60e01b600482015290602090829060249082906001600160a01b03165afa9081156103ad576101605191611163575b50610670565b90506020813d602011611195575b8161117e602093836116d5565b8101031261014a5761118f90611a4b565b8661115d565b3d9150611171565b90506020813d6020116111cf575b816111b8602093836116d5565b8101031261014a576111c990611a4b565b86610669565b3d91506111ab565b81358152602091820191016105c1565b83356001600160401b03811161014a5760049083010136603f8201121561014a5760208101356112168161173c565b9161122460405193846116d5565b8183526020808085019360051b830101019036821161014a5760408101925b82841061125d57505050908252506020938401930161054f565b83356001600160401b03811161014a5760209161128283928380369288010101611a0c565b815201930192611243565b3461014a57602036600319011261014a576004356001600160401b03811161014a57610140600319823603011261014a576040516112ca8161166d565b6112d6826004016116f6565b81526112e4602483016116f6565b9160208201928352604082019060448101358252611304606482016116f6565b906060840191825260808401946084820135865261132460a483016116f6565b9160a086019283526113393660c4830161170a565b9060c08701918252610124810135906001600160401b03821161014a57600461136592369201016117a5565b60e0870190815290611375611a2a565b5061137e611a2a565b95611387611a2a565b88516040516301ffc9a760e01b8152633d79d7fb60e11b600482015291979190602090829060249082906001600160a01b03165afa9081156103ad5761016051916115e0575b50806115cd575b806115ba575b806115a7575b156103bb578951156115955781511580159061157d575b1561156b57845181516114969b6001600160a01b03918216929091168281149391928415918280611556575b611520575b50506114bd575b5098519551945191519798610146986114a497611481976001600160a01b0391821697908216969095909491169261146e9291156114b2575190611a58565b91515192519360405195610b5f8761166d565b936040519586956060875260608701906118b9565b9085820360208701526118b9565b9083820360408501526118b9565b506101605190611a58565b61014699506114819694926114a49896949261151061146e938e60018060a01b039051169060018060a01b038b51169060018060a01b03905116845160208a510151918b519360405195610b5f8761166d565b9b5092949698509294965061142f565b8d51855189516040908101518c519151969f5061154e9695919490936001600160a01b0316610b5f8761166d565b988d80611428565b8b516001600160a01b03168314159350611423565b6040516396b154ab60e01b8152600490fd5b50845181516001600160a01b039081169116146113f7565b60405163511ff7fb60e11b8152600490fd5b5085516001600160a01b031615156113e0565b5080516001600160a01b031615156113da565b5084516001600160a01b031615156113d4565b90506020813d602011611612575b816115fb602093836116d5565b8101031261014a5761160c90611a4b565b8b6113cd565b3d91506115ee565b3461014a57602036600319011261014a576004359063ffffffff60e01b821680920361014a57602091635d7c7b9760e11b811490811561165c575b5015158152f35b6301ffc9a760e01b14905083611655565b61010081019081106001600160401b0382111761168957604052565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761168957604052565b604081019081106001600160401b0382111761168957604052565b90601f801991011681019081106001600160401b0382111761168957604052565b35906001600160a01b0382168203610c2a57565b9190826060910312610c2a576040516117228161169f565b604080829480358452602081013560208501520135910152565b6001600160401b0381116116895760051b60200190565b6001600160401b03811161168957601f01601f191660200190565b92919261177a82611753565b9161178860405193846116d5565b829481845281830111610c2a578281602093846000960137010152565b81601f82011215610c2a578035906117bc8261173c565b926117ca60405194856116d5565b82845260208085019360051b83010191818311610c2a5760208101935b8385106117f657505050505090565b84356001600160401b038111610c2a5782016040818503601f190112610c2a5760405191611823836116ba565b60208201356001600160401b038111610c2a576020908301019285601f85011215610c2a5760406020949361185e888688809835910161176e565b83520135838201528152019401936117e7565b60005b8381106118845750506000910152565b8181015183820152602001611874565b906020916118ad81518092818552858086019101611871565b601f01601f1916010190565b906040606082019280518352602081015160208401520151916060604083015282518091526080820191602060808360051b8301019401926000915b83831061190457505050505090565b9091929394607f1982820301835285519060206040820192805183520151916040602083015282518091526060820190602060608260051b85010194019260005b828110611966575050505050602080600192970193019301919392906118f5565b9091929394605f1983820301855285516020604083019160018060a01b0381511684520151916040602082015282518092526060810190602060608460051b8301019401926000915b8183106119d057505050505060208060019297019501910192919092611945565b90919293946020806119ff600193605f198682030189528951906040610d3d8351606084526060840190611894565b97019501930191906119af565b9080601f83011215610c2a57816020611a279335910161176e565b90565b60405190611a378261169f565b606060408360008152600060208201520152565b51908115158203610c2a57565b91908201809211611a6557565b634e487b7160e01b600052601160045260246000fd5b90816020910312610c2a57516001600160a01b0381168103610c2a5790565b51906001600160a01b0382168203610c2a57565b81601f82011215610c2a578051611ac481611753565b92611ad260405194856116d5565b81845260208284010111610c2a57611a279160208085019101611871565b91908203918211611a6557565b90611b078261173c565b611b1460405191826116d5565b8281528092611b25601f199161173c565b0190602036910137565b60005b828110611b3e57505050565b606082820152602001611b32565b90611b81611b598361173c565b611b6660405191826116d5565b83815260208194611b79601f199161173c565b019101611b2f565b565b805115611b905760200190565b634e487b7160e01b600052603260045260246000fd5b8051821015611b905760209160051b010190565b8115611bc4570490565b634e487b7160e01b600052601260045260246000fd5b90602082820312610c2a5781516001600160401b038111610c2a57611a279201611aae565b929593909594919460a084019660a085528051809852602060c0860191019760005b818110611c565750506001600160a01b0396871660208601526040850191909152941660608301521515608090910152909150565b89516001600160a01b031683526020998a019990920191600101611c21565b81810292918115918404141715611a6557565b81810392916000138015828513169184121617611a6557565b91909160008382019384129112908015821691151617611a6557565b6000198114611a655760010190565b60405190611cd9826116ba565b6060602083600081520152565b611cee611a2a565b60208201519091906001600160a01b0316151580612f95575b15612f8357602081015160408201805190916001600160a01b03918216911614612f715760a0820191825115612f5c576060810151835111612f4a576040519260c084018481106001600160401b03821117611689576040526000845260006020850152606060408501526000606085015260006080850152606060a085015260e08201515190611d978261173c565b91611da560405193846116d5565b808352611db4601f199161173c565b0160005b818110612f25575050518452611dd260e083015151611afd565b60a0850152611de560e083015151611b4c565b95606093611e2060405191611dfa87846116d5565b60028352601f19870136602085013760408801839052516001600160a01b031691611b83565b5260018060a01b036020840151166040860151805160011015611b90576040015260405193611e4e8561169f565b808552600060208601526000604086015260005b60e085015151811015612631578451604051633f4a2d2760e01b815290602090829060049082906001600160a01b03165afa9081156123fc57611ede91602091600091612614575b50611eb98460e08a0151611ba6565b515190604051808095819463657dcce560e01b83528660048401526024830190611894565b03916001600160a01b03165afa600091816125d9575b50611f0457506001905b01611e62565b8551604051633f4a2d2760e01b81529299939593949290602090829060049082906001600160a01b03165afa9081156123fc576004916020916000916125bc575b506040516391f03efd60e01b815292839182906001600160a01b03165afa9081156123fc5760009161257c575b506040516336dd6b3d60e01b81526001600160a01b03808416600483015290929160209184916024918391165afa9182156123fc57600092612549575b50611fc060608801518a5190611bba565b602089015260018060a01b038116604089015260408901519060046020611feb8d60e08c0151611ba6565b5101518951604051633f4a2d2760e01b81529194919260209184919082906001600160a01b03165afa9182156123fc5760049260209160009161252c575b506040516391f03efd60e01b815293849182906001600160a01b03165afa9182156123fc576000926124e9575b5060808a015160405163340f07ad60e11b8152946000948694859461208e941515936001600160a01b03909216929060048701611bff565b038173__$75df3f6366b0557754cd3ba14359105414$__5af49081156123fc576000916124c8575b5087528551604051633f4a2d2760e01b815290602090829060049082906001600160a01b03165afa9081156123fc576004916020916000916124ab575b506040516391f03efd60e01b815292839182906001600160a01b03165afa80156123fc57600090612471575b608088015161213b92501515906001600160a01b031689613036565b908a6000198314612461576121c96121cf926121a78c670de0b6b3a7640000948f8a61216f8f9260e0612186940151611ba6565b5161217f60608601518093611ba6565b528b611ba6565b5060606121938351611afd565b920151916121a18383611ba6565b52611ba6565b50806121bd8d606060a082015191015190611ba6565b5260c08a015190611c75565b04613121565b608089015260808601511515600014612445576121ee6121f991613121565b608089015190611ca1565b61221061220a60608a01518c611ba6565b51611b83565b5260015b87518110156124255760608601519060018101808211611a655761223d61224591600494611c75565b8a5190611bba565b6020898101919091528751604051633f4a2d2760e01b815293849182906001600160a01b03165afa9182156123fc57600492602091600091612408575b506040516391f03efd60e01b815293849182906001600160a01b03165afa80156123fc57888a91898e9560009261239f575b5060800180516001966123279487946123219492936122e092901515916001600160a01b031690613036565b90516000901561234c5750600019810361232e575060607d90e40fbeea1d3a4abc8955e946fe31cdcf66f634e10000000000000000005b955b015190611ba6565b51611ba6565b5201612214565b61234761233c606092613121565b608088015190611ca1565b612317565b506000198103612381575060607fffff6f1bf04115e2c5b54376aa16b901ce32309909cb1f0000000000000000005b95612319565b61239a61238f606092613121565b608088015190611c88565b61237b565b949550509150506020823d82116123f4575b816123be602093836116d5565b810103126123f157509088612327826123218e8c6122e08d60806123e360019b611a9a565b9650509350509350956122b4565b80fd5b3d91506123b1565b6040513d6000823e3d90fd5b61241f9150823d8111610d8d57610d7e81836116d5565b38612282565b50919660019093919361243b6060890151611cbd565b6060890152611efe565b61245161245c91613121565b608089015190611c88565b6121f9565b5050509196600190939193611efe565b6020823d82116124a3575b81612489602093836116d5565b810103126123f1575061249e61213b91611a9a565b61211f565b3d915061247c565b6124c29150823d8111610d8d57610d7e81836116d5565b386120f3565b6124e3913d8091833e6124db81836116d5565b810190611bda565b386120b6565b90916020823d8211612524575b81612503602093836116d5565b810103126123f157509061208e61251c60009493611a9a565b929350612056565b3d91506124f6565b6125439150823d8111610d8d57610d7e81836116d5565b38612029565b90916020823d8211612574575b81612563602093836116d5565b810103126123f15750519038611faf565b3d9150612556565b906020823d82116125b4575b81612595602093836116d5565b810103126123f157509060206125ac602493611a9a565b919250611f72565b3d9150612588565b6125d39150823d8111610d8d57610d7e81836116d5565b38611f45565b90916020823d821161260c575b816125f3602093836116d5565b810103126123f1575061260590611a9a565b9038611ef4565b3d91506125e6565b61262b9150823d8111610d8d57610d7e81836116d5565b38611eaa565b50959290969350606085015115612f135761264f6060860151611afd565b60009061265f6060880151611b4c565b6101805260608701519761269c6126758a61173c565b996126836040519b8c6116d5565b808b52612692601f199161173c565b0160208b01611b2f565b60005b60608901518110156126fa576001906126b88a51611afd565b6126c58261018051611ba6565b526126d38161018051611ba6565b506126de8a51611afd565b6126e8828d611ba6565b526126f3818c611ba6565b500161269f565b50909192939497959860005b8a8951821015612738579061272081612321600194611b83565b516127318261232161018051611b83565b5201612706565b505095969793949291906001965b60608a01518810156128e75760005b8a518110156128db5788600019810111611a655761277e816123216000198c0161018051611ba6565b5160018201808311611a6557828b8f828f94836127a793612321926121a185612321858c611ba6565b5160808d0151156128d35784811280156128cb575b6128ae575b5050505060005b8281106127ec5750906001916127e5826123218d61018051611ba6565b5201612755565b908a600019810111611a65576128096000198c0161018051611ba6565b51916128158185611af0565b600019810193908411611a65578f8c8f928f968893612848876123218b61284161284f96608098611ba6565b5194611ba6565b5190611ca1565b910151156128a657848112801561289e575b612874575b5050506001919250016127c8565b6001945090612321612891929661288b8684611af0565b94611ba6565b528b9291508c8438612866565b508415612861565b848113612861565b93506000926128c1929161232191611ba6565b528a828b386127c1565b5084156127bc565b8481136127bc565b50600190970196612746565b9297965093909498979283519960005b606086015180821015612f01578c156129b3578161291491611af0565b9b8c600019810111611a655761292e6000198e018b611ba6565b5181600019810111611a6557612991916129798f8c61296e61296261295b61298597600019880190611ba6565b5186611af0565b91600019840190611ba6565b52600019018d611ba6565b51906000190190611ba6565b519c6000190189611ba6565b5161299f575b6001016128f7565b986129ab600191611cbd565b999050612997565b505094919792989399509495505b8115612ef65760409182516129d684826116d5565b60018152601f1984019060005b828110612edf5750848a01528351906129fc85836116d5565b6001825260005b818110612ec85750508351612a3891612a1b826116ba565b600182526020820152848a015190612a3282611b83565b52611b83565b5060208501516001600160a01b031691612a518261173c565b91612a5e855193846116d5565b808352612a6d601f199161173c565b019060005b828110612ea05750505090612aaf91835191612a8d836116ba565b825260208201526020612aa2848a0151611b83565b51015190612a3282611b83565b5060005b6060890151811015612e9657612ac98187611ba6565b5115612e8e57612ad98187611ba6565b5190612ae58187611ba6565b515160408b015186518551633f4a2d2760e01b815291949190602090829060049082906001600160a01b03165afa908115612dc657612b599291602091600091612e71575b50612b35868c611ba6565b5151908851808096819463657dcce560e01b83528660048401526024830190611894565b03916001600160a01b03165afa918215612dc657600092612e36575b506020612b82858b611ba6565b51015188518751633f4a2d2760e01b815291939190602090829060049082906001600160a01b03165afa908115612e0e57600491602091600091612e19575b5089516391f03efd60e01b815292839182906001600160a01b03165afa908115612e0e57600091612dd1575b5060808a018051895163340f07ad60e11b81529198919560009487948594612c28941515936001600160a01b03909216929060048701611bff565b038173__$75df3f6366b0557754cd3ba14359105414$__5af4918215612dc6576020612c80888e612c9b97968496612c8896600092612dab575b50835198612c6f8a61169f565b895285890152828801520151611b83565b510151611b83565b51015160208d0151916121a18383611ba6565b50612ca960208b0151611cbd565b60208b01528960208901612ccd612cc68460a08451950151611ba6565b5183611a58565b918210612d9a5752612cdf8185611ba6565b51612cea8289611ba6565b51600019810193908411611a655782612d08600195612d2694611ba6565b518d8c51936000908315600014612d2f575050505050600090611a58565b88525b01612ab3565b51159050612d6f57670de0b6b3a76400006121c9612d57612d699560a0612d63950151611ba6565b5160c08d015190611c75565b90611c88565b90611a58565b670de0b6b3a76400006121c9612d57612d959560a0612d8f950151611ba6565b90611ca1565b612d69565b630a77254f60e01b60005260046000fd5b612dbf91923d8091833e6124db81836116d5565b9038612c62565b86513d6000823e3d90fd5b906020823d8211612e06575b81612dea602093836116d5565b810103126123f1575090612dff600092611a9a565b9091612bed565b3d9150612ddd565b88513d6000823e3d90fd5b612e309150823d8111610d8d57610d7e81836116d5565b38612bc1565b90916020823d8211612e69575b81612e50602093836116d5565b810103126123f15750612e6290611a9a565b9038612b75565b3d9150612e43565b612e889150823d8111610d8d57610d7e81836116d5565b38612b2a565b600190612d29565b5050505050509150565b6020908651612eae8161169f565b838152600083820152838882015282828701015201612a72565b602090612ed3611ccc565b82828601015201612a03565b602090612eea611ccc565b828285010152016129e3565b509496505050505050565b505094919792989399509495506129c1565b60405163af16b31b60e01b8152600490fd5b602090604051612f34816116ba565b6060815260008382015282828701015201611db8565b604051631edbd19360e11b8152600490fd5b6040516001622c3a8160e21b03198152600490fd5b604051635c6726db60e11b8152600490fd5b604051632638e39360e11b8152600490fd5b5060408101516001600160a01b03161515611d07565b90606082820312610c2a5780601f83011215610c2a5760405191612fce8361169f565b829060608101928311610c2a57905b828210612fea5750505090565b8151815260209182019101612fdd565b60208152606061301583518260208501526080840190611894565b6020840151604084810191909152909301516001600160a01b031691015290565b6060916000936130ba576130609160405194858094819363eb5251a560e01b835260048301612ffa565b03926001600160a01b03165af160009181613089575b50613082575060001990565b6020015190565b6130ac91925060603d6060116130b3575b6130a481836116d5565b810190612fab565b9038613076565b503d61309a565b6130da91604051948580948193630fafa65f60e11b835260048301612ffa565b03926001600160a01b03165af160009181613100575b506130fc575060001990565b5190565b61311a91925060603d6060116130b3576130a481836116d5565b90386130f0565b6001600160ff1b0381116131325790565b60405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608490fdfea2646970667358221220e1cdc4f8cf1eb8ede4b600bae859681924b5f333a4e038628d093c4e4ad029ba64736f6c634300081a0033";

type BestDexLensConstructorParams =
  | [linkLibraryAddresses: BestDexLensLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BestDexLensConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class BestDexLens__factory extends ContractFactory {
  constructor(...args: BestDexLensConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        BestDexLens__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: BestDexLensLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$75df3f6366b0557754cd3ba14359105414\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BestDexLens & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BestDexLens__factory {
    return super.connect(runner) as BestDexLens__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BestDexLensInterface {
    return new Interface(_abi) as BestDexLensInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BestDexLens {
    return new Contract(address, _abi, runner) as unknown as BestDexLens;
  }
}

export interface BestDexLensLibraryAddresses {
  ["contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"]: string;
}
