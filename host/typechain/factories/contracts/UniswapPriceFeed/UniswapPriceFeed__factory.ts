/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  UniswapPriceFeed,
  UniswapPriceFeedInterface,
} from "../../../contracts/UniswapPriceFeed/UniswapPriceFeed";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "uniswapV3Factory_",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "twapInterval_",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "poolUpdateInterval_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "registry_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "poolAddress",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "uint48",
            name: "lastUpdatedTimestamp",
            type: "uint48",
          },
          {
            internalType: "uint16",
            name: "lastUpdatedCardinalityNext",
            type: "uint16",
          },
        ],
        indexed: false,
        internalType: "struct IUniswapPriceFeed.PoolData",
        name: "pool",
        type: "tuple",
      },
    ],
    name: "PoolUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_CARDINALITY",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATE_INTERVAL",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "activeFees",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    name: "addFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fees",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteToken",
        type: "address",
      },
    ],
    name: "getExchangeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getPool",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "poolAddress",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "uint48",
            name: "lastUpdatedTimestamp",
            type: "uint48",
          },
          {
            internalType: "uint16",
            name: "lastUpdatedCardinalityNext",
            type: "uint16",
          },
        ],
        internalType: "struct IUniswapPriceFeed.PoolData",
        name: "pool",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "baseAmount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsTwapInterval",
        type: "uint32",
      },
    ],
    name: "getQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "baseAmount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsTwapInterval",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "secondsUpdateInterval",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "cardinalityNextIncrease",
        type: "uint8",
      },
    ],
    name: "getQuoteAndUpdatePool",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "secondsUpdateInterval",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "cardinalityNextIncrease",
        type: "uint8",
      },
    ],
    name: "getUpdatedPool",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "poolAddress",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "uint48",
            name: "lastUpdatedTimestamp",
            type: "uint48",
          },
          {
            internalType: "uint16",
            name: "lastUpdatedCardinalityNext",
            type: "uint16",
          },
        ],
        internalType: "struct IUniswapPriceFeed.PoolData",
        name: "pool",
        type: "tuple",
      },
      {
        internalType: "int56[]",
        name: "tickCumulatives",
        type: "int56[]",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "poolUpdateInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pools",
    outputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "uint48",
        name: "lastUpdatedTimestamp",
        type: "uint48",
      },
      {
        internalType: "uint16",
        name: "lastUpdatedCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolUpdateInterval",
        type: "uint256",
      },
    ],
    name: "setPoolUpdateInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_twapInterval",
        type: "uint32",
      },
    ],
    name: "setTwapInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "twapInterval",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV3Factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "cardinalityNextIncrease",
        type: "uint8",
      },
    ],
    name: "updatePool",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "poolAddress",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "uint48",
            name: "lastUpdatedTimestamp",
            type: "uint48",
          },
          {
            internalType: "uint16",
            name: "lastUpdatedCardinalityNext",
            type: "uint16",
          },
        ],
        internalType: "struct IUniswapPriceFeed.PoolData",
        name: "highestLiquidityPool",
        type: "tuple",
      },
      {
        internalType: "int56[]",
        name: "tickCumulatives",
        type: "int56[]",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type UniswapPriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapPriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapPriceFeed__factory extends ContractFactory {
  constructor(...args: UniswapPriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    uniswapV3Factory_: AddressLike,
    twapInterval_: BigNumberish,
    poolUpdateInterval_: BigNumberish,
    registry_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      uniswapV3Factory_,
      twapInterval_,
      poolUpdateInterval_,
      registry_,
      overrides || {}
    );
  }
  override deploy(
    uniswapV3Factory_: AddressLike,
    twapInterval_: BigNumberish,
    poolUpdateInterval_: BigNumberish,
    registry_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      uniswapV3Factory_,
      twapInterval_,
      poolUpdateInterval_,
      registry_,
      overrides || {}
    ) as Promise<
      UniswapPriceFeed & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UniswapPriceFeed__factory {
    return super.connect(runner) as UniswapPriceFeed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapPriceFeedInterface {
    return new Interface(_abi) as UniswapPriceFeedInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UniswapPriceFeed {
    return new Contract(address, _abi, runner) as unknown as UniswapPriceFeed;
  }
}
