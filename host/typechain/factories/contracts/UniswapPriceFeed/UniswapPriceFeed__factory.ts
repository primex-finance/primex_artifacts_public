/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  UniswapPriceFeed,
  UniswapPriceFeedInterface,
} from "../../../contracts/UniswapPriceFeed/UniswapPriceFeed";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "uniswapV3Factory_",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "twapInterval_",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "poolUpdateInterval_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "registry_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "poolAddress",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "uint48",
            name: "lastUpdatedTimestamp",
            type: "uint48",
          },
          {
            internalType: "uint16",
            name: "lastUpdatedCardinalityNext",
            type: "uint16",
          },
        ],
        indexed: false,
        internalType: "struct IUniswapPriceFeed.PoolData",
        name: "pool",
        type: "tuple",
      },
    ],
    name: "PoolUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_CARDINALITY",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATE_INTERVAL",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "activeFees",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    name: "addFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fees",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteToken",
        type: "address",
      },
    ],
    name: "getExchangeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getPool",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "poolAddress",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "uint48",
            name: "lastUpdatedTimestamp",
            type: "uint48",
          },
          {
            internalType: "uint16",
            name: "lastUpdatedCardinalityNext",
            type: "uint16",
          },
        ],
        internalType: "struct IUniswapPriceFeed.PoolData",
        name: "pool",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "baseAmount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsTwapInterval",
        type: "uint32",
      },
    ],
    name: "getQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "baseAmount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsTwapInterval",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "secondsUpdateInterval",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "cardinalityNextIncrease",
        type: "uint8",
      },
    ],
    name: "getQuoteAndUpdatePool",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "secondsUpdateInterval",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "cardinalityNextIncrease",
        type: "uint8",
      },
    ],
    name: "getUpdatedPool",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "poolAddress",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "uint48",
            name: "lastUpdatedTimestamp",
            type: "uint48",
          },
          {
            internalType: "uint16",
            name: "lastUpdatedCardinalityNext",
            type: "uint16",
          },
        ],
        internalType: "struct IUniswapPriceFeed.PoolData",
        name: "pool",
        type: "tuple",
      },
      {
        internalType: "int56[]",
        name: "tickCumulatives",
        type: "int56[]",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "poolUpdateInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pools",
    outputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "uint48",
        name: "lastUpdatedTimestamp",
        type: "uint48",
      },
      {
        internalType: "uint16",
        name: "lastUpdatedCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolUpdateInterval",
        type: "uint256",
      },
    ],
    name: "setPoolUpdateInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_twapInterval",
        type: "uint32",
      },
    ],
    name: "setTwapInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "twapInterval",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV3Factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "cardinalityNextIncrease",
        type: "uint8",
      },
    ],
    name: "updatePool",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "poolAddress",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "uint48",
            name: "lastUpdatedTimestamp",
            type: "uint48",
          },
          {
            internalType: "uint16",
            name: "lastUpdatedCardinalityNext",
            type: "uint16",
          },
        ],
        internalType: "struct IUniswapPriceFeed.PoolData",
        name: "highestLiquidityPool",
        type: "tuple",
      },
      {
        internalType: "int56[]",
        name: "tickCumulatives",
        type: "int56[]",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040818152346200034657608082620032bb80380380916200002482856200034b565b83398101031262000346576200003a826200036f565b9160208082015163ffffffff91828216820362000346576200006360608686015195016200036f565b8551909490926001600160401b039184880183811186821017620003305788526107088552600095868587015286549560029687895580881062000306575b50878052858820908892895b888a8210620002e1575050505055875192608084019084821090821117620002cd5788526127108352610bb8848401526101f48884015260646060840152600196875493600494858a558086106200029b575b508888528588208891895b8b8989831062000273575050509190555088516301ffc9a760e01b8152637965db0b60e01b858201526001600160a01b039190911692908581602481875afa9081156200026957889162000228575b5015620002185787989960805283549160055563ffffffff60a01b9060a01b169060018060c01b0319161717905582935b620001cd575b8551612f1d90816200039e82396080518181816108d4015281816109ba01528181610e8a01528181611d35015281816121fb01526125cf0152f35b8454841015620002125784809481855262ffffff838620600a9081840401549060038091850602901b1c1685528383528785208260ff1982541617905501936200018c565b62000192565b885163044aa57560e41b81528490fd5b90508581813d831162000261575b6200024281836200034b565b810103126200025d575180151581036200025d57386200015b565b8780fd5b503d62000236565b8a513d8a823e3d90fd5b9091929461ffff8651169062ffffff6003868102901b92831b921b191617940191016200010c565b89895286892080546001600160601b03168155620002c691600a6009909101048101908b0162000384565b3862000101565b634e487b7160e01b87526041600452602487fd5b8395836001939495511690858560051b92831b921b19161795019101919091620000ae565b888052868920805487168155620003299160070160031c81019060010162000384565b38620000a2565b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200033057604052565b51906001600160a01b03821682036200034657565b81811062000390575050565b600081556001016200038456fe60e080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146111e95750806311be8a5214610bc05780631d27050f14610add5780633c1d5df014610ab6578063403e05d31461097b5780634acc79ed1461093e578063531aa03e146109035780635b549182146108be57806363711362146107da5780637b103999146107b15780638200d8731461079457806389ac414714610777578063901754d7146106f957806394fafa1214610632578063a2d7046f146105e0578063b21dfd20146105a2578063baaa61be1461026b578063c14152331461024d5763d5cefadc146100f057600080fd5b346102485760c036600319011261024857610109611382565b610111611252565b610119611268565b61012161131a565b9160a4359260ff84168403610248576101406000946084358585612504565b825190936001600160a01b039392508491841680610164575b602089604051908152f35b90919293949596975063ffffffff8216156000146102255750508216156101a3575b5050906020936101969392612e5d565b3880808080808080610159565b51604051633850c7bd60e01b81529493925060e09185916004918391165afa93841561021957602094610196946000916101e4575b50919293819550610186565b610206915060e03d60e011610212575b6101fe81836113e4565b810190611532565b505050505050386101d8565b503d6101f4565b6040513d6000823e3d90fd5b90915061024396959450602097935061023e9250612cae565b611596565b610196565b600080fd5b34610248576000366003190112610248576020600554604051908152f35b346102485760403660031901126102485761028461123c565b61028c611252565b60405163313ce56760e01b8082526020936001600160a01b038082169490939091908681600481895afa90811561021957879060009261055e575b506001600160801b036102db6004936114bf565b1696604051928380928882525afa90811561021957600091610522575b5061030561030a916114d0565b6114bf565b9260405190815286816004818887165afa908115610219576000916104e6575b50610305610337916114d0565b918563ffffffff60045460a01c16600554966103566000988587611b69565b80938383511680610413575b5050505050505050506103789061037e936114e1565b926114e1565b670de0b6b3a764000091828102928184048114821517156103fd578304036103eb576103ad8160011c83611b5c565b9182106103d95780156103c35760405191048152f35b634e487b7160e01b600052601260045260246000fd5b604051630a77254f60e01b8152600490fd5b604051631550e8b760e01b8152600490fd5b634e487b7160e01b600052601160045260246000fd5b9080929394959697989b50156000146104c4575050821615610455575b50509161037e95610445926103789594612e5d565b9381925085888080808080610362565b51604051633850c7bd60e01b81529594935060e0925085916004918391165afa9081156102195761037e9587610445936103789660009161049f575b509294955092819750610430565b6104b8915060e03d60e011610212576101fe81836113e4565b5050505050508b610491565b6103789897955061037e9a94506104e196935061023e9250612cae565b610445565b90508681813d831161051b575b6104fd81836113e4565b8101031261024857610305610514610337926114b1565b915061032a565b503d6104f3565b90508681813d8311610557575b61053981836113e4565b810103126102485761030561055061030a926114b1565b91506102f8565b503d61052f565b809250813d831161059b575b61057481836113e4565b8101031261024857866001600160801b036102db6105936004946114b1565b9350506102c7565b503d61056a565b346102485760203660031901126102485760043562ffffff8116809103610248576000526002602052602060ff604060002054166040519015158152f35b34610248576080366003190112610248576105f961123c565b610601611252565b60643560ff811681036102485761062e9261061f9260443591612504565b604093919351938493846112bb565b0390f35b34610248576020366003190112610248576044602060018060a01b036004541660405192838092632474521560e21b82527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b6360048301523360248301525afa908115610219576000916106c0575b50156106ae57600435600555005b60405163036be76f60e61b8152600490fd5b90506020813d82116106f1575b816106da602093836113e4565b81010312610248576106eb90611525565b816106a0565b3d91506106cd565b3461024857604036600319011261024857608061071461123c565b61071c611252565b60018060a01b038092166000526003602052816040600020911660005260205261ffff604060002054604051928116835262ffffff8160a01c16602084015265ffffffffffff8160b81c16604084015260e81c166060820152f35b346102485760003660031901126102485760206040516107088152f35b346102485760003660031901126102485760206040516101008152f35b34610248576000366003190112610248576004546040516001600160a01b039091168152602090f35b34610248576080366003190112610248576107f3611382565b6107fb611252565b610803611268565b9161080c61131a565b926000926001600160a01b03610822838361142b565b51169485610836575b602085604051908152f35b929350909163ffffffff81166108a9575060e06004939460405194858092633850c7bd851b82525afa9384156102195760209461087b94600091610884575b50612e5d565b8280808061082b565b61089d915060e03d60e011610212576101fe81836113e4565b50505050505086610875565b9261023e6108b994602096612cae565b61087b565b34610248576000366003190112610248576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461024857604036600319011261024857608061092f61092161123c565b610929611252565b9061142b565b61093c604051809261127e565bf35b34610248576020366003190112610248576004356001548110156102485762ffffff61096b60209261132d565b9190546040519260031b1c168152f35b34610248576020806003193601126102485760043562ffffff91828216809203610248576040516322afcccb60e01b81526004810183905281816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561021957600091610a81575b5060020b151580610a69575b610a0557005b60029082600052526040600020600160ff19825416179055600154600160401b811015610a5357806001610a3c920160015561132d565b909283549160031b92831b921b1916179055600080f35b634e487b7160e01b600052604160045260246000fd5b50816000526002815260ff60406000205416156109ff565b90508181813d8311610aaf575b610a9881836113e4565b8101031261024857610aa990611508565b846109f3565b503d610a8e565b3461024857600036600319011261024857602063ffffffff60045460a01c16604051908152f35b346102485760203660031901126102485760043563ffffffff811681036102485760048054604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d89281019290925233602483015291906020816044816001600160a01b0387165afa90811561021957600091610b87575b50156106ae5763ffffffff60a01b1990911660a09190911b63ffffffff60a01b1617600455005b90506020813d8211610bb8575b81610ba1602093836113e4565b8101031261024857610bb290611525565b83610b60565b3d9150610b94565b3461024857606036600319011261024857610bd961123c565b610be1611252565b906044359060ff8216820361024857610bf8611406565b50600090610c04611406565b506001600160a01b0384811690821610156111e35792915b610c24611406565b92606094600092600080600154905b818110610e0057505086516001600160a01b031691905081610cf5575b505061062e9360409160018060a01b031681526003602052209060018060a01b0316600052602052604060002060018060a01b0384511681549062ffffff60a01b602087015160a01b1665ffffffffffff60b81b604088015160b81b169161ffff60e81b606089015160e81b169360ff60f81b16171717179055600080516020612ea88339815191526080604051610ce8818761127e565ba1604051938493846112bb565b60ff8116159182158093610df8575b610d0f575b50610c50565b60049192955060e09060405192838092633850c7bd851b82525afa90811561021957600090600092610dd0575b50606088019261ffff8093169182855296610d58575b50610d09565b610100821015610d525760ff1601169081905285516001600160a01b03169490853b15610248576000956024879260405198899384926332148f6760e01b845260048401525af19182156102195761062e95604093610dbc575b8296829450610d52565b610dc79192506113d0565b60009088610db2565b9050610deb915060e03d60e011610212576101fe81836113e4565b5050939250505089610d3c565b506001610d04565b62ffffff610e0d8261132d565b90549060031b1c16604051610e21816113b4565b6001600160a01b0387811680835290891660208301819052604090920183905291818310156102485760405191602083019384526040830152606082015260608152610e6c81611398565b51902060405190602082019060ff60f81b82526001600160601b03197f000000000000000000000000000000000000000000000000000000000000000060601b16602184015260358301526055600080516020612ec8833981519152818401528252610ed782611398565b905190206001600160a01b0316803b610ef4575b50600101610c33565b60009060609160405163883bdbfd60e01b60208201526044810160206024830152600054809152606482019060008052600080516020612e88833981519152906000915b8160078401106111795793600094938193610f9e9387965491818110611162575b818110611149575b81811061112f575b818110611115575b8181106110fb575b8181106110e1575b8181106110c7575b106110b9575b5003601f1981018352826113e4565b602081519101855afa610faf612b77565b9061102b575b50856001600160801b03821611610fce575b5050610eeb565b9094506001929b506001600160801b03919a50169262ffffff610ff08c61132d565b90549060031b1c166040519161100583611398565b8252602082015265ffffffffffff42166040820152600060608201529899908b80610fc7565b905061104291925060208082518301019101612bb7565b9091906001600160a01b0361105682612b5a565b5116906001600160a01b039061106b90612b6a565b511690036001600160a01b0381116103fd57602081901b640100000000600160c01b0316156103c35760201b640100000000600160c01b031660e160a31b046001600160801b03168d610fb5565b60e01c815260200138610f8f565b92602060019163ffffffff8560c01c168152019301610f89565b92602060019163ffffffff8560a01c168152019301610f81565b92602060019163ffffffff8560801c168152019301610f79565b92602060019163ffffffff8560601c168152019301610f71565b92602060019163ffffffff8560401c168152019301610f69565b92602060019163ffffffff85831c168152019301610f61565b92602060019163ffffffff85168152019301610f59565b926001610100600892865463ffffffff8082168352808260201c166020840152808260401c166040840152808260601c16606084015260808183821c169084015260a08183821c169084015260c09082821c169083015260e01c60e0820152019401920191610f38565b91610c1c565b34610248576020366003190112610248576004359063ffffffff60e01b821680920361024857602091630cc36a0960e11b811490811561122b575b5015158152f35b6301ffc9a760e01b14905083611224565b600435906001600160a01b038216820361024857565b602435906001600160a01b038216820361024857565b604435906001600160a01b038216820361024857565b80516001600160a01b0316825260208082015162ffffff169083015260408082015165ffffffffffff169083015260609081015161ffff16910152565b91909392936112ce8360c081019261127e565b60c06080840152815180915260e083019060208093019260005b8281106113035750505060a0915093600180831b0316910152565b845160060b845293810193928101926001016112e8565b6064359063ffffffff8216820361024857565b9060015482101561136c5760016000526003600a8084047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60193060290565b634e487b7160e01b600052603260045260246000fd5b600435906001600160801b038216820361024857565b6080810190811067ffffffffffffffff821117610a5357604052565b6060810190811067ffffffffffffffff821117610a5357604052565b67ffffffffffffffff8111610a5357604052565b90601f8019910116810190811067ffffffffffffffff821117610a5357604052565b6040519061141382611398565b60006060838281528260208201528260408201520152565b90611434611406565b506001600160a01b0391829082821681831610156114ab575b166000526003602052816040600020911660005260205261ffff6040600020916040519261147a84611398565b54908116835262ffffff8160a01c16602084015265ffffffffffff8160b81c16604084015260e81c16606082015290565b9161144d565b519060ff8216820361024857565b60ff16604d81116103fd57600a0a90565b60ff166012039060ff82116103fd57565b818102929181159184041417156103fd57565b51906001600160a01b038216820361024857565b51908160020b820361024857565b519061ffff8216820361024857565b5190811515820361024857565b908160e091031261024857611546816114f4565b9161155360208301611508565b9161156060408201611516565b9161156d60608301611516565b9161157a60808201611516565b9161159360c061158c60a085016114b1565b9301611525565b90565b9291909260020b906000821260001461196e5781600003915b620d89e8831161195c57600183161561194a576001600160881b036ffffcb933bd6fad37aa2d162d1a5940015b16926002811661192e575b60048116611912575b600881166118f6575b601081166118da575b602081166118be575b604081166118a2575b608090818116611887575b610100811661186c575b6102008116611851575b6104008116611836575b610800811661181b575b6110008116611800575b61200081166117e5575b61400081166117ca575b61800081166117af575b620100008116611794575b62020000811661177a575b620400008116611760575b6208000016611745575b50600012611732575b60ff9163ffffffff811661172a576000905b6001600160801b03936001600160a01b0392839260201c911601811684811161170157806116e2916114e1565b9416911610156116f757611593921690611b11565b6115939216611a96565b8061170b91611974565b94169116101561172057611593921690611a4b565b61159392166119c2565b6001906116b5565b81156103c35760001991909104906116a3565b6b048a170391f7dc42444e8fa26000929402901c929061169a565b6d2216e584f5fa1ea926041bedfe98909402811c93611690565b936e5d6af8dedb81196699c329225ee60402811c93611685565b936f09aa508b5b7a84e1c677de54f3e99bc902811c9361167a565b936f31be135f97d08fd981231505542fcfa602811c9361166f565b936f70d869a156d2a1b890bb3df62baf32f702811c93611665565b936fa9f746462d870fdf8a65dc1f90e061e502811c9361165b565b936fd097f3bdfd2022b8845ad8f792aa582502811c93611651565b936fe7159475a2c29b7443b29c7fa6e889d902811c93611647565b936ff3392b0822b70005940c7a398e4b70f302811c9361163d565b936ff987a7253ac413176f2b074cf7815e5402811c93611633565b936ffcbe86c7900a88aedcffc83b479aa3a402811c93611629565b936ffe5dee046a99a2a811c461f1969c305302811c9361161f565b926fff2ea16466c96a3843ec78b326b528610260801c92611614565b926fff973b41fa98c081472e6896dfb254c00260801c9261160b565b926fffcb9843d60f6159c9db58835c9266440260801c92611602565b926fffe5caca7e10e4e61c3624eaa0941cd00260801c926115f9565b926ffff2e50f5f656932ef12357cf3c7fdcc0260801c926115f0565b926ffff97272373d413259a46990580e213a0260801c926115e7565b6001600160881b03600160801b6115dc565b6040516315e4079d60e11b8152600490fd5b816115af565b60001982820990828102928380841093039183830393600093146119b757600160401b92848411156119b457500990828211900360c01b910360401c1790565b80fd5b505090505060401c90565b600160801b91600019828409928260801b92838086109503948086039514611a3d57848311156102485782910981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b505080925015610248570490565b6000198282099082810292838084109303918383039360009314611a8b57600160801b92848411156119b457500990828211900360801b910360801c1790565b505090505060801c90565b600160c01b91600019828409928260c01b92838086109503948086039514611a3d57848311156102485782910981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b6000198282099082810292838084109303918383039360009314611b5157600160c01b92848411156119b457500990828211900360401b910360c01c1790565b505090505060c01c90565b919082018092116103fd57565b919290600060c052611b79611406565b50606060c0526000928415611fd257611b92828261142b565b9460018060a01b0386511615908115611fb2575b50611baf575050565b9192509250611bbc611406565b506001600160a01b038381169082161015611fad57915b611bdb611406565b90606093600080600154905b818110611c8f5750505060018060a01b0316600052600360205260406000209060018060a01b0316600052602052604060002060018060a01b0382511681549062ffffff60a01b602085015160a01b1665ffffffffffff60b81b604086015160b81b169161ffff60e81b606087015160e81b169360ff60f81b16171717179055600080516020612ea88339815191526080604051611c85818561127e565ba19160c052600090565b611c988161132d565b9054604051611ca6816113b4565b6001600160a01b0387811680835290891660208301819052600385901b84901c62ffffff1660409093019290925210156102485762ffffff60405191602083019360018060a01b038916855260018060a01b038a16604085015260031b1c16606082015260608152611d1781611398565b51902060405190602082019060ff60f81b82526001600160601b03197f000000000000000000000000000000000000000000000000000000000000000060601b16602184015260358301526055600080516020612ec8833981519152818401528252611d8282611398565b905190206001600160a01b0316803b611d9f575b50600101611be7565b60009060609160405163883bdbfd60e01b60208201526044810160206024830152600054809152606482019060008052600080516020612e88833981519152906000915b816007840110611f435793600094938193611e419387965491818110611162578181106111495781811061112f57818110611115578181106110fb578181106110e1578181106110c757106110b9575003601f1981018352826113e4565b602081519101855afa611e52612b77565b90611ec4575b506001600160801b0316858111611e71575b5050611d96565b919750935060019198509262ffffff611e898a61132d565b90549060031b1c1660405191611e9e83611398565b8252602082015265ffffffffffff42166040820152600060608201529597903880611e6a565b9050611edb91925060208082518301019101612bb7565b9091906001600160a01b03611eef82612b5a565b5116906001600160a01b0390611f0490612b6a565b511690036001600160a01b0381116103fd5760201b640100000000600160c01b031680156103c35760e160a31b046001600160801b0390811690611e58565b926001610100600892865463ffffffff8082168352808260201c166020840152808260401c166040840152808260601c16606084015260808183821c169084015260a08183821c16908401528160c01c1660c083015260e090811c90820152019401920191611de3565b611bd3565b611fc9915065ffffffffffff604088015116611b5c565b42101538611ba6565b90919250611fde611406565b506001600160a01b0382811690821610156124f85760805260a0525b612002611406565b9160c05192600091600080600154905b81811061214a57505082516001600160a01b0316919050816120d3575b505060018060a01b03608051166000526003602052604060002060018060a01b0360a05116600052602052604060002060018060a01b0382511681549062ffffff60a01b602085015160a01b1665ffffffffffff60b81b604086015160b81b169161ffff60e81b60c05187015160e81b169360ff60f81b16171717179055600080516020612ea883398151915260806040516120cb818561127e565ba19260c05290565b156120df575b8061202f565b604051633850c7bd60e01b815291925060e090829060049082905afa80156102195760009160009161211e575b5061ffff1660c05183015290386120d9565b61ffff925061213b915060e03d8111610212576101fe81836113e4565b5050949392505050919061210c565b6121538161132d565b905490604051612162816113b4565b608080516001600160a01b03908116835260a0805182166020850152600385901b86901c62ffffff166040909401939093529151905182169391168310156102485762ffffff90604051926020840194855260018060a01b0360a05116604085015260031b1c1660c05182015260c05181526121dd81611398565b51902060405190602082019060ff60f81b82526001600160601b03197f000000000000000000000000000000000000000000000000000000000000000060c0511b16602184015260358301526055600080516020612ec883398151915281840152825261224982611398565b905190206001600160a01b0316803b612266575b50600101612012565b60009060c0519160405163883bdbfd60e01b60208201526044810160206024830152600054809152606482019060008052600080516020612e88833981519152906000915b81600784011061248d579360009493819361230c9387965491818110612476575b81811061245d575b818110612443575b818110612428578181106110fb578181106110e1578181106110c757106110b9575003601f1981018352826113e4565b602081519101855afa61231d612b77565b9061239a575b50856001600160801b0382161161233c575b505061225d565b90945060019299506001600160801b03919650169262ffffff61235e8a61132d565b90549060031b1c166040519161237383611398565b8252602082015265ffffffffffff42166040820152600060c0518201529497903880612335565b90506123b191925060208082518301019101612bb7565b9091906001600160a01b036123c582612b5a565b5116906001600160a01b03906123da90612b6a565b511690036001600160a01b0381116103fd57602081901b640100000000600160c01b0316156103c35760201b640100000000600160c01b031660e160a31b046001600160801b031638612323565b92602060019163ffffffff8560c0511c168152019301610f71565b92602060019163ffffffff8560401c1681520193016122dc565b92602060019163ffffffff85831c1681520193016122d4565b92602060019163ffffffff851681520193016122cc565b926001610100600892865463ffffffff8082168352808260201c166020840152808260401c16604084015260c0518183821c1690840152808260801c166080840152808260a01c1660a08401528160c01c1660c083015260e090811c908201520194019201916122ab565b9060805260a052611ffa565b93909192612510611406565b50606093600093811561257e57612527818861142b565b80519097906001600160a01b031615801561255f575b6125475750505050565b919396509193506125589450612589565b9192909190565b506125768365ffffffffffff60408b015116611b5c565b42101561253d565b919350919461255894505b92939093612595611406565b506000936001600160a01b038681169082161015612b3d57945b6125b7611406565b916060946000918283600154906001600160601b03197f00000000000000000000000000000000000000000000000000000000000000008b1b16905b8281106127cb57505086516001600160a01b03169291508290506126b0575b505050916080916040600080516020612ea8833981519152949697839960018060a01b031681526003602052209060018060a01b0316600052602052604060002060018060a01b0382511681549062ffffff60a01b602085015160a01b1665ffffffffffff60b81b604086015160b81b169161ffff60e81b606087015160e81b169360ff60f81b161717171790556126ad604051809261127e565ba1565b60ff169081159283159081946127c2575b5015612612579060e060049260409594955193848092633850c7bd851b82525afa9182156127b757839261278c575b5061ffff91821660608701818152939461270b575b50612612565b6101008110156127055701169081905283516001600160a01b031690813b15610248576000916024839260405194859384926332148f6760e01b845260048401525af1801561021957612761575b808080612705565b600080516020612ea883398151915293919650916127806080936113d0565b60009691935091612759565b9092506127a7915060e03d8111610212576101fe81836113e4565b50509493925050509190386126f0565b6040513d85823e3d90fd5b905015386126c1565b62ffffff6127d88261132d565b90549060031b1c168d604051906127ee826113b4565b6001600160a01b03908116808352908b166020830181905260409092018390529181831015612b39576040519160208301938452604083015260608201526060815261283981611398565b51902060405190602082019060ff60f81b825284602184015260358301526055600080516020612ec883398151915281840152825261287782611398565b905190206001600160a01b0316803b612894575b506001016125f3565b879060609160405163883bdbfd60e01b60208201528a60448201916020602482015281548093526064810192828052600080516020612e888339815191529083915b816007840110612acb579461293692849286975491818110612ab4575b818110612a9b575b818110612a81575b8b828210612a67575b508181106110fb578181106110e1578181106110c757106110b9575003601f1981018352826113e4565b602081519101855afa612947612b77565b906129c2575b50866001600160801b03821611612966575b505061288b565b9095506001929c506001600160801b03919a50169362ffffff6129888d61132d565b90549060031b1c166040519161299d83611398565b8252602082015265ffffffffffff42166040820152876060820152989a90388061295f565b90506129d991925060208082518301019101612bb7565b9091906001600160a01b036129ed82612b5a565b5116906001600160a01b0390612a0290612b6a565b511690036001600160a01b038111612a535760201b640100000000600160c01b03168015612a3f5760e160a31b046001600160801b03163861294d565b634e487b7160e01b8a52601260045260248afd5b634e487b7160e01b8a52601160045260248afd5b6001919463ffffffff856020931c1681520193018b61290c565b92602060019163ffffffff8560401c168152019301612903565b92602060019163ffffffff85831c1681520193016128fb565b92602060019163ffffffff851681520193016128f3565b805463ffffffff8082168852602082811c821690890152604082811c821690890152818b1c81168b890152608082811c82169089015260a082811c82169089015260c082811c9091169088015260e090811c90870152610100909501948f94506008909201916001016128d6565b8980fd5b6125af565b67ffffffffffffffff8111610a535760051b60200190565b80516001101561136c5760400190565b80511561136c5760200190565b3d15612bb2573d9067ffffffffffffffff8211610a535760405191612ba6601f8201601f1916602001846113e4565b82523d6000602084013e565b606090565b919060408382031261024857825167ffffffffffffffff908181116102485784019082601f8301121561024857815191612bf083612b42565b90612bfe60405192836113e4565b838252602093848084019160051b83010191868311610248578501905b828210612c9557505050948281015191821161024857019180601f84011215610248578251612c4981612b42565b93612c5760405195866113e4565b818552838086019260051b820101928311610248578301905b828210612c7e575050505090565b838091612c8a846114f4565b815201910190612c70565b81518060060b8103610248578152908501908501612c1b565b9190600092604051612cbf816113b4565b6002815284602092838301926040368537612cd981612b6a565b9563ffffffff80911680975283612cef83612b5a565b5260405163883bdbfd60e01b878201908152602482018890529251604482018190526064820196919286905b89838310612e40575050505050612d3c81859603601f1981018352826113e4565b51915afa612d48612b77565b9015612e2e5781612d5f9282518301019101612bb7565b50612d73612d6c82612b5a565b5191612b6a565b5160060b9060060b0392667fffffffffffff1991667fffffffffffff851383861217612e065760060b9360060b8415612e1a5760001992811485841416612e065784810560020b948282129182612df7575b5050612dcf575050565b91929091627fffff198214612de357500190565b634e487b7160e01b81526011600452602490fd5b0760060b151590503880612dc5565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b82526012600452602482fd5b6040516303875aeb60e51b8152600490fd5b845182168a52988901988d98509093019260019190910190612d1b565b9092916001600160801b03916001600160a01b03908190811684811161170157806116e2916114e156fe290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563a4f1f360d824552e10292fb28c429d3e58b8d91cb89604b82559507cf4d72ff6e34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54a2646970667358221220b045c25996e756cf44ea176f4cee58f3d14ec36b7bd54e1fa35ff8a4c41c169e64736f6c63430008120033";

type UniswapPriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapPriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapPriceFeed__factory extends ContractFactory {
  constructor(...args: UniswapPriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    uniswapV3Factory_: AddressLike,
    twapInterval_: BigNumberish,
    poolUpdateInterval_: BigNumberish,
    registry_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      uniswapV3Factory_,
      twapInterval_,
      poolUpdateInterval_,
      registry_,
      overrides || {}
    );
  }
  override deploy(
    uniswapV3Factory_: AddressLike,
    twapInterval_: BigNumberish,
    poolUpdateInterval_: BigNumberish,
    registry_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      uniswapV3Factory_,
      twapInterval_,
      poolUpdateInterval_,
      registry_,
      overrides || {}
    ) as Promise<
      UniswapPriceFeed & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UniswapPriceFeed__factory {
    return super.connect(runner) as UniswapPriceFeed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapPriceFeedInterface {
    return new Interface(_abi) as UniswapPriceFeedInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UniswapPriceFeed {
    return new Contract(address, _abi, runner) as unknown as UniswapPriceFeed;
  }
}
