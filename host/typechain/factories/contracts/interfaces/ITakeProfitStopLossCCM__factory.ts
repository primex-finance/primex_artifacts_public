/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ITakeProfitStopLossCCM,
  ITakeProfitStopLossCCMInterface,
} from "../../../contracts/interfaces/ITakeProfitStopLossCCM";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_params",
        type: "bytes",
      },
    ],
    name: "getTakeProfitStopLossPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_primexDNS",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "scaledDebtAmount",
            type: "uint256",
          },
          {
            internalType: "contract IBucketV3",
            name: "bucket",
            type: "address",
          },
          {
            internalType: "address",
            name: "soldAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "depositAmountInSoldAsset",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "positionAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "positionAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "openBorrowIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedConditionsAt",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "extraParams",
            type: "bytes",
          },
        ],
        internalType: "struct PositionLibrary.Position",
        name: "_position",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_stopLossPrice",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_positionSoldAssetOracleData",
        type: "bytes",
      },
    ],
    name: "isStopLossReached",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_params",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "oracleExchangeRate",
        type: "uint256",
      },
    ],
    name: "isStopLossReached",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_params",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "exchangeRate",
        type: "uint256",
      },
    ],
    name: "isTakeProfitReached",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ITakeProfitStopLossCCM__factory {
  static readonly abi = _abi;
  static createInterface(): ITakeProfitStopLossCCMInterface {
    return new Interface(_abi) as ITakeProfitStopLossCCMInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ITakeProfitStopLossCCM {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ITakeProfitStopLossCCM;
  }
}
