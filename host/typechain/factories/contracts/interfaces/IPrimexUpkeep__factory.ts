/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPrimexUpkeep,
  IPrimexUpkeepInterface,
} from "../../../contracts/interfaces/IPrimexUpkeep";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "keeper",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "ErrorHandled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "LowLevelErrorHandled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "panicErrorId",
        type: "uint256",
      },
    ],
    name: "PanicErrorHandled",
    type: "event",
  },
  {
    inputs: [],
    name: "bestDexLens",
    outputs: [
      {
        internalType: "contract IBestDexLens",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_positionManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_limitOrderManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bestDexLens",
        type: "address",
      },
      {
        internalType: "address",
        name: "_primexLens",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lom",
    outputs: [
      {
        internalType: "contract ILimitOrderManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "conditionIndex",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "comAdditionalParams",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "firstAssetMegaRoutes",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "depositInThirdAssetMegaRoutes",
            type: "tuple[]",
          },
          {
            internalType: "bytes",
            name: "firstAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "thirdAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "depositSoldAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "nativePmxOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "positionNativeAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "nativePositionAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "pmxPositionAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "positionUsdOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "nativeSoldAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes[][]",
            name: "pullOracleData",
            type: "bytes[][]",
          },
          {
            internalType: "uint256[]",
            name: "pullOracleTypes",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IPrimexUpkeep.OpenByOrderInfo[]",
        name: "toOpenByOrder",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "keeper",
        type: "address",
      },
    ],
    name: "performUpkeepOrders",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "conditionIndex",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "comAdditionalParams",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "firstAssetMegaRoutes",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "depositInThirdAssetMegaRoutes",
            type: "tuple[]",
          },
          {
            internalType: "bytes",
            name: "firstAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "thirdAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "depositSoldAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "nativePmxOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "positionNativeAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "nativePositionAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "pmxPositionAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "positionUsdOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "nativeSoldAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes[][]",
            name: "pullOracleData",
            type: "bytes[][]",
          },
          {
            internalType: "uint256[]",
            name: "pullOracleTypes",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IPrimexUpkeep.OpenByOrderInfo[]",
        name: "toOpenByOrder",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "keeper",
        type: "address",
      },
    ],
    name: "performUpkeepOrdersUnsafe",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "conditionIndex",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "ccmAdditionalParams",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "positionAssetMegaRoutes",
            type: "tuple[]",
          },
          {
            internalType: "enum PositionLibrary.CloseReason",
            name: "closeReason",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "positionSoldAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "nativePmxOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "positionNativeAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "pmxSoldAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "nativeSoldAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes[][]",
            name: "pullOracleData",
            type: "bytes[][]",
          },
          {
            internalType: "uint256[]",
            name: "pullOracleTypes",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IPrimexUpkeep.ClosePositionInfo[]",
        name: "toLiquidate",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "keeper",
        type: "address",
      },
    ],
    name: "performUpkeepPositions",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "conditionIndex",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "ccmAdditionalParams",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "positionAssetMegaRoutes",
            type: "tuple[]",
          },
          {
            internalType: "enum PositionLibrary.CloseReason",
            name: "closeReason",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "positionSoldAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "nativePmxOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "positionNativeAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "pmxSoldAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "nativeSoldAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes[][]",
            name: "pullOracleData",
            type: "bytes[][]",
          },
          {
            internalType: "uint256[]",
            name: "pullOracleTypes",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IPrimexUpkeep.ClosePositionInfo[]",
        name: "toLiquidate",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "keeper",
        type: "address",
      },
    ],
    name: "performUpkeepPositionsUnsafe",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "pm",
    outputs: [
      {
        internalType: "contract IPositionManagerV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "primexLens",
    outputs: [
      {
        internalType: "contract IPrimexLens",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IPrimexUpkeep__factory {
  static readonly abi = _abi;
  static createInterface(): IPrimexUpkeepInterface {
    return new Interface(_abi) as IPrimexUpkeepInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IPrimexUpkeep {
    return new Contract(address, _abi, runner) as unknown as IPrimexUpkeep;
  }
}
