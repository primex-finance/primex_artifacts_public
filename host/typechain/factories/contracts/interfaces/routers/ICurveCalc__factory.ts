/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICurveCalc,
  ICurveCalcInterface,
} from "../../../../contracts/interfaces/routers/ICurveCalc";

const _abi = [
  {
    inputs: [
      {
        internalType: "int128",
        name: "n_coins",
        type: "int128",
      },
      {
        internalType: "uint256[8]",
        name: "balances",
        type: "uint256[8]",
      },
      {
        internalType: "uint256",
        name: "amp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "rates",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[8]",
        name: "precisions",
        type: "uint256[8]",
      },
      {
        internalType: "bool",
        name: "underlying",
        type: "bool",
      },
      {
        internalType: "int128",
        name: "i",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "j",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "dy",
        type: "uint256",
      },
    ],
    name: "get_dx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class ICurveCalc__factory {
  static readonly abi = _abi;
  static createInterface(): ICurveCalcInterface {
    return new Interface(_abi) as ICurveCalcInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ICurveCalc {
    return new Contract(address, _abi, runner) as unknown as ICurveCalc;
  }
}
