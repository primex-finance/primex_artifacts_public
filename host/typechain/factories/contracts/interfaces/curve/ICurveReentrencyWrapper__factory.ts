/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICurveReentrencyWrapper,
  ICurveReentrencyWrapperInterface,
} from "../../../../contracts/interfaces/curve/ICurveReentrencyWrapper";

const _abi = [
  {
    inputs: [],
    name: "claim_admin_fees",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256[2]",
        name: "amounts",
        type: "uint256[2]",
      },
    ],
    name: "remove_liquidity",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256[4]",
        name: "amounts",
        type: "uint256[4]",
      },
    ],
    name: "remove_liquidity",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256[3]",
        name: "amounts",
        type: "uint256[3]",
      },
    ],
    name: "remove_liquidity",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ICurveReentrencyWrapper__factory {
  static readonly abi = _abi;
  static createInterface(): ICurveReentrencyWrapperInterface {
    return new Interface(_abi) as ICurveReentrencyWrapperInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ICurveReentrencyWrapper {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ICurveReentrencyWrapper;
  }
}
