/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPriceFeedUpdaterTestService,
  IPriceFeedUpdaterTestServiceInterface,
} from "../../../contracts/interfaces/IPriceFeedUpdaterTestService";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRouter",
        type: "address",
      },
    ],
    name: "addRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "contract PrimexAggregatorV3TestService",
            name: "priceFeed",
            type: "address",
          },
        ],
        internalType: "struct IPriceFeedUpdaterTestService.PriceFeed[]",
        name: "_priceFeeds",
        type: "tuple[]",
      },
    ],
    name: "checkArrayPriceFeed",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isNeedUpdate",
            type: "bool",
          },
          {
            internalType: "contract PrimexAggregatorV3TestService",
            name: "priceFeed",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastAverageDexPrice",
            type: "uint256",
          },
        ],
        internalType: "struct IPriceFeedUpdaterTestService.PriceFeedStatus[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "contract PrimexAggregatorV3TestService",
            name: "priceFeed",
            type: "address",
          },
        ],
        internalType: "struct IPriceFeedUpdaterTestService.PriceFeed",
        name: "_priceFeed",
        type: "tuple",
      },
    ],
    name: "checkPriceFeed",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isNeedUpdate",
            type: "bool",
          },
          {
            internalType: "contract PrimexAggregatorV3TestService",
            name: "priceFeed",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastAverageDexPrice",
            type: "uint256",
          },
        ],
        internalType: "struct IPriceFeedUpdaterTestService.PriceFeedStatus",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "deleteRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouters",
    outputs: [
      {
        internalType: "address[]",
        name: "_routers",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_multiplier",
        type: "uint256",
      },
    ],
    name: "setDivider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract PrimexAggregatorV3TestService[]",
        name: "_priceFeeds",
        type: "address[]",
      },
      {
        internalType: "int256[]",
        name: "_newAnswers",
        type: "int256[]",
      },
    ],
    name: "updateArrayPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract PrimexAggregatorV3TestService",
        name: "_priceFeed",
        type: "address",
      },
      {
        internalType: "int256",
        name: "_newAnswer",
        type: "int256",
      },
    ],
    name: "updatePriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IPriceFeedUpdaterTestService__factory {
  static readonly abi = _abi;
  static createInterface(): IPriceFeedUpdaterTestServiceInterface {
    return new Interface(_abi) as IPriceFeedUpdaterTestServiceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IPriceFeedUpdaterTestService {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IPriceFeedUpdaterTestService;
  }
}
