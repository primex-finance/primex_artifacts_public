/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IUniswapV2LPOracle,
  IUniswapV2LPOracleInterface,
} from "../../../contracts/UniswapV2LPOracle/IUniswapV2LPOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV2Pair",
        name: "pair",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "token0UsdOracleData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "token1UsdOracleData",
        type: "bytes",
      },
    ],
    name: "getLPExchangeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "token0UsdOracleData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "token1UsdOracleData",
        type: "bytes",
      },
    ],
    name: "getQuoteInUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IUniswapV2LPOracle__factory {
  static readonly abi = _abi;
  static createInterface(): IUniswapV2LPOracleInterface {
    return new Interface(_abi) as IUniswapV2LPOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IUniswapV2LPOracle {
    return new Contract(address, _abi, runner) as unknown as IUniswapV2LPOracle;
  }
}
