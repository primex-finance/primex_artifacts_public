/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Redeemer, RedeemerInterface } from "../../contracts/Redeemer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_earlyPmx",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pmx",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AdminClaimedEarlyTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AdminClaimedRegularTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "RateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "changeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "earlyPmx",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pmx",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060409080825234620002325760608162000af2803803809162000025828562000237565b83398101031262000232576200003b8162000271565b602062000057846200004f83860162000271565b940162000271565b6000805460ff1916815560018055670de0b6b3a764000060025585516301ffc9a760e01b80825263ede5d28360e01b6004830152929390926001600160a01b03919081856024818a87165afa948515620002045784956200020e575b5084620001ab575b8462000131575b5050505015620001205760805260a05260c052516108519081620002a1823960805181818161038401528181610464015281816104cb0152610636015260a05181818160c101526105b5015260c051818181610193015261073f0152f35b835163044aa57560e41b8152600490fd5b819293945060248951809581938252637965db0b60e01b600483015288165afa928315620001a057926200016c575b505038808080620000c2565b620001909250803d1062000198575b62000187818362000237565b81019062000286565b388062000160565b503d6200017b565b8751903d90823e3d90fd5b88518181526336372b0760e01b600482015290945081816024818b87165afa90811562000204578491620001e2575b5093620000bb565b620001fd9150823d8411620001985762000187818362000237565b38620001da565b89513d86823e3d90fd5b6200022a919550823d8411620001985762000187818362000237565b9338620000b3565b600080fd5b601f909101601f19168101906001600160401b038211908210176200025b57604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200023257565b90816020910312620002325751801515810362000232579056fe608060409080825260048036101561001657600080fd5b600091823560e01c9081630460f0f31461072b575080632c4e722e1461070c5780633f4ba83a146105e457806350a5cdeb146105a05780635c975abb1461057e57806374e7493b146104935780637b1039991461044f5780638456cb59146103325763be040fb01461008757600080fd5b3461032e578160031936011261032e576002600154146102eb5760026001556100ae6107d7565b82516370a0823160e01b815233818301527f0000000000000000000000000000000000000000000000000000000000000000936001600160a01b03851692909160208082602481885afa9182156102e15786926102b2575b50835163c37f7f7f60e01b81526001600160a01b039097168388019081523360208201526040810183905273__$183737d697d7aa9b5df9988cbe11bc4947$__979082908290819060600103818b5af480156102a85761027f575b505060025480820290828204148215171561026c57863b15610268578351636336129b60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848201908152336020820152670de0b6b3a764000090920460408301529686918891908290819060600103915af4801561025e5761024a575b849550833b1561024657602485928385519687948593630852cd8d60e31b85528401525af190811561023d5750610226575b506001805580f35b61022f9061076e565b61023a57803861021e565b80fd5b513d84823e3d90fd5b8480fd5b9390946102569061076e565b9284906101ec565b83513d87823e3d90fd5b8580fd5b634e487b7160e01b865260118352602486fd5b813d83116102a1575b6102928183610798565b81010312610246573880610161565b503d610288565b85513d89823e3d90fd5b9080925081813d83116102da575b6102ca8183610798565b8101031261026857519038610106565b503d6102c0565b84513d88823e3d90fd5b606490602084519162461bcd60e51b8352820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b5080fd5b5082903461044b578260031936011261044b578151632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb828201523360248201526020816044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561043e578491610410575b5015610402575060207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916103ef6107d7565b835460ff1916600117845551338152a180f35b905163036be76f60e61b8152fd5b610431915060203d8111610437575b6104298183610798565b8101906107ba565b846103bc565b503d61041f565b50505051903d90823e3d90fd5b8280fd5b82843461032e578160031936011261032e57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5082903461044b57602036600319011261044b578151632474521560e21b8152808201849052336024820152813592906020816044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610574578591610556575b501561054957821561053c575050806002557f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f108280a280f35b516302eb41cf60e51b8152fd5b5163036be76f60e61b8152fd5b61056e915060203d8111610437576104298183610798565b85610503565b82513d87823e3d90fd5b82843461032e578160031936011261032e5760ff602092541690519015158152f35b82843461032e578160031936011261032e57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5082903461044b578260031936011261044b578151632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8828201523360248201526020816044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561043e5784916106ee575b50156104025782549060ff8216156106b4575060ff19168255513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b610706915060203d8111610437576104298183610798565b8461066e565b82843461032e578160031936011261032e576020906002549051908152f35b83903461032e578160031936011261032e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b67ffffffffffffffff811161078257604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761078257604052565b908160209103126107d2575180151581036107d25790565b600080fd5b60ff600054166107e357565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fdfea2646970667358221220555ca28d46cf94252bbfe407713d1c0be4ecd6b009c3aaf4ce0705ffc61b83d464736f6c63430008120033";

type RedeemerConstructorParams =
  | [linkLibraryAddresses: RedeemerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RedeemerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Redeemer__factory extends ContractFactory {
  constructor(...args: RedeemerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Redeemer__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: RedeemerLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$183737d697d7aa9b5df9988cbe11bc4947\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _earlyPmx: AddressLike,
    _pmx: AddressLike,
    _registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _earlyPmx,
      _pmx,
      _registry,
      overrides || {}
    );
  }
  override deploy(
    _earlyPmx: AddressLike,
    _pmx: AddressLike,
    _registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_earlyPmx, _pmx, _registry, overrides || {}) as Promise<
      Redeemer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Redeemer__factory {
    return super.connect(runner) as Redeemer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RedeemerInterface {
    return new Interface(_abi) as RedeemerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Redeemer {
    return new Contract(address, _abi, runner) as unknown as Redeemer;
  }
}

export interface RedeemerLibraryAddresses {
  ["contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"]: string;
}
