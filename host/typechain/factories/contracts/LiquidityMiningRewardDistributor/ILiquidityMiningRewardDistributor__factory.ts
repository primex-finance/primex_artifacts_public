/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ILiquidityMiningRewardDistributor,
  ILiquidityMiningRewardDistributorInterface,
} from "../../../contracts/LiquidityMiningRewardDistributor/ILiquidityMiningRewardDistributor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimedReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawPmxByAdmin",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_bucketName",
        type: "string",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_miningAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxStabilizationPeriodEnd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxPeriodTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_currentTimestamp",
        type: "uint256",
      },
    ],
    name: "addPoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_bucketName",
        type: "string",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "extraRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_bucketName",
        type: "string",
      },
    ],
    name: "getBucketInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "totalPmxReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawnRewards",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPoints",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_bucket",
        type: "string",
      },
      {
        internalType: "address",
        name: "_lender",
        type: "address",
      },
    ],
    name: "getLenderAmountInMining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_bucketName",
        type: "string",
      },
      {
        internalType: "address",
        name: "_lender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getLenderInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amountInMining",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentPercent",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "minReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "extraReward",
            type: "uint256",
          },
        ],
        internalType: "struct ILiquidityMiningRewardDistributor.RewardsInPMX",
        name: "rewardsInPMX",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPrimexDNSV3",
        name: "_primexDNS",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_pmx",
        type: "address",
      },
      {
        internalType: "contract ITraderBalanceVault",
        name: "_traderBalanceVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_reinvestmentRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reinvestmentDuration",
        type: "uint256",
      },
      {
        internalType: "contract IWhiteBlackList",
        name: "_whiteBlackList",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pmx",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "primexDNS",
    outputs: [
      {
        internalType: "contract IPrimexDNSV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_bucketFrom",
        type: "string",
      },
      {
        internalType: "string",
        name: "_bucketTo",
        type: "string",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isBucketLaunched",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_liquidityMiningDeadline",
        type: "uint256",
      },
    ],
    name: "reinvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reinvestmentDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reinvestmentRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "removePoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "traderBalanceVault",
    outputs: [
      {
        internalType: "contract ITraderBalanceVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_bucketName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_pmxRewardsAmount",
        type: "uint256",
      },
    ],
    name: "updateBucketReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_bucketFrom",
        type: "string",
      },
    ],
    name: "withdrawPmxByAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ILiquidityMiningRewardDistributor__factory {
  static readonly abi = _abi;
  static createInterface(): ILiquidityMiningRewardDistributorInterface {
    return new Interface(_abi) as ILiquidityMiningRewardDistributorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ILiquidityMiningRewardDistributor {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ILiquidityMiningRewardDistributor;
  }
}
