/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LiquidityMiningRewardDistributorStorage,
  LiquidityMiningRewardDistributorStorageInterface,
} from "../../../contracts/LiquidityMiningRewardDistributor/LiquidityMiningRewardDistributorStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "extraRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pmx",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "primexDNS",
    outputs: [
      {
        internalType: "contract IPrimexDNSV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reinvestmentDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reinvestmentRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "traderBalanceVault",
    outputs: [
      {
        internalType: "contract ITraderBalanceVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610339908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a7146102cc575080630460f0f3146102a35780633f4a2d271461027a5780635c975abb1461025657806361d027b31461022d5780637b1039991461020457806394a3e69e146101e55780639968861e146101bc578063acfee9cb146101995763c15a63371461009157600080fd5b3461016c578160031936011261016c5780356001600160a01b03811693908490036101965767ffffffffffffffff9360243585811161016c573660238201121561016c57808401359580871161018357855194601f8801601f19908116603f011686019182118683101761017057508552858452366024878301011161016c57908260249394928760209889968793018387013784010152835260d082528383208451938284869451925b83811061015757505050820190815203019020549051908152f35b8281018201518882015287955086910161013c565b8280fd5b634e487b7160e01b855260419052602484fd5b634e487b7160e01b845260418552602484fd5b80fd5b5050346101b857816003193601126101b85760209060ce549051908152f35b5080fd5b5050346101b857816003193601126101b85760cb5490516001600160a01b039091168152602090f35b5050346101b857816003193601126101b85760209060cf549051908152f35b5050346101b857816003193601126101b85760cc5490516001600160a01b039091168152602090f35b5050346101b857816003193601126101b85760cd5490516001600160a01b039091168152602090f35b5050346101b857816003193601126101b85760209060ff6033541690519015158152f35b5050346101b857816003193601126101b85760c95490516001600160a01b039091168152602090f35b5050346101b857816003193601126101b85760ca5490516001600160a01b039091168152602090f35b9250503461016c57602036600319011261016c573563ffffffff60e01b811680910361016c576301ffc9a760e01b14815260209150f3fea2646970667358221220ef626b25e067ce715c979a58462272acb875d358e9eab81bc67a1a0acce3c26764736f6c63430008120033";

type LiquidityMiningRewardDistributorStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidityMiningRewardDistributorStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidityMiningRewardDistributorStorage__factory extends ContractFactory {
  constructor(
    ...args: LiquidityMiningRewardDistributorStorageConstructorParams
  ) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LiquidityMiningRewardDistributorStorage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): LiquidityMiningRewardDistributorStorage__factory {
    return super.connect(
      runner
    ) as LiquidityMiningRewardDistributorStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityMiningRewardDistributorStorageInterface {
    return new Interface(
      _abi
    ) as LiquidityMiningRewardDistributorStorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LiquidityMiningRewardDistributorStorage {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as LiquidityMiningRewardDistributorStorage;
  }
}
