/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SwapManager,
  SwapManagerInterface,
} from "../../../contracts/SwapManager/SwapManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "boughtAsset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum IPrimexDNSStorageV3.FeeRateType",
        name: "feeRateType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInPositionAsset",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInPmx",
        type: "uint256",
      },
    ],
    name: "PaidProtocolFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountSold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountBought",
        type: "uint256",
      },
    ],
    name: "SpotSwap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_primexDNS",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_traderBalanceVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_whiteBlackList",
        type: "address",
      },
    ],
    name: "initializeAfterUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOracle",
    outputs: [
      {
        internalType: "contract IPriceOracleV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "primexDNS",
    outputs: [
      {
        internalType: "contract IPrimexDNSV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountTokenA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSwapFromWallet",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSwapToWallet",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSwapFeeInPmx",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "tokenAtokenBOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "pmxPositionAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "nativePositionAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes[][]",
            name: "pullOracleData",
            type: "bytes[][]",
          },
          {
            internalType: "uint256[]",
            name: "pullOracleTypes",
            type: "uint256[]",
          },
        ],
        internalType: "struct ISwapManager.SwapParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maximumOracleTolerableLimit",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "needOracleTolerableLimitCheck",
        type: "bool",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "depositAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "positionAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeperRewardDistributor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gasSpent",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "depositPositionAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "pmxPositionAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "nativePositionAssetOracleData",
            type: "bytes",
          },
        ],
        internalType: "struct ISwapManager.SwapInLimitOrderParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maximumOracleTolerableLimit",
        type: "uint256",
      },
    ],
    name: "swapInLimitOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "traderBalanceVault",
    outputs: [
      {
        internalType: "contract ITraderBalanceVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "whiteBlackList",
    outputs: [
      {
        internalType: "contract IWhiteBlackList",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100c1576000549060ff8260081c1661006f575060ff80821603610034575b60405161271f90816100c78239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe6102a080604052600436101561001457600080fd5b60006101a05260003560e01c90816301ffc9a714611e6f575080632630c12f14611e435780633f4a2d2714611e175780633f4ba83a14611cfc5780635017324814611a3d57806356b3ae0314610c6f5780635c975abb14610c495780637b10399914610c1d5780638456cb5914610b3c5780639968861e14610b10578063c4d66de8146109ab578063ca4de5a5146100eb5763ef379d17146100b557600080fd5b346100e4576101a051806003193601126100e15760cc546040516001600160a01b039091168152602090f35b80fd5b6101a05180fd5b346100e45760403660031901126100e4576001600160401b03600435116100e457610180600435360360031901126100e4576101256126a5565b60c954604051632474521560e21b81527f8f8b3dc194d940c9ce77bea0cf23855523a0d7b641973e714d9dc5f3528a573a600482015233602482015290602090829060449082906001600160a01b03165afa90811561075f576101a0519161097c575b501561096a5760cb546040516391f03efd60e01b815290602090829060049082906001600160a01b03165afa90811561075f576101a0519161093b575b5060ca546001600160a01b03166101df6004803501612036565b604051906101ec82611f3b565b3382526001600160a01b03848116602084015216604082015260043560440135606082015260016080820152813b156100e4576040518092637da77a3360e11b825281806102416101a051956004830161204a565b03916101a051905af1801561075f57610925575b50610264600435600401612036565b6102be610275602460043501612036565b6102896064600435016004356004016120aa565b90916040519461029886611f7f565b6001600160a01b039081168652166020850152600435604401356040850152369161213c565b60608201523060808201526004803560a481013560a084015260cd546001600160a01b031693916102f591610124810191016124fc565b90604051948593632489c00560e21b855260c0600486015260018060a01b0386511660c486015260018060a01b0360208701511660e4860152604086015161010486015260608601519560c0610124870152610184860187518091526101a4906020828901928260051b8a01019901916000905b8282106107f95760808501516001600160a01b039081166101448c015260a08601516101648c015260248035908c0152861660448b015260648a01879052600060848b0152898b036003190160a48b015289602081806103ca8f8e8e61256e565b038173__$75df3f6366b0557754cd3ba14359105414$__5af4801561075f576101a051906107c0575b6105309150604061049561051161040e60c460043501612036565b61041c608460043501612036565b60cd5460ca54610504916001600160a01b03908116911661044160043560e401612036565b60cb546001600160a01b031661045b600435602401612036565b91610471610144600435016004356004016124fc565b949095610489610164600435016004356004016124fc565b99909a8e519d8e611f9a565b6001600160a01b039081168e5290811660208e01528d8d0191909152600660608d015260808c01919091523060a08c015290811660c08b015260e08a019190915216610100880152610120870189905260043561010401356101408801526101a05161016088015236916120f6565b61018085015236916120f6565b6101a082015281518094819263f1c55e3f60e01b8352600483016125a5565b038173__$75df3f6366b0557754cd3ba14359105414$__5af490811561075f576101a051928392610783575b5061056983600692612682565b916001600160a01b03610580600435602401612036565b16906040519085825260208201527fd864e4c29b5db75923b952a9774db749266cdd69f205b143caf29dd96321735360403392a473__$183737d697d7aa9b5df9988cbe11bc4947$__6105d7602460043501612036565b60ca546001600160a01b0316823b156100e457604051636336129b60e11b81526101a0516001600160a01b039384166004830152919092166024830152604482018490529091829060649082905af4801561075f5761076d575b5060ca546001600160a01b031661064c600435608401612036565b61065a602460043501612036565b823b156100e45760405163220eb46560e11b81526101a0516001600160a01b0393841660048301529290911660248201526044810184905291829081806064810103916101a051905af1801561075f57610742575b506040916106c1608460043501612036565b6106cf600435600401612036565b907f5fcf6637f014854f918b233372226c5492e6a5157e517674a8588675550c40c684610700602460043501612036565b87516001600160a01b0395861681529085166020820152600435604401356040820152606081019190915291909216913391608090a382519182526020820152f35b61074b90611f6c565b6101a051918261075b57916106af565b8280fd5b6040513d6101a051823e3d90fd5b61077690611f6c565b6101a05180156106315780fd5b610569935060069192506107ae9060403d6040116107b9575b6107a68183611fd1565b81019061258f565b90939092915061055c565b503d61079c565b506020813d6020116107f1575b816107da60209383611fd1565b810103126107ec5761053090516103f3565b600080fd5b3d91506107cd565b919394959697985091986101a3198b820301825289519060206040820192805183520151916040602083015282518091526060820190602060608260051b85010194019260005b8281106108665750505050506020806001929b01920192018a9897969594939192610369565b9091929394605f1983820301855285516020604083019160018060a01b0381511684520151916040602082015282518092526060810190602060608460051b8301019401926000915b8183106108d057505050505060208060019297019501910192919092610840565b9091929394602080610918600193605f1986820301895289519060406108ff835160608452606084019061252e565b928581015186840152015190604081840391015261252e565b97019501930191906108af565b61092e90611f6c565b6101a05180156102555780fd5b61095d915060203d602011610963575b6109558183611fd1565b81019061200a565b816101c5565b503d61094b565b60405163036be76f60e61b8152600490fd5b61099e915060203d6020116109a4575b6109968183611fd1565b810190611ff2565b81610188565b503d61098c565b346100e45760203660031901126100e4576109c4611ec2565b6101a051549060ff8260081c161591828093610b03575b8015610aec575b6109eb90611ed8565b6101a05160ff19821660011781559083610ada575b50506040516301ffc9a760e01b8152637965db0b60e01b60048201526001600160a01b039190911690602081602481855afa90811561075f576101a05191610abc575b5015610aaa576bffffffffffffffffffffffff60a01b60c954161760c955610a6d575b6101a05180f35b6101a05161ff001981541690557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1610a66565b60405163044aa57560e41b8152600490fd5b610ad4915060203d81116109a4576109968183611fd1565b83610a43565b61ffff19166101011790558280610a00565b50303b1580156109e2575060ff81166001146109e2565b50600160ff8216106109db565b346100e4576101a051806003193601126100e15760ca546040516001600160a01b039091168152602090f35b346100e4576101a051806003193601126100e15760c954604051632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb600482015233602482015290602090829060449082906001600160a01b03165afa90811561075f576101a05191610bff575b501561096a57610bc16126a5565b600160ff1960655416176065557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a16101a05180f35b610c17915060203d81116109a4576109968183611fd1565b81610bb3565b346100e4576101a051806003193601126100e15760c9546040516001600160a01b039091168152602090f35b346100e4576101a051806003193601126100e157602060ff606554166040519015158152f35b60603660031901126100e4576001600160401b03600435116100e4576101e0600435360360031901126100e4576044351515604435036100e4576002600154146119f857600260015560cc54604051630723eb0360e51b815233600482015290602090829060249082906001600160a01b03165afa90811561075f576101a051916119d9575b506119c757610d026126a5565b60c954604051632474521560e21b81527feca86ef56bcb7cd81d804bccc8125619ec5f1165527a63674e7136120af31f30600482015233602482015290602090829060449082906001600160a01b03165afa801561075f576101a0516101c0526119a5575b5060cb546040516391f03efd60e01b815290602090829060049082906001600160a01b03165afa90811561075f576101a05191611986575b50610dae60e460043501612029565b156118e257610dc1600435600401612036565b604051906336b4849f60e11b825260018060a01b0316600482015233602482015260018060a01b038216604482015260446004350135606482015260208160848173__$183737d697d7aa9b5df9988cbe11bc4947$__5af4801561075f576118b7575b505b610e34600435600401612036565b90610e8f610e46602460043501612036565b610e5a6084600435016004356004016120aa565b909160405195610e6987611f7f565b6001600160a01b039081168752166020860152600435604401356040860152369161213c565b606083015230608083015260c4600435013560a083015260018060a01b0360cd5416906101c0518060a0526118ac575b610ed4610144600435016004356004016124fc565b6080526101e0526040518061018052632489c00560e21b905260c0600461018051015260018060a01b0383511660c461018051015260018060a01b0360208401511660e4610180510152604083015161010461018051015260608301519260c061012461018051015261018461018051018451809152610180519060206101a4808401938360051b010196016101605260005b818110611750576020610fec88888860a089600180831b036080820151166101446101805101520151610164610180510152602435602461018051015260018060a01b03166044610180510152606461018051015260a051151560846101805101526101805160a460031982840301910152610180519182916080516101e05161256e565b036101805173__$75df3f6366b0557754cd3ba14359105414$__5af4801561075f576101a0519061171a575b80606460043501358110611708576101c051156112a9575b5061104061010460043501612029565b156111765773__$183737d697d7aa9b5df9988cbe11bc4947$__611068602460043501612036565b61107660a460043501612036565b823b156100e457604051636336129b60e11b81526101a0516001600160a01b039384166004830152919092166024830152604482018490529091829060649082905af4801561075f57611159575b506020905b6110d760a460043501612036565b6110e5600435600401612036565b907f5fcf6637f014854f918b233372226c5492e6a5157e517674a8588675550c40c683611116602460043501612036565b604080516001600160a01b03968716815291861660208301526004356044013590820152606081019190915291909216913391608090a360018055604051908152f35b61116290611f6c565b6101a051908161117257906110c4565b5080fd5b73__$183737d697d7aa9b5df9988cbe11bc4947$__611199602460043501612036565b60ca546001600160a01b0316823b156100e457604051636336129b60e11b81526101a0516001600160a01b039384166004830152919092166024830152604482018490529091829060649082905af4801561075f57611293575b5060ca546001600160a01b031661120e60043560a401612036565b61121c602460043501612036565b823b156100e45760405163220eb46560e11b81526101a0516001600160a01b0393841660048301529290911660248201526044810184905291829081806064810103916101a051905af1801561075f5761127a575b506020906110c9565b61128390611f6c565b6101a05190816111725790611271565b61129c90611f6c565b6101a05180156111f35780fd5b60cb5460405163fa11ed3760e01b81526007600482015290602090829060249082906001600160a01b03165afa90811561075f576101a051916116d6575b50156110305760cd549091506001600160a01b031661130f600480356101a4810191016120aa565b916113256101c4600435016004356004016120aa565b8291923b156100e4576040949394519463f197ce3560e01b865284604487016040600489015252606486019060648660051b8801019581926101a051925b8284106115df5750505050508484036003190160248601528084526001600160fb1b0381116100e4576020858094819360051b8091848901376101a051960103019134905af1801561075f576115c9575b506113c460043561012401612029565b156115b05760cb54604051630460f0f360e01b81529190602090839060049082906001600160a01b03165afa91821561075f576114dc926040916101a05191611591575b505b60cd5460ca5460cb54610511926001600160a01b03908116928116916105049116611439600435602401612036565b61144e610164600435016004356004016124fc565b919092611466610184600435016004356004016124fc565b9690978b519a6114758c611f9a565b60018060a01b03168b523360208c01528b8b0152600760608b015260808a01526101a05160a08a01526101a05160c08a015260e089015260018060a01b0316610100880152886101208801526101a0516101408801526101a05161016088015236916120f6565b038173__$75df3f6366b0557754cd3ba14359105414$__5af490811561075f576101a051928392611566575b509061151683600793612682565b926001600160a01b0361152d600435602401612036565b169160405191825260208201527fd864e4c29b5db75923b952a9774db749266cdd69f205b143caf29dd96321735360403392a481611030565b6115169350600792506115879060403d6040116107b9576107a68183611fd1565b9093909250611508565b6115aa915060203d602011610963576109558183611fd1565b84611408565b6114dc9060406115c4602460043501612036565b61140a565b6115d290611f6c565b6101a05180156113b45780fd5b90919293976063198a82030183528835601e19833603018112156100e4576001600160401b0383820135116100e4578281013560051b3603602084830101136100e457908282013581526020810160208484013560051b83010192602085820101926101a051915b86810135831061166b5750505050506020806001929a019301940192919390611363565b9091929394601f19838203018552603e19878301360301863512156100e4578682018635016001600160401b036020820135116100e4576020810135360360408201136100e45760206116c96001938360408480960135910161256e565b9701950193019190611647565b90506020813d602011611700575b816116f160209383611fd1565b810103126107ec5751836112e7565b3d91506116e4565b604051637974230960e11b8152600490fd5b5060203d602011611749575b6117338161018051611fd1565b6020610180518092810103126107ec5751611018565b503d611726565b9091956101a3196101805182030187526101605151906020604082019280518352015190610120918252604060208201528151518093526020606082019260608560051b84010160c0525101906000915b8483106117ca5750505050506001602060c0519781610160510161016052019101919091610f67565b605f198260c051030184528051602060c05191604083019260018060a01b03825116905201516101409081526040602060c0510152805151809252602060c051916060808401938560051b010160e0525101610100526000905b8282106118465750505060208060019260e05160c052019401920191926117a1565b6020600191605f1960c05160e05103018152611896610100515160406118798251606060e05152606060e051019061252e565b91858101518660e0510152015160e051604081840391015261252e565b60e0528161010051016101005201910190611824565b60443560a052610ebf565b602090813d83116118db575b6118cd8183611fd1565b810103126107ec5781610e24565b503d6118c3565b60ca546001600160a01b03166118fb6004803501612036565b6040519061190882611f3b565b3382526001600160a01b03848116602084015216604082015260043560440135606082015260016080820152813b156100e4576040518092637da77a3360e11b8252818061195d6101a051956004830161204a565b03916101a051905af1801561075f57611977575b50610e26565b61198090611f6c565b81611971565b61199f915060203d602011610963576109558183611fd1565b81610d9f565b6119bd9060203d6020116109a4576109968183611fd1565b6101c05280610d67565b6040516333df015b60e01b8152600490fd5b6119f2915060203d6020116109a4576109968183611fd1565b81610cf5565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b346100e45760803660031901126100e457611a56611ec2565b6001600160a01b036024803582811693908490036100e4576044358381168091036100e4576064358481168091036100e4578460c95416946040518096632474521560e21b82526101a051600483015233878301528160446020998a935afa90811561075f576101a05191611cdf575b501561096a576101a0515460ff8160081c161580611cd2575b611ae890611ed8565b61ffff19169361010285176101a051551693604051906301ffc9a760e01b9182815263081e57a760e31b6004820152878183818a5afa92831561075f5788916101a05194611cb3575b5083611c60575b83611c0d575b83611bba575b50505015610aaa577f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498956002946bffffffffffffffffffffffff60a01b928360cc54161760cc558260cb54161760cb558160ca54161760ca5560cd54161760cd55176101a0515560405160028152a16101a05180f35b604051908152633df6cef760e01b6004820152925090829081855afa90811561075f576101a05191611bf0575b50878681611b44565b611c079150863d88116109a4576109968183611fd1565b87611be7565b9250506040518281526333ca6d2360e21b600482015287818381885afa801561075f5788916101a05191611c43575b5092611b3e565b611c5a9150823d84116109a4576109968183611fd1565b8a611c3c565b9250506040518281526312b3ed2b60e01b6004820152878183818c5afa801561075f5788916101a05191611c96575b5092611b38565b611cad9150823d84116109a4576109968183611fd1565b8a611c8f565b611ccb919450823d84116109a4576109968183611fd1565b928a611b31565b50600260ff821610611adf565b611cf69150873d89116109a4576109968183611fd1565b88611ac6565b346100e4576101a051806003193601126100e15760c954604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8600482015233602482015290602090829060449082906001600160a01b03165afa90811561075f576101a05191611df9575b501561096a5760655460ff811615611dbd5760ff19166065557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a16101a05180f35b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b611e11915060203d81116109a4576109968183611fd1565b81611d73565b346100e4576101a051806003193601126100e15760cb546040516001600160a01b039091168152602090f35b346100e4576101a051806003193601126100e15760cd546040516001600160a01b039091168152602090f35b346107ec5760203660031901126107ec576004359063ffffffff60e01b82168092036107ec5760209163041f8a0360e11b8114908115611eb1575b5015158152f35b6301ffc9a760e01b14905083611eaa565b600435906001600160a01b03821682036107ec57565b15611edf57565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b60a081019081106001600160401b03821117611f5657604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b038111611f5657604052565b60c081019081106001600160401b03821117611f5657604052565b6101c081019081106001600160401b03821117611f5657604052565b604081019081106001600160401b03821117611f5657604052565b90601f801991011681019081106001600160401b03821117611f5657604052565b908160209103126107ec575180151581036107ec5790565b908160209103126107ec57516001600160a01b03811681036107ec5790565b3580151581036107ec5790565b356001600160a01b03811681036107ec5790565b919091608060a082019360018060a01b0380825116845280602083015116602085015260408201511660408401526060810151606084015201519060038210156120945760800152565b634e487b7160e01b600052602160045260246000fd5b903590601e19813603018212156107ec57018035906001600160401b0382116107ec57602001918160051b360383136107ec57565b6001600160401b038111611f565760051b60200190565b9291926001600160401b038211611f56576040519161211f601f8201601f191660200184611fd1565b8294818452818301116107ec578281602093846000960137010152565b9291909261026052826102005261024052602061215f61022093600085526120df565b61216c6040519182611fd1565b808452610200518152019161024051916102005192610260519360051b8401116107ec57926102809283525b6102005160051b610260519084519082018110156124f35735906001600160401b0382116107ec57016040816102405103126107ec57604051906121db82611fb6565b8035825260208101356001600160401b0381116107ec5761024051601f8284010112156107ec578082013561220f816120df565b9261221d6040519485611fd1565b81845260208401906102405160208460051b8684010101116107ec57602084820101915b60208460051b8684010101831061226f57505050506020808401929092525090825283518101845201612198565b82356001600160401b0381116107ec576040601f198288860101610240510301126107ec57604051906122a182611fb6565b8387018101602001356001600160a01b03811681036107ec5782526001600160401b03604082898701010135116107ec57610240518488018201604081013501603f0112156107ec57838701810160408101350160200135612302816120df565b916123106040519384611fd1565b818352610240516020840191908a88018201604081810135909101600586901b0101116107ec5760408a88018201818101350101915b8a88018201604081810135909101600586901b0101831061237a575050505091816020938480940152815201920191612241565b6001600160401b038335116107ec5761024051906060898d0184016040810135018535018303603f1901126107ec57604051918260608101106001600160401b03606085011117611f56576060830160409081528a8e01850180820135018635010135906001600160401b0382116107ec578a8e0185016040810135018635018201605f018113156107ec5761242b918e8c01860160408181013590910188350190910190810135906060016120f6565b82528b89018301604081013501843501606081013560208401526001600160401b03608090910135116107ec576102405190898d018401604081013501853501608081013501605f018213156107ec576020926124e384938f60608e604060808c35828d8786010101358d87860101010101358c35828d8786010101358d8786010101010101359260808c3560408d8486010101358d8486010101010135918b8d3592604082828501010135920101010101016120f6565b6040820152815201920191612346565b50505090505190565b903590601e19813603018212156107ec57018035906001600160401b0382116107ec576020019181360383136107ec57565b919082519283825260005b84811061255a575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612539565b908060209392818452848401376000828201840152601f01601f1916010190565b91908260409103126107ec576020825192015190565b906020825260018060a01b039182825116602082015282602083015116604082015282604083015116606082015260608201519260088410156120945761267f9360808301528060808401511660a08301528060a08401511660c08301528060c08401511660e08301528060e08401511661010090818401528301511661012090818301528201516101409081830152820151610160908183015282015115156101809081830152820151906101c09161266c6101a09184838501526101e084019061252e565b93015191601f198285030191015261252e565b90565b9190820391821161268f57565b634e487b7160e01b600052601160045260246000fd5b60ff606554166126b157565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fdfea264697066735822122056ec28cc9583e491bc2b4a84675ee408b079fcfbaffd7213f451405df90f21d164736f6c63430008120033";

type SwapManagerConstructorParams =
  | [linkLibraryAddresses: SwapManagerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SwapManager__factory extends ContractFactory {
  constructor(...args: SwapManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SwapManager__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SwapManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$75df3f6366b0557754cd3ba14359105414\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$183737d697d7aa9b5df9988cbe11bc4947\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SwapManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SwapManager__factory {
    return super.connect(runner) as SwapManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapManagerInterface {
    return new Interface(_abi) as SwapManagerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SwapManager {
    return new Contract(address, _abi, runner) as unknown as SwapManager;
  }
}

export interface SwapManagerLibraryAddresses {
  ["contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"]: string;
  ["contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"]: string;
}
