/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SwapManager,
  SwapManagerInterface,
} from "../../../contracts/SwapManager/SwapManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "boughtAsset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum IPrimexDNSStorageV3.FeeRateType",
        name: "feeRateType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInPositionAsset",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInPmx",
        type: "uint256",
      },
    ],
    name: "PaidProtocolFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountSold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountBought",
        type: "uint256",
      },
    ],
    name: "SpotSwap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_primexDNS",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_traderBalanceVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_whiteBlackList",
        type: "address",
      },
    ],
    name: "initializeAfterUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOracle",
    outputs: [
      {
        internalType: "contract IPriceOracleV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "primexDNS",
    outputs: [
      {
        internalType: "contract IPrimexDNSV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountTokenA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSwapFromWallet",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSwapToWallet",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSwapFeeInPmx",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "tokenAtokenBOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "pmxPositionAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "nativePositionAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes[][]",
            name: "pullOracleData",
            type: "bytes[][]",
          },
          {
            internalType: "uint256[]",
            name: "pullOracleTypes",
            type: "uint256[]",
          },
        ],
        internalType: "struct ISwapManager.SwapParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maximumOracleTolerableLimit",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "needOracleTolerableLimitCheck",
        type: "bool",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "depositAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "positionAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeperRewardDistributor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gasSpent",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "depositPositionAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "pmxPositionAssetOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "nativePositionAssetOracleData",
            type: "bytes",
          },
        ],
        internalType: "struct ISwapManager.SwapInLimitOrderParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maximumOracleTolerableLimit",
        type: "uint256",
      },
    ],
    name: "swapInLimitOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "traderBalanceVault",
    outputs: [
      {
        internalType: "contract ITraderBalanceVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "whiteBlackList",
    outputs: [
      {
        internalType: "contract IWhiteBlackList",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460bd576000549060ff8260081c16606b575060ff808216036031575b60405161278b90816100c38239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a1386022565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe61024080604052600436101561001457600080fd5b60006101e0526101e0513560e01c90816301ffc9a714611fe4575080632630c12f14611fb95780633f4a2d2714611f8e5780633f4ba83a14611e735780635017324814611b6557806356b3ae0314610d195780635c975abb14610cf45780637b10399914610cc95780638456cb5914610be85780639968861e14610bbd578063c4d66de814610a5a578063ca4de5a5146100e95763ef379d17146100b757600080fd5b346100e2576101e0513660031901126100e25760cc546040516001600160a01b039091168152602090f35b6101e05180fd5b346100e25760403660031901126100e2576001600160401b03600435116100e257610180600435360360031901126100e257610123612711565b60c954604051632474521560e21b81527f8f8b3dc194d940c9ce77bea0cf23855523a0d7b641973e714d9dc5f3528a573a600482015233602482015290602090829060449082906001600160a01b03165afa9081156107b9576101e05191610a2b575b5015610a195760cb546040516391f03efd60e01b815290602090829060049082906001600160a01b03165afa9081156107b9576101e051916109ea575b5060ca546001600160a01b03166101dd6004803501612198565b6044600435013561018052604051906101f58261204d565b3382526001600160a01b03848116602084015216604082015261018051606082015260016080820152813b156100e2576040518092637da77a3360e11b825281806102476101e05195600483016121ac565b03916101e051905af180156107b9576109cf575b5061026a600435600401612198565b90610279602460043501612198565b6102ca61029060646004350160043560040161221e565b91906040519561029f8761207e565b60018060a01b03168652602086019360018060a01b03168452604086019261018051845236916122b0565b60608501908152608085019130835260a086019360a46004350135855260018060a01b0360cd541660a05261030a61012460043501600435600401612541565b61012052610100526040516101a052632489c00560e21b6101a051526101e0515060c060046101a05101526101846101a051019660018060a01b0390511660c46101a051015260018060a01b0390511660e46101a0510152516101046101a0510152519360c06101246101a051015284518091526101a46101a051019060206101a060048360051b82510101019601610160526101e0515b81811061085e5760206104208888888860018060a01b039051166101446101a0510152516101646101a051015260243560246101a051015260018060a01b031660446101a051015260a05160646101a05101526101e05160846101a05101526003196101a05182030160a46101a051015261012051610100516125b4565b6101a051908190038173__$75df3f6366b0557754cd3ba14359105414$__5af480156107b9576101e0519061081f575b61058c9060406104f161056d61046a60c460043501612198565b610478608460043501612198565b60cd5460ca54610560916001600160a01b03908116911661049d60043560e401612198565b60cb546001600160a01b03166104b7600435602401612198565b916104cd61014460043501600435600401612541565b9490956104e561016460043501600435600401612541565b99909a8e519d8e612099565b6001600160a01b039081168e5290811660208e01528d8d0191909152600660608d015260808c01919091523060a08c015290811660c08b015260e08a019190915216610100880152610120870189905260043561010401356101408801526101e051610160880152369161226a565b610180850152369161226a565b6101a082015281518094819263f1c55e3f60e01b8352600483016125eb565b038173__$75df3f6366b0557754cd3ba14359105414$__5af49081156107b9576101e0519283926107e2575b506105c5836006926126ee565b916001600160a01b036105dc600435602401612198565b16906040519085825260208201527fd864e4c29b5db75923b952a9774db749266cdd69f205b143caf29dd96321735360403392a473__$183737d697d7aa9b5df9988cbe11bc4947$__610633602460043501612198565b60ca546001600160a01b0316823b156100e257604051636336129b60e11b81526101e0516001600160a01b039384166004830152919092166024830152604482018490529091829060649082905af480156107b9576107c7575b5060ca546001600160a01b03166106a8600435608401612198565b6106b6602460043501612198565b823b156100e25760405163220eb46560e11b81526101e0516001600160a01b0393841660048301529290911660248201526044810184905291829081806064810103916101e051905af180156107b95761079e575b5060409161071d608460043501612198565b61072b600435600401612198565b907f5fcf6637f014854f918b233372226c5492e6a5157e517674a8588675550c40c68461075c602460043501612198565b8751610180516001600160a01b03968716825291861660208201526040810191909152606081019190915291909216913391608090a382519182526020820152f35b6101e0516107ab916120d0565b6101e0516100e2578261070b565b6040513d6101e051823e3d90fd5b6101e0516107d4916120d0565b6101e0516100e2578261068d565b6105c59350600691925061080d9060403d604011610818575b61080581836120d0565b8101906125d5565b9093909291506105b8565b503d6107fb565b5060203d602011610857575b8061083b6020926101a0516120d0565b6101a0519081010312610852576101a05151610450565b600080fd5b503d61082b565b90919561019f196003196101a0518303010187526101605151906020604082019280518352015161020052604060208201526102005151809252606081019060608360051b8201016101c05260206102005101906101e051915b8483106108e2575050505050600160206101c05197816101605101610160520191019190916103a2565b605f19826101c051030184528051602060406101c051019160018060a01b038151166101c05152015161014052604060206101c0510152610140515180915260606101c0510160608260051b6101c051010160e0526020610140510160c0526101e051905b82821061096a5750505060208060019260e0516101c052019401920191926108b8565b6020600191605f196101c05160e051030181526109bb60c05151604061099d8251606060e05152606060e0510190612573565b91858101518660e0510152015160e0518203604060e0510152612573565b60e0528160c0510160c05201910190610947565b6101e0516109dc916120d0565b6101e0516100e2578161025b565b610a0c915060203d602011610a12575b610a0481836120d0565b81019061216c565b816101c3565b503d6109fa565b60405163036be76f60e61b8152600490fd5b610a4d915060203d602011610a53575b610a4581836120d0565b8101906120f1565b81610186565b503d610a3b565b346100e25760203660031901126100e257610a73612037565b6101e051549060ff8260081c161591828093610bb0575b8015610b99575b610a9a90612109565b82600160ff198316176101e05155610b84575b506040516301ffc9a760e01b8152637965db0b60e01b60048201526001600160a01b039190911690602081602481855afa9081156107b9576101e05191610b65575b5015610b53576001600160601b0360a01b60c954161760c955610b14575b6101e05180f35b61ff00196101e05154166101e051557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1610b0d565b60405163044aa57560e41b8152600490fd5b610b7e915060203d602011610a5357610a4581836120d0565b83610aef565b6101019061ffff1916176101e0515582610aad565b50303b158015610a91575060ff8116600114610a91565b50600160ff821610610a8a565b346100e2576101e0513660031901126100e25760ca546040516001600160a01b039091168152602090f35b346100e2576101e0513660031901126100e25760c954604051632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb600482015233602482015290602090829060449082906001600160a01b03165afa9081156107b9576101e05191610caa575b5015610a1957610c6c612711565b600160ff1960655416176065557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a16101e05180f35b610cc3915060203d602011610a5357610a4581836120d0565b81610c5e565b346100e2576101e0513660031901126100e25760c9546040516001600160a01b039091168152602090f35b346100e2576101e0513660031901126100e257602060ff606554166040519015158152f35b60603660031901126100e2576004356001600160401b0381116100e25780600401906101e060031982360301126100e2576044359182151583036100e257600260015414611b2057600260015560cc54604051630723eb0360e51b815233600482015290602090829060249082906001600160a01b03165afa9081156107b9576101e05191611b01575b50611aef57604492610db3612711565b60c954604051632474521560e21b81527feca86ef56bcb7cd81d804bccc8125619ec5f1165527a63674e7136120af31f3060048201523360248201529460209186919082906001600160a01b03165afa9283156107b9576004946101e05194611ace575b5060cb546040516391f03efd60e01b81529560209187919082906001600160a01b03165afa9485156107b9576101e05195611aad575b50610e5a60e4820161218b565b15611a0b57610e6883612198565b6040516336b4849f60e11b81526001600160a01b039182166004820152336024820152908616604480830191909152820135606482015260208160848173__$183737d697d7aa9b5df9988cbe11bc4947$__5af480156107b9576119dc575b505b610ed283612198565b916024820192610f3286610ee586612198565b93604486013599610ef9608488018a61221e565b949060405196610f088861207e565b6001600160a01b0390811688529790971660208701908152604087018d81529097909536916122b0565b946060810195865230608082015260c488013560a082015260018060a01b0360cd541692846119d4575b50610f6b61014489018b612541565b969095604051608052632489c00560e21b608051526101e0515060c060046080510152610184608051019860018060a01b0384511660c4608051015260018060a01b0390511660e46080510152516101046080510152519660c0610124608051015287518091526101a4608051019060206101a060048360051b6080510101019901916101e051905b8282106118aa57505050509161106995939160a06020989694600180831b036080820151166101446080510152015161016460805101526024356024608051015260018060a01b0316604460805101526064608051015215156084608051015260031960805184030160a460805101526125b4565b608051908190038173__$75df3f6366b0557754cd3ba14359105414$__5af480156107b9576101e05190611873575b809460648301358210611861571561132e575b506110b9610104820161218b565b156111d35773__$183737d697d7aa9b5df9988cbe11bc4947$__6110dc83612198565b6110e860a48401612198565b823b156100e257604051636336129b60e11b81526101e0516001600160a01b039384166004830152919092166024830152604482018790529091829060649082905af480156107b9576111b8575b5060209461117a61117461116e60a47f5fcf6637f014854f918b233372226c5492e6a5157e517674a8588675550c40c6955b01612198565b95612198565b93612198565b604080516001600160a01b0395861681529185166020830152810191909152606081018590529290911691339190608090a360018055604051908152f35b6101e0516111c5916120d0565b6101e0516100e25785611136565b73__$183737d697d7aa9b5df9988cbe11bc4947$__6111f183612198565b60ca546001600160a01b0316823b156100e257604051636336129b60e11b81526101e0516001600160a01b039384166004830152919092166024830152604482018790529091829060649082905af480156107b957611313575b5060ca546001600160a01b031661126460a48301612198565b61126d84612198565b823b156100e25760405163220eb46560e11b81526101e0516001600160a01b0393841660048301529290911660248201526044810187905291829081806064810103916101e051905af180156107b9576112f8575b5060209461117a61117461116e60a47f5fcf6637f014854f918b233372226c5492e6a5157e517674a8588675550c40c695611168565b6101e051611305916120d0565b6101e0516100e257856112c2565b6101e051611320916120d0565b6101e0516100e2578561124b565b60cb5460405163bcad341960e01b81526001600160a01b0390911690602081600481855afa9081156107b9576101e0519161181e575b5060405163304f823d60e11b815233600482015290602090829060249082906001600160a01b03165afa80156107b9576101e051906117eb575b6040516345a1aa4160e11b81526007600482015260248101919091529160209150829060449082905afa9081156107b9576101e051916117b9575b50156110ab5760cd549094506001600160a01b03166113fc6101a483018561221e565b9161140b6101c485018761221e565b8291923b156100e2576040949394519463f197ce3560e01b865284604487016040600489015252606486019060648660051b8801019581926101e051925b8284106116cf5750505050508484036003190160248601528084526001600160fb1b0381116100e2576020858094819360051b8091848901376101e051960103019134905af180156107b9576116b4575b506114a8610124820161218b565b156116a05760cb54604051630460f0f360e01b81529490602090869060049082906001600160a01b03165afa9485156107b9576115d1956040916101e05191611681575b505b60cd5460ca5460cb546115b2926001600160a01b0390811692811691610560918991610184918d911661153c6115238e612198565b92611532610164870182612541565b9590960190612541565b9690978b519a61154b8c612099565b60018060a01b03168b523360208c01528b8b0152600760608b015260808a01526101e05160a08a01526101e05160c08a015260e089015260018060a01b0316610100880152886101208801526101e0516101408801526101e051610160880152369161226a565b6101a082015281518097819263f1c55e3f60e01b8352600483016125eb565b038173__$75df3f6366b0557754cd3ba14359105414$__5af49081156107b9576101e051958692611656575b509061160b866007936126ee565b956001600160a01b0361161d86612198565b169160405191825260208201527fd864e4c29b5db75923b952a9774db749266cdd69f205b143caf29dd96321735360403392a4856110ab565b61160b9650600792506116779060403d6040116108185761080581836120d0565b90969092506115fd565b61169a915060203d602011610a1257610a0481836120d0565b886114ec565b6115d19360406116af84612198565b6114ee565b6101e0516116c1916120d0565b6101e0516100e2578561149a565b90919293976063198a82030183528835601e19833603018112156100e257602083820101916001600160401b0384830135116100e2578382013560051b9081360384136100e2579184810135835260208084019284010193926101e05191603e198782013603015b87820135841061175c575050505050506020806001929a019301940192919390611449565b909192939495601f198482030186528635828112156100e2578884010190604060208301359201916001600160401b0381116100e25780360383136100e2576117ab60209283926001956125b4565b980196019401929190611737565b90506020813d6020116117e3575b816117d4602093836120d0565b810103126108525751876113d9565b3d91506117c7565b506020813d602011611816575b81611805602093836120d0565b81010312610852576020905161139e565b3d91506117f8565b90506020813d602011611859575b81611839602093836120d0565b810103126100e257516001600160a01b03811681036100e2576020611364565b3d915061182c565b604051637974230960e11b8152600490fd5b5060203d6020116118a3575b8061188e6020926080516120d0565b60805190810103126108525760805151611098565b503d61187f565b9091929961019f196003196080518303010182528a519060206040820192805183520151916040602083015282518091526060820190602060608260051b8501019401926101e0515b8281106119135750505050506020806001929c0192019201909291610ff4565b9091929394605f1983820301855285516020604083019160018060a01b0381511684520151916040602082015282518092526060810190602060608460051b8301019401926101e051915b81831061197f575050505050602080600192970195019101929190926118f3565b90919293946020806119c7600193605f1986820301895289519060406119ae8351606084526060840190612573565b9285810151868401520151906040818403910152612573565b970195019301919061195e565b93508c610f5c565b6119fd9060203d602011611a04575b6119f581836120d0565b81019061220f565b5085610ec7565b503d6119eb565b60ca546001600160a01b0316611a2084612198565b60405190611a2d8261204d565b3382526001600160a01b0388811660208401521660408201526044830135606082015260016080820152813b156100e2576040518092637da77a3360e11b82528180611a806101e05195600483016121ac565b03916101e051905af180156107b957611a9a575b50610ec9565b6101e051611aa7916120d0565b85611a94565b611ac791955060203d602011610a1257610a0481836120d0565b9385610e4d565b611ae891945060203d602011610a5357610a4581836120d0565b9285610e17565b6040516333df015b60e01b8152600490fd5b611b1a915060203d602011610a5357610a4581836120d0565b84610da3565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b346100e25760803660031901126100e257611b7e612037565b6024356001600160a01b03811691908290036100e2576044356001600160a01b038116908190036100e2576064356001600160a01b03811693908490036100e25760c954604051632474521560e21b81526101e051600482015233602482015290602090829060449082906001600160a01b03165afa9081156107b9576101e05191611e54575b5015610a19576101e0515460ff8160081c161580611e47575b611c2790612109565b6101e05161010261ffff199290921691821790556040516301ffc9a760e01b8152633f9940a760e11b600482015290936001600160a01b031690602081602481855afa9081156107b9576101e05191611e28575b5080611dce575b80611d74575b80611d1a575b15610b53576002946001600160601b0360a01b60cc54161760cc556001600160601b0360a01b60cb54161760cb556001600160601b0360a01b60ca54161760ca556001600160601b0360a01b60cd54161760cd55176101e051557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160028152a16101e05180f35b506040516301ffc9a760e01b8152633df6cef760e01b6004820152602081602481895afa9081156107b9576101e05191611d55575b50611c8e565b611d6e915060203d602011610a5357610a4581836120d0565b86611d4f565b506040516301ffc9a760e01b81526333ca6d2360e21b6004820152602081602481875afa9081156107b9576101e05191611daf575b50611c88565b611dc8915060203d602011610a5357610a4581836120d0565b86611da9565b506040516301ffc9a760e01b81526312b3ed2b60e01b6004820152602081602481865afa9081156107b9576101e05191611e09575b50611c82565b611e22915060203d602011610a5357610a4581836120d0565b86611e03565b611e41915060203d602011610a5357610a4581836120d0565b86611c7b565b50600260ff821610611c1e565b611e6d915060203d602011610a5357610a4581836120d0565b85611c05565b346100e2576101e0513660031901126100e25760c954604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8600482015233602482015290602090829060449082906001600160a01b03165afa9081156107b9576101e05191611f6f575b5015610a195760655460ff811615611f335760ff19166065557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a16101e05180f35b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b611f88915060203d602011610a5357610a4581836120d0565b81611ee9565b346100e2576101e0513660031901126100e25760cb546040516001600160a01b039091168152602090f35b346100e2576101e0513660031901126100e25760cd546040516001600160a01b039091168152602090f35b346100e25760203660031901126100e2576004359063ffffffff60e01b82168092036100e25760209163041f8a0360e11b8114908115612026575b5015158152f35b6301ffc9a760e01b1490508361201f565b600435906001600160a01b038216820361085257565b60a081019081106001600160401b0382111761206857604052565b634e487b7160e01b600052604160045260246000fd5b60c081019081106001600160401b0382111761206857604052565b6101c081019081106001600160401b0382111761206857604052565b604081019081106001600160401b0382111761206857604052565b90601f801991011681019081106001600160401b0382111761206857604052565b90816020910312610852575180151581036108525790565b1561211057565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b9081602091031261085257516001600160a01b03811681036108525790565b3580151581036108525790565b356001600160a01b03811681036108525790565b81516001600160a01b039081168252602080840151821690830152604080840151909116908201526060808301519082015260809091015160a08201929160038210156121f95760800152565b634e487b7160e01b600052602160045260246000fd5b90816020910312610852575190565b903590601e198136030182121561085257018035906001600160401b03821161085257602001918160051b3603831361085257565b6001600160401b0381116120685760051b60200190565b9291926001600160401b0382116120685760405191612293601f8201601f1916602001846120d0565b829481845281830111610852578281602093846000960137010152565b909291610220526122c083612253565b926122ce60405194856120d0565b6020848281520191610220518260051b8201116108525780925b8260051b820184106122fa5750505050565b83356001600160401b0381116108525782016040816102205103126108525760405190612326826120b5565b803582526020810135906001600160401b038211610852570161022051601f8201121561085257803561235881612253565b9161236660405193846120d0565b81835260208084019260051b820101906102205182116108525760208101925b8284106123a65750505050918160209384809401528152019301926122e8565b83356001600160401b0381116108525782016040601f19826102205103011261085257604051906123d6826120b5565b60208101356001600160a01b038116810361085257825260408101356001600160401b03811161085257602091010161022051601f8201121561085257803561241e81612253565b9161242c60405193846120d0565b81835260208084019260051b820101906102205182116108525760208101925b82841061246c575050505091816020938480940152815201930192612386565b83356001600160401b038111610852578201906060601f1983610220510301126108525760405191606083018381106001600160401b038211176120685760405260208101356001600160401b0381116108525760209082010161022051601f8201121561085257610220516124e79180359060200161226a565b83526040810135602084015260608101356001600160401b0381116108525760209101019061022051601f830112156108525760209261253184936102205190858135910161226a565b604082015281520193019261244c565b903590601e198136030182121561085257018035906001600160401b0382116108525760200191813603831361085257565b919082519283825260005b84811061259f575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161257e565b908060209392818452848401376000828201840152601f01601f1916010190565b9190826040910312610852576020825192015190565b602080825282516001600160a01b039081168284015290830151811660408084019190915283015116606080830191909152820151919060088310156121f9576126eb92608082015260018060a01b0360808301511660a082015260018060a01b0360a08301511660c082015260018060a01b0360c08301511660e082015260018060a01b0360e08301511661010082015260018060a01b036101008301511661012082015261012082015161014082015261014082015161016082015261016082015115156101808201526101a06126d56101808401516101c0838501526101e0840190612573565b920151906101c0601f1982850301910152612573565b90565b919082039182116126fb57565b634e487b7160e01b600052601160045260246000fd5b60ff6065541661271d57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fdfea2646970667358221220e41a6f20f7d3f80175e99175feba5d9d199fbefed240d00e34d908d775664d9864736f6c634300081a0033";

type SwapManagerConstructorParams =
  | [linkLibraryAddresses: SwapManagerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SwapManager__factory extends ContractFactory {
  constructor(...args: SwapManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SwapManager__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SwapManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$75df3f6366b0557754cd3ba14359105414\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$183737d697d7aa9b5df9988cbe11bc4947\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SwapManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SwapManager__factory {
    return super.connect(runner) as SwapManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapManagerInterface {
    return new Interface(_abi) as SwapManagerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SwapManager {
    return new Contract(address, _abi, runner) as unknown as SwapManager;
  }
}

export interface SwapManagerLibraryAddresses {
  ["contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"]: string;
  ["contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"]: string;
}
