/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SynchronizationBotLens,
  SynchronizationBotLensInterface,
} from "../../../contracts/TestnetServices/SynchronizationBotLens";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "_uniswapV2Router02",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_swapPath",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_swapAmount",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_liquidityPath",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_liquidityAmounts",
        type: "uint256[]",
      },
    ],
    name: "swapAndAddLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "_uniswapV2Router02",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_swapPath",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_swapAmount",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_liquidityPath",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_liquidityK",
        type: "uint256",
      },
    ],
    name: "swapAndRemoveLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761127c908161001c8239f35b600080fdfe608060405260048036101561001357600080fd5b600090813560e01c8063dab61338146100c45763ec1a6c9e1461003557600080fd5b346100c05760a03660031901126100c05761004e61012f565b67ffffffffffffffff6024358181116100bc5761006e903690850161014a565b9290916064358181116100b857610088903690870161014a565b9290916084359081116100b4576100b1966100a59136910161014a565b959094604435926103da565b80f35b8780fd5b8680fd5b8480fd5b5080fd5b50346100c05760a03660031901126100c0576100de61012f565b67ffffffffffffffff906024358281116100bc576100ff903690850161014a565b909260643590811161012b576100b19461011b9136910161014a565b9290916084359460443592610c6a565b8580fd5b600435906001600160a01b038216820361014557565b600080fd5b9181601f840112156101455782359167ffffffffffffffff8311610145576020808501948460051b01011161014557565b6040810190811067ffffffffffffffff82111761019757604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761019757604052565b90602090818382031261014557825167ffffffffffffffff93848211610145570181601f82011215610145578051938411610197578360051b9060405194610219858401876101ad565b85528380860192820101928311610145578301905b82821061023c575050505090565b8151815290830190830161022e565b9190808252602080920192916000805b83821061026a57505050505090565b9091929394853560018060a01b03811680910361029457815283019483019392916001019061025b565b8280fd5b8051600110156102a85760400190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b03811681036101455790565b90816020910312610145575180151581036101455790565b9261030d929195949584526000602085015260a0604085015260a084019161024b565b6001600160a01b039093166060820152600019608090910152565b9081602091031261014557516001600160a01b03811681036101455790565b51906001600160701b038216820361014557565b908160609103126101455761036f81610347565b91604061037e60208401610347565b92015163ffffffff811681036101455790565b818102929181159184041417156103a457565b634e487b7160e01b600052601160045260246000fd5b81156103c4570490565b634e487b7160e01b600052601260045260246000fd5b9496939280610a78575b505060405163c45a015560e01b815290506020816004816001600160a01b0388165afa9081156107fc57600091610a59575b5085156102a857610426826102be565b95600110156102a857610475956020916104418385016102be565b60405163e6a4390560e01b81526001600160a01b039384166004820152921660248301529096879190829081906044820190565b03916001600160a01b03165afa9485156107fc57600095610a38575b50604051630240bc6b60e21b815260609586826004816001600160a01b0385165afa80156107fc576000928391610a04575b509182816104d0866102be565b604051630dfe168160e01b81526020816004816001600160a01b038a165afa9081156107fc576000916109d5575b506001600160a01b039081169116036109ca575b50506040516105208161017b565b6001600160701b03821681526001600160701b038416602082015260006040805161054a8161017b565b3690376001600160701b0382511615806109b5575b156108db575050604051906105738261017b565b85156102a8578735825285600110156102a8576020600492818a013582820152935b6040516318160ddd60e01b815293849182906001600160a01b03165afa9182156107fc576000926108a2575b506105f4929160206001600160701b036105ea816105e595166105e5858851610391565b6103ba565b9616930151610391565b8082121561089b57505b15610894576001600160a01b03610614826102be565b169180156102a8576040516323b872dd60e01b808252336004830152306024830152863560448301819052969094909190602090829060649082906000905af180156107fc57610875575b506001600160a01b03610674602085016102be565b1691600110156102a857604051938452336004850152306024850152602090810135604485018190529391829060649082906000905af180156107fc57610856575b506001600160a01b036106c8826102be565b60405163095ea7b360e01b8082526001600160a01b0387166004830152602482018890529392909160209183916044918391600091165af180156107fc57610837575b5060206001600160a01b036107218383016102be565b6040519485526001600160a01b03871660048601526024850186905284916044918391600091165af180156107fc57869461010493600092610808575b50610774602061076d856102be565b94016102be565b60405162e8e33760e81b81526001600160a01b0394851660048201529084166024820152604481019790975260648701949094526084860181905260a486018190523360c4870152801960e487015285938492165af180156107fc576107d8575050565b813d83116107f5575b6107eb81836101ad565b8101031261014557565b503d6107e1565b6040513d6000823e3d90fd5b6108299060203d602011610830575b61082181836101ad565b8101906102d2565b503861075e565b503d610817565b61084f9060203d6020116108305761082181836101ad565b503861070b565b61086e9060203d6020116108305761082181836101ad565b50386106b6565b61088d9060203d6020116108305761082181836101ad565b503861065f565b5050505050565b90506105fe565b90916020823d6020116108d3575b816108bd602093836101ad565b810103126108d0575051906105e56105c1565b80fd5b3d91506108b0565b86156109a15788359161090f6108fe6001600160701b0360208401511685610391565b6001600160701b03835116906103ba565b9188600110156109a15760049493602093909290918c8501359182841161094c57505050604051916109408361017b565b82528282015293610595565b610973919293506001600160701b03866109698284511687610391565b92015116906103ba565b928311610989575b50604051916109408361017b565b836040516109968161017b565b82815201523861097b565b634e487b7160e01b81526032600452602490fd5b506001600160701b036020830151161561055f565b935090503880610512565b6109f7915060203d6020116109fd575b6109ef81836101ad565b810190610328565b386104fe565b503d6109e5565b9050610a27919250873d8911610a31575b610a1f81836101ad565b81019061035b565b50919091386104c3565b503d610a15565b610a5291955060203d6020116109fd576109ef81836101ad565b9338610491565b610a72915060203d6020116109fd576109ef81836101ad565b38610416565b6040805163d06ca61f60e01b8152600481018390526024810182905260009491936001600160a01b038981169392878180610ab760448201888861024b565b0381885afa908115610c0b5790610ad5918991610c50575b50610298565b51610ae4575b505050506103e4565b8215610c3c5780610af4836102be565b87516323b872dd60e01b8152336004820152306024820152604481018890526020939290918491839160649183918e91165af18015610c3257610c15575b50610b3c836102be565b875163095ea7b360e01b81526001600160a01b038716600482015260248101889052918391839160449183918d91165af18015610c0b5792610ba697969492899694928793610bed575b505086516338ed173960e01b8152978895869485933392600486016102ea565b03925af1908115610be45750610bc1575b8080808080610adb565b610bdc913d8091833e610bd481836101ad565b8101906101cf565b503880610bb7565b513d84823e3d90fd5b81610c0392903d106108305761082181836101ad565b503880610b86565b87513d8a823e3d90fd5b610c2b90833d85116108305761082181836101ad565b5038610b32565b88513d8b823e3d90fd5b634e487b7160e01b87526032600452602487fd5b610c6491503d808b833e610bd481836101ad565b38610acf565b939492806110c7575b50506040805163c45a015560e01b815290956004956001600160a01b039586169350909160209081818981885afa908115610f57576000916110aa575b50851561109557610cc0836102be565b9560011015611095578189610d1392828601988a8c610cde8c6102be565b945163e6a4390560e01b81526001600160a01b0393841691810191825292909416602085015290948593849291839160400190565b0392165afa908115610f5757908791600091611078575b5016885193630240bc6b60e21b85526060858a81855afa8015610f7f57898b916000978891611053575b5087938682945180946318160ddd60e01b825281895afa92831561104857600093611017575b50610d8e83670de0b6b3a764000092610391565b04978d516370a0823160e01b81528d339082015287816024818a5afa90811561100c57600091610fdf575b50808a11610fd7575b508d8d88610dcf8b6102be565b9251630dfe168160e01b8152918290818b5afa908115610fcb578e918291600091610fae575b5016911603610f9e575b50506105e5610e299293610e21836105e56001600160701b038094168c610391565b941688610391565b9015908115610f95575b50610f8a5788516323b872dd60e01b8152338982019081523060208201526040810186905283908290819060600103816000865af18015610f7f57610eb4928760008c8e88968b96610f62575b505163095ea7b360e01b81526001600160a01b03909316908301908152602081019490945290948593849291839160400190565b03925af18015610f575796610ee4610ede60009560e49895849a98958e9c610f39575b50506102be565b956102be565b8851998a988997635d5155ef60e11b8952169087015216602485015260448401528160648401528160848401523360a4840152811960c48401525af18015610f2e576107d8575050565b82513d6000823e3d90fd5b81610f4f92903d106108305761082181836101ad565b503880610ed7565b89513d6000823e3d90fd5b610f7890883d8a116108305761082181836101ad565b5038610e80565b8a513d6000823e3d90fd5b505050505050505050565b90501538610e33565b90935091506105e5610e29610dff565b610fc591508b3d8d116109fd576109ef81836101ad565b38610df5565b508f513d6000823e3d90fd5b985038610dc2565b908882813d8311611005575b610ff581836101ad565b810103126108d057505138610db9565b503d610feb565b8f513d6000823e3d90fd5b90928782813d8311611041575b61102e81836101ad565b810103126108d057505191610d8e610d7a565b503d611024565b8e513d6000823e3d90fd5b905061106e91975060603d8111610a3157610a1f81836101ad565b5096909638610d54565b61108f9150833d85116109fd576109ef81836101ad565b38610d2a565b603288634e487b7160e01b6000525260246000fd5b6110c19150823d84116109fd576109ef81836101ad565b38610cb0565b6040805163d06ca61f60e01b8152600481018390526024810182905260009491936001600160a01b03888116939287818061110660448201888861024b565b0381885afa908115610c0b5790611123918991610c505750610298565b51611132575b50505050610c73565b8215610c3c5780611142836102be565b87516323b872dd60e01b8152336004820152306024820152604481018890526020939290918491839160649183918e91165af18015610c3257611229575b5061118a836102be565b875163095ea7b360e01b81526001600160a01b038716600482015260248101889052918391839160449183918d91165af18015610c0b57926111f397969492899694928793610bed57505086516338ed173960e01b8152978895869485933392600486016102ea565b03925af1908115610be4575061120e575b8080808080611129565b611221913d8091833e610bd481836101ad565b503880611204565b61123f90833d85116108305761082181836101ad565b503861118056fea2646970667358221220f422ed79529dc0eef30d0df79eb32c952b3c7a9e1164d9f8c2c0cee42a46628964736f6c63430008120033";

type SynchronizationBotLensConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SynchronizationBotLensConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SynchronizationBotLens__factory extends ContractFactory {
  constructor(...args: SynchronizationBotLensConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SynchronizationBotLens & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SynchronizationBotLens__factory {
    return super.connect(runner) as SynchronizationBotLens__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SynchronizationBotLensInterface {
    return new Interface(_abi) as SynchronizationBotLensInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SynchronizationBotLens {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SynchronizationBotLens;
  }
}
