/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISynchronizationBotLensQuickswapTestService,
  ISynchronizationBotLensQuickswapTestServiceInterface,
} from "../../../../contracts/TestnetServices/interfaces/ISynchronizationBotLensQuickswapTestService";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAlgebraPool[]",
        name: "pools",
        type: "address[]",
      },
    ],
    name: "getArraySqrtPriceX96",
    outputs: [
      {
        internalType: "uint160[]",
        name: "arraySqrtPriceX96",
        type: "uint160[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
    ],
    name: "getUserBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "nativeBalance",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "assetsBalances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISwapRouter",
        name: "_swapRouterQuickswap",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMinimum",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "limitSqrtPrice",
            type: "uint160",
          },
        ],
        internalType: "struct ISwapRouter.ExactInputSingleParams[]",
        name: "params",
        type: "tuple[]",
      },
    ],
    name: "swapWithQuickswap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ISynchronizationBotLensQuickswapTestService__factory {
  static readonly abi = _abi;
  static createInterface(): ISynchronizationBotLensQuickswapTestServiceInterface {
    return new Interface(
      _abi
    ) as ISynchronizationBotLensQuickswapTestServiceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ISynchronizationBotLensQuickswapTestService {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ISynchronizationBotLensQuickswapTestService;
  }
}
