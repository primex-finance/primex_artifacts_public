/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISynchronizationBotLens,
  ISynchronizationBotLensInterface,
} from "../../../../contracts/TestnetServices/interfaces/ISynchronizationBotLens";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "_uniswapV2Router02",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_swapPath",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_swapAmount",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_liquidityPath",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_liquidityAmounts",
        type: "uint256[]",
      },
    ],
    name: "swapAndAddLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "_uniswapV2Router02",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_swapPath",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_swapAmount",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_liquidityPath",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_liquidityK",
        type: "uint256",
      },
    ],
    name: "swapAndRemoveLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ISynchronizationBotLens__factory {
  static readonly abi = _abi;
  static createInterface(): ISynchronizationBotLensInterface {
    return new Interface(_abi) as ISynchronizationBotLensInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ISynchronizationBotLens {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ISynchronizationBotLens;
  }
}
