/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PriceFeedUpdaterTestService,
  PriceFeedUpdaterTestServiceInterface,
} from "../../../contracts/TestnetServices/PriceFeedUpdaterTestService";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
      {
        internalType: "contract IDexAdapter",
        name: "_dexAdapter",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_routers",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_UPDATER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRouter",
        type: "address",
      },
    ],
    name: "addRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "contract PrimexAggregatorV3TestService",
            name: "priceFeed",
            type: "address",
          },
        ],
        internalType: "struct IPriceFeedUpdaterTestService.PriceFeed[]",
        name: "_priceFeeds",
        type: "tuple[]",
      },
    ],
    name: "checkArrayPriceFeed",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isNeedUpdate",
            type: "bool",
          },
          {
            internalType: "contract PrimexAggregatorV3TestService",
            name: "priceFeed",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastAverageDexPrice",
            type: "uint256",
          },
        ],
        internalType: "struct IPriceFeedUpdaterTestService.PriceFeedStatus[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "contract PrimexAggregatorV3TestService",
            name: "priceFeed",
            type: "address",
          },
        ],
        internalType: "struct IPriceFeedUpdaterTestService.PriceFeed",
        name: "_priceFeed",
        type: "tuple",
      },
    ],
    name: "checkPriceFeed",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isNeedUpdate",
            type: "bool",
          },
          {
            internalType: "contract PrimexAggregatorV3TestService",
            name: "priceFeed",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastAverageDexPrice",
            type: "uint256",
          },
        ],
        internalType: "struct IPriceFeedUpdaterTestService.PriceFeedStatus",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "deleteRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dexAdapter",
    outputs: [
      {
        internalType: "contract IDexAdapter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "divider",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouters",
    outputs: [
      {
        internalType: "address[]",
        name: "_routers",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "routers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_divider",
        type: "uint256",
      },
    ],
    name: "setDivider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract PrimexAggregatorV3TestService[]",
        name: "_priceFeeds",
        type: "address[]",
      },
      {
        internalType: "int256[]",
        name: "_newAnswers",
        type: "int256[]",
      },
    ],
    name: "updateArrayPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract PrimexAggregatorV3TestService",
        name: "_priceFeed",
        type: "address",
      },
      {
        internalType: "int256",
        name: "_newAnswer",
        type: "int256",
      },
    ],
    name: "updatePriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060409080825234620003185762001d42803803809162000022828562000333565b833981019160608284031262000318576200003d8262000357565b6020838101516001600160a01b0380821694939092918590036200031857858401516001600160401b03968782116200031857019680601f8901121562000318578751918783116200031d5760059183831b99875194620000a1878d018762000333565b85528585019086829c820101928311620003185786809101915b838310620002fd57505050506103e86003558551986301ffc9a760e01b8a52600497633603f73360e21b898c015260249a86818d81855afa908115620002f257600091620002ae575b5080620002a2575b156200016a57600280546001600160a01b03191691909117905560005b84518110156200017a57868682861b8701015116156200016a576000198114620001565760010162000129565b8a60118a634e487b7160e01b600052526000fd5b875163044aa57560e41b81528990fd5b50915091928789888896519283116200028f576801000000000000000083116200028f575050600192835482855580831062000262575b50836000528260002060005b8381106200024e57876200020188888860008052600081528460002033600052815260ff856000205416156200020f575b5050620001fb336200036c565b6200036c565b5161191590816200040d8239f35b600080526000815284600020903360005252836000209060ff198254161790553333600060008051602062001d228339815191528180a48380620001ee565b8251891682820155918401918501620001bd565b8460005284838560002092830192015b82811062000282575050620001b1565b6000815501859062000272565b604190634e487b7160e01b600052526000fd5b5086831615156200010c565b8781813d8311620002ea575b620002c6818362000333565b81010312620002e65751908115158203620002e357503862000104565b80fd5b5080fd5b503d620002ba565b89513d6000823e3d90fd5b81906200030a8462000357565b8152019101908690620000bb565b600080fd5b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b038211908210176200031d57604052565b51906001600160a01b03821682036200031857565b6001600160a01b031660008181527f99e15419caea3598178195971cff7833eb642fd16bea7546aa6e6c7ef025eaa960205260408120549091907f24347d768d4202b6bad3554ec3a76e4890897d84c50aad8a7bf8e604c25912f39060ff1615620003d657505050565b808352826020526040832082845260205260408320600160ff1982541617905560008051602062001d22833981519152339380a456fe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a714610adf575081630a5ebfeb14610a4d578163212858bd146109ad578163248a9ca31461098357816324ca984e146108e45781632f2ff15d1461083957816336568abe146107a7578163378efa37146107885781633b6921ce146105da5781634e9c1118146105965781636b13087f146104bd57816379a39a4114610482578163893fe0be1461044957816391d148541461040457816391f03efd146103db578163a217fddf146103c0578163a48d9b4c146101f5578163d547741f146101b3575063f88c31ce146100f657600080fd5b346101af57816003193601126101af5780516001805480835281855260208084019592939186907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690855b8181106101935750505082610157910383610b94565b8451948186019282875251809352850195925b8281106101775785870386f35b83516001600160a01b031687529581019592810192840161016a565b82546001600160a01b0316845292840192918701918701610141565b5080fd5b919050346101f157806003193601126101f1576101ee91356101e960016101d8610bcc565b938387528660205286200154610f9a565b6110ec565b80f35b8280fd5b9050346101f157602091826003193601126103bc5781359167ffffffffffffffff83116103b857366023840112156103b8578201359061023482610bf6565b9261024182519485610b94565b82845284840160246060809502830101913683116103b457602401905b8282106103645750505082519361027485610bf6565b9461028183519687610b94565b808652610290601f1991610bf6565b0181875b82811061034e57505050855b84518110156102e057806102c06102ba6102db93886112b3565b516112e7565b6102ca82896112b3565b526102d581886112b3565b5061128e565b6102a0565b508151818152855181830181905290938493840192878101929189905b83821061030a5786860387f35b91849650828661033e60019496988498516040809180511515845260018060a01b0360208201511660208501520151910152565b01960192018695949293916102fd565b61035661126f565b82828a010152018290610294565b84823603126103af57868591855161037b81610b5c565b61038485610be2565b8152610391838601610be2565b838201526103a0878601610be2565b8782015281520191019061025e565b600080fd5b8780fd5b8480fd5b8380fd5b5050346101af57816003193601126101af5751908152602090f35b5050346101af57816003193601126101af5760025490516001600160a01b039091168152602090f35b9050346101f157816003193601126101f15781602093610422610bcc565b92358152808552209060018060a01b0316600052825260ff81600020541690519015158152f35b9050346101f15760203660031901126101f157803591610467610e76565b821561047557505060035580f35b516316922b2560e01b8152fd5b5050346101af57816003193601126101af57602090517f24347d768d4202b6bad3554ec3a76e4890897d84c50aad8a7bf8e604c25912f38152f35b919050346101f15760203660031901126101f1578135916104dc610e76565b60015491828410156105895750600019918083019081116105765761050f61050661053a92610c0e565b91905495610c0e565b81546001600160a01b03600392831b81811b199092169490921b9790971c811690961b919091179055565b6001549081156105635750019061055082610c0e565b909182549160031b1b1916905560015580f35b634e487b7160e01b855260319052602484fd5b634e487b7160e01b855260118252602485fd5b5163fc7d666760e01b8152fd5b9050346101f15760203660031901126101f15735916001548310156105d757506105c1602092610c0e565b905491519160018060a01b039160031b1c168152f35b80fd5b9050346101f157816003193601126101f15780359167ffffffffffffffff918284116103b857366023850112156103b8578381013561061881610bf6565b9461062584519687610b94565b8186526020908187016024809460051b830101913683116107685784849101915b8383106107705750505050813594851161076c573660238601121561076c57848301359461067386610bf6565b9561068086519788610b94565b808752838388019160051b83010191368311610768578401905b82821061075957505050506106ad610c5b565b845184510361074a57908591825b8651811015610746576001600160a01b036106d682896112b3565b51166106e282886112b3565b51813b1561074257859184839289519485938492631324279b60e31b84528a8401525af1801561073857908591610724575b505061071f9061128e565b6106bb565b61072d90610b32565b6103bc578338610714565b86513d87823e3d90fd5b8580fd5b8380f35b5090516333bfdcb360e21b8152fd5b8135815290830190830161069a565b8980fd5b8680fd5b819061077b84610be2565b8152019101908390610646565b5050346101af57816003193601126101af576020906003549051908152f35b839150346101af57826003193601126101af576107c2610bcc565b90336001600160a01b038316036107de57906101ee91356110ec565b608490602085519162461bcd60e51b8352820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152fd5b9050346101f157816003193601126101f1573590610855610bcc565b908284528360205261086c60018286200154610f9a565b828452836020528084209160018060a01b0316918260005260205260ff81600020541615610898578380f35b8284528360205280842082600052602052600020600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8480a43880808380f35b8383346101af5760203660031901126101af576108ff610bb6565b90610908610e76565b6001600160a01b038216156109745750600154926801000000000000000084101561096157506109428360016101ee949501600155610c0e565b90919082549060031b9160018060a01b03809116831b921b1916179055565b634e487b7160e01b835260419052602482fd5b5163044aa57560e41b81528390fd5b9050346101f15760203660031901126101f157816020936001923581528085522001549051908152f35b919050346101f157806003193601126101f1576109c8610bb6565b602435906109d4610c5b565b8115610a3e576001600160a01b0316928315610a3057908491843b156101f1576024908385519687948593631324279b60e31b85528401525af1908115610a275750610a1e575080f35b6101ee90610b32565b513d84823e3d90fd5b825163044aa57560e41b8152fd5b505051633abe877f60e11b8152fd5b8284346105d75760603660031901126105d757815192610a6c84610b5c565b6001600160a01b0391903582811681036101af57845260243582811681036101af57602085015260443591821682036105d75750610ab383610add928460609601526112e7565b91518251151581526020808401516001600160a01b03169082015260409283015192810192909252565bf35b8491346101f15760203660031901126101f1573563ffffffff60e01b81168091036101f15760209250637965db0b60e01b8114908115610b21575b5015158152f35b6301ffc9a760e01b14905083610b1a565b67ffffffffffffffff8111610b4657604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610b4657604052565b6080810190811067ffffffffffffffff821117610b4657604052565b90601f8019910116810190811067ffffffffffffffff821117610b4657604052565b600435906001600160a01b03821682036103af57565b602435906001600160a01b03821682036103af57565b35906001600160a01b03821682036103af57565b67ffffffffffffffff8111610b465760051b60200190565b600154811015610c455760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b634e487b7160e01b600052603260045260246000fd5b3360009081527f99e15419caea3598178195971cff7833eb642fd16bea7546aa6e6c7ef025eaa9602090815260408083205490927f24347d768d4202b6bad3554ec3a76e4890897d84c50aad8a7bf8e604c25912f39160ff1615610cbf5750505050565b610cc833611171565b91845190610cd582610b78565b60428252848201926060368537825115610e625760308453825190600191821015610e625790607860218501536041915b818311610df457505050610db2576048610dae938693610d9293610d83985198899376020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8a860152610d5a815180928c6037890191016110a4565b8401917001034b99036b4b9b9b4b733903937b6329607d1b6037840152518093868401906110a4565b01036028810187520185610b94565b5192839262461bcd60e51b8452600484015260248301906110c7565b0390fd5b60648486519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015610e4e576f181899199a1a9b1b9c1cb0b131b232b360811b901a610e248587611160565b5360041c928015610e3a57600019019190610d06565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602090815260408083205490929060ff1615610eb857505050565b610ec133611171565b9080845190610ecf82610b78565b60428252848201926060368537825115610e625760308453825190600191821015610e625790607860218501536041915b818311610f5457505050610db2576048610dae938693610d9293610d83985198899376020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8a860152610d5a815180928c6037890191016110a4565b909192600f81166010811015610e4e576f181899199a1a9b1b9c1cb0b131b232b360811b901a610f848587611160565b5360041c928015610e3a57600019019190610f00565b600090808252602090828252604092838120338252835260ff848220541615610fc35750505050565b610fcc33611171565b91845190610fd982610b78565b60428252848201926060368537825115610e625760308453825190600191821015610e625790607860218501536041915b81831161105e57505050610db2576048610dae938693610d9293610d83985198899376020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8a860152610d5a815180928c6037890191016110a4565b909192600f81166010811015610e4e576f181899199a1a9b1b9c1cb0b131b232b360811b901a61108e8587611160565b5360041c928015610e3a5760001901919061100a565b60005b8381106110b75750506000910152565b81810151838201526020016110a7565b906020916110e0815180928185528580860191016110a4565b601f01601f1916010190565b9060009180835282602052604083209160018060a01b03169182845260205260ff60408420541661111c57505050565b80835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4565b908151811015610c45570160200190565b6040519061117e82610b5c565b602a8252602082016040368237825115610c4557603090538151600190811015610c4557607860218401536029905b8082116112015750506111bd5790565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f8116601081101561125a576f181899199a1a9b1b9c1cb0b131b232b360811b901a6112308486611160565b5360041c9180156112455760001901906111ad565b60246000634e487b7160e01b81526011600452fd5b60246000634e487b7160e01b81526032600452fd5b6040519061127c82610b5c565b60006040838281528260208201520152565b600019811461129d5760010190565b634e487b7160e01b600052601160045260246000fd5b8051821015610c455760209160051b010190565b81156112d1570490565b634e487b7160e01b600052601260045260246000fd5b906112f061126f565b5081516001600160a01b03161515806118c9575b806118b3575b156118a1576000809260405161131f81610b5c565b60028152604036602083013760018060a01b0382511681511561188d57602082015260018060a01b0360208301511681516001101561188d576040820152825b6001548110156117a9576002546001600160a01b0316600061138083610c0e565b905460405163c2909fed60e01b815260039290921b1c6001600160a01b03166004820152602081602481865afa90811561179e578291611763575b5060098110158061174f57600182148015611743575b1561171b5750505060005b6113e583610c0e565b905460405163340f07ad60e11b815260a06004820152865160a48201819052909392849260c484019260039290921b1c6001600160a01b03169060208901906000905b8082106116f65750505090600093839260248401526044830152856064830152836084830152038173__$75df3f6366b0557754cd3ba14359105414$__5af490811561164857600091611654575b50845160405163313ce56760e01b815290602090829060049082906001600160a01b03165afa9081156116485760009161160c575b5090604d60ff83161161129d576114cd60609260ff6003549116600a0a6112c7565b9261153760006114dc87610c0e565b905460405160039290921b1c6001600160a01b0316946114fb82610b5c565b815260208101968752604081019485526040519687958694859363eb5251a560e01b8552602060048601525189602486015260848501906110c7565b91516044840152516001600160a01b0316606483015203925af160009181611593575b5061156e57506115699061128e565b61135f565b602090969491960151810180911161129d5761158d611569919461128e565b9561128e565b90916060903d606011611604575b6115ab8284610b94565b60608383810103126105d757818301601f840112156105d757604051926115d184610b5c565b83916060820193820184116105d75750905b8282106115f457505050903861155a565b81518152602091820191016115e3565b3d91506115a1565b6020813d602011611640575b8161162560209383610b94565b810103126101af57519060ff821682036105d75750386114ab565b3d9150611618565b6040513d6000823e3d90fd5b903d918282823e6116658382610b94565b60208184810103126101af57805167ffffffffffffffff928382116105d757848301601f8385010112156105d757818301519384116116e257604051946116b6601f8601601f191660200187610b94565b84865283016020858486010101116105d757509060206116dc93928186019201016110a4565b38611476565b634e487b7160e01b81526041600452602490fd5b82516001600160a01b0316855287955060209485019490920191600190910190611428565b61172f576002036113dc5750610bb86113dc565b634e487b7160e01b82526021600452602482fd5b505081600382146113d1565b634e487b7160e01b83526021600452602483fd5b90506020813d602011611796575b8161177e60209383610b94565b810103126101af575160098110156101af57386113bb565b3d9150611771565b6040513d84823e3d90fd5b5050919290811561187b5760406117be61126f565b930180516001600160a01b031660208501526003549092828202929091811591840414171561129d576117f0916112c7565b60648102908082046064149015171561129d576040838101918252915191516350d25bcd60e01b815291602090839060049082906001600160a01b03165afa91821561164857600092611847575b50511415815290565b90916020823d602011611873575b8161186260209383610b94565b810103126105d7575051903861183e565b3d9150611855565b604051631cd2ea6f60e11b8152600490fd5b634e487b7160e01b84526032600452602484fd5b60405163044aa57560e41b8152600490fd5b5060408201516001600160a01b0316151561130a565b5060208201516001600160a01b0316151561130456fea26469706673582212202a80827192ab38103db3f75bcb720eec68d41a1893e3000635ae717cdac29fc964736f6c634300081200332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d";

type PriceFeedUpdaterTestServiceConstructorParams =
  | [
      linkLibraryAddresses: PriceFeedUpdaterTestServiceLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceFeedUpdaterTestServiceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PriceFeedUpdaterTestService__factory extends ContractFactory {
  constructor(...args: PriceFeedUpdaterTestServiceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PriceFeedUpdaterTestService__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PriceFeedUpdaterTestServiceLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$75df3f6366b0557754cd3ba14359105414\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _updater: AddressLike,
    _dexAdapter: AddressLike,
    _routers: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _updater,
      _dexAdapter,
      _routers,
      overrides || {}
    );
  }
  override deploy(
    _updater: AddressLike,
    _dexAdapter: AddressLike,
    _routers: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _updater,
      _dexAdapter,
      _routers,
      overrides || {}
    ) as Promise<
      PriceFeedUpdaterTestService & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PriceFeedUpdaterTestService__factory {
    return super.connect(runner) as PriceFeedUpdaterTestService__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceFeedUpdaterTestServiceInterface {
    return new Interface(_abi) as PriceFeedUpdaterTestServiceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PriceFeedUpdaterTestService {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PriceFeedUpdaterTestService;
  }
}

export interface PriceFeedUpdaterTestServiceLibraryAddresses {
  ["contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"]: string;
}
