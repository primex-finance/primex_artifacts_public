/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PriceFeedUpdaterTestService,
  PriceFeedUpdaterTestServiceInterface,
} from "../../../contracts/TestnetServices/PriceFeedUpdaterTestService";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
      {
        internalType: "contract IDexAdapter",
        name: "_dexAdapter",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_routers",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_UPDATER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRouter",
        type: "address",
      },
    ],
    name: "addRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "contract PrimexAggregatorV3TestService",
            name: "priceFeed",
            type: "address",
          },
        ],
        internalType: "struct IPriceFeedUpdaterTestService.PriceFeed[]",
        name: "_priceFeeds",
        type: "tuple[]",
      },
    ],
    name: "checkArrayPriceFeed",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isNeedUpdate",
            type: "bool",
          },
          {
            internalType: "contract PrimexAggregatorV3TestService",
            name: "priceFeed",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastAverageDexPrice",
            type: "uint256",
          },
        ],
        internalType: "struct IPriceFeedUpdaterTestService.PriceFeedStatus[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "contract PrimexAggregatorV3TestService",
            name: "priceFeed",
            type: "address",
          },
        ],
        internalType: "struct IPriceFeedUpdaterTestService.PriceFeed",
        name: "_priceFeed",
        type: "tuple",
      },
    ],
    name: "checkPriceFeed",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isNeedUpdate",
            type: "bool",
          },
          {
            internalType: "contract PrimexAggregatorV3TestService",
            name: "priceFeed",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastAverageDexPrice",
            type: "uint256",
          },
        ],
        internalType: "struct IPriceFeedUpdaterTestService.PriceFeedStatus",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "deleteRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dexAdapter",
    outputs: [
      {
        internalType: "contract IDexAdapter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "divider",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouters",
    outputs: [
      {
        internalType: "address[]",
        name: "_routers",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "routers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_divider",
        type: "uint256",
      },
    ],
    name: "setDivider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract PrimexAggregatorV3TestService[]",
        name: "_priceFeeds",
        type: "address[]",
      },
      {
        internalType: "int256[]",
        name: "_newAnswers",
        type: "int256[]",
      },
    ],
    name: "updateArrayPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract PrimexAggregatorV3TestService",
        name: "_priceFeed",
        type: "address",
      },
      {
        internalType: "int256",
        name: "_newAnswer",
        type: "int256",
      },
    ],
    name: "updatePriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461030f57611b44803803809161001c8285610314565b8339810160608282031261030f5761003382610337565b60208301516001600160a01b038116939084900361030f576040810151906001600160401b03821161030f57019282601f8501121561030f578351926001600160401b038411610281578360051b94604051946100936020880187610314565b855260208501906020829782010192831161030f57602001905b8282106102f75750506103e8600355506040516301ffc9a760e01b8152633603f73360e21b6004820152602081602481855afa9081156102eb576000916102a9575b5080610297575b1561013c57600280546001600160a01b03191691909117905560005b825181101561014e57600581901b8301602001516001600160a01b03161561013c57600101610112565b60405163044aa57560e41b8152600490fd5b50905190916001600160401b03821161028157680100000000000000008211610281576001548260015580831061023b575b506001600052602060002060005b83811061021e57336000908152600080516020611b2483398151915260205260409020546101cf90869060ff16156101de575b6101ca3361034b565b61034b565b6040516116ff90816103e58239f35b336000818152600080516020611b2483398151915260205260408120805460ff191660011790558190600080516020611ae48339815191528180a46101c1565b82516001600160a01b03168183015560209092019160010161018e565b60016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69081019083015b8181106102755750610180565b60008155600101610268565b634e487b7160e01b600052604160045260246000fd5b506001600160a01b03821615156100f6565b6020813d6020116102e3575b816102c260209383610314565b810103126102df57519081151582036102dc5750386100ef565b80fd5b5080fd5b3d91506102b5565b6040513d6000823e3d90fd5b6020809161030484610337565b8152019101906100ad565b600080fd5b601f909101601f19168101906001600160401b0382119082101761028157604052565b51906001600160a01b038216820361030f57565b6001600160a01b0381166000908152600080516020611b04833981519152602052604090205460ff161561037c5750565b6001600160a01b03166000818152600080516020611b0483398151915260205260408120805460ff191660011790553391907f24347d768d4202b6bad3554ec3a76e4890897d84c50aad8a7bf8e604c25912f390600080516020611ae48339815191529080a456fe608080604052600436101561001357600080fd5b600090813560e01c90816301ffc9a714610b13575080630a5ebfeb14610a7b578063212858bd146109da578063248a9ca3146109a457806324ca984e146109255780632f2ff15d1461086257806336568abe146107cf578063378efa37146107b15780633b6921ce146105fc5780634e9c1118146105b85780636b13087f146104cf57806379a39a4114610494578063893fe0be1461045957806391d148541461040e57806391f03efd146103e5578063a217fddf146103c9578063a48d9b4c14610205578063d547741f146101bc5763f88c31ce146100f257600080fd5b346101b957806003193601126101b95760405180602060015491828152018091600185527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690855b81811061019a5750505082610150910383610b9a565b604051928392602084019060208552518091526040840192915b818110610178575050500390f35b82516001600160a01b031684528594506020938401939092019160010161016a565b82546001600160a01b031684526020909301926001928301920161013a565b80fd5b50346101b95760403660031901126101b9576102026004356101dc610bd7565b906101fd6101f882600052600060205260016040600020015490565b61140c565b61144a565b80f35b50346101b95760203660031901126101b95760043567ffffffffffffffff81116103c557366023820112156103c557806004013561024281610c01565b916102506040519384610b9a565b81835260246060602085019302820101903682116103c157602401915b8183106103705750505080519061028382610c01565b916102916040519384610b9a565b8083526102a0601f1991610c01565b01835b818110610359575050825b81518110156102e957806102cd6102c760019385610c69565b51610d01565b6102d78286610c69565b526102e28185610c69565b50016102ae565b505090604051918291602083016020845282518091526020604085019301915b818110610317575050500390f35b91935091602060608261034b60019488516040809180511515845260018060a01b0360208201511660208501520151910152565b019401910191849392610309565b602090610364610c4a565b828287010152016102a3565b6060833603126103c157602060609160405161038b81610b68565b61039486610bed565b81526103a1838701610bed565b838201526103b160408701610bed565b604082015281520192019161026d565b8480fd5b5080fd5b50346101b957806003193601126101b957602090604051908152f35b50346101b957806003193601126101b9576002546040516001600160a01b039091168152602090f35b50346101b95760403660031901126101b957604061042a610bd7565b91600435815280602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b50346101b95760203660031901126101b9576004356104766113b8565b80156104825760035580f35b6040516316922b2560e01b8152600490fd5b50346101b957806003193601126101b95760206040517f24347d768d4202b6bad3554ec3a76e4890897d84c50aad8a7bf8e604c25912f38152f35b50346101b95760203660031901126101b9576004356104ec6113b8565b600154808210156105a6576000198101908111610592579061052b61051361054f93610c19565b905460039190911b1c6001600160a01b031691610c19565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b600154801561057e576000190161056581610c19565b81549060018060a01b039060031b1b1916905560015580f35b634e487b7160e01b82526031600452602482fd5b634e487b7160e01b83526011600452602483fd5b60405163fc7d666760e01b8152600490fd5b50346101b95760203660031901126101b957600435906001548210156101b95760206105e383610c19565b905460405160039290921b1c6001600160a01b03168152f35b50346101b95760403660031901126101b95760043567ffffffffffffffff81116103c557366023820112156103c55780600401359061063a82610c01565b916106486040519384610b9a565b8083526024602084019160051b830101913683116103c157602401905b8282106107995750505060243567ffffffffffffffff811161076057366023820112156107605780600401359061069b82610c01565b916106a96040519384610b9a565b8083526024602084019160051b8301019136831161079557602401905b828210610785575050506106d861129f565b8151815103610773578290815b835181101561076f576001600160a01b036107008286610c69565b511661070c8284610c69565b51813b156103c1578491602483926040519485938492631324279b60e31b845260048401525af190811561076457849161074b575b50506001016106e5565b8161075591610b9a565b610760578238610741565b8280fd5b6040513d86823e3d90fd5b8280f35b6040516333bfdcb360e21b8152600490fd5b81358152602091820191016106c6565b8580fd5b602080916107a684610bed565b815201910190610665565b50346101b957806003193601126101b9576020600354604051908152f35b50346101b95760403660031901126101b9576107e9610bd7565b336001600160a01b03821603610805576102029060043561144a565b60405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b50346101b95760403660031901126101b95760043561087f610bd7565b9061089b6101f882600052600060205260016040600020015490565b808352602083815260408085206001600160a01b0385166000908152925290205460ff16156108c8578280f35b808352602083815260408085206001600160a01b0394909416600081815294909252909220805460ff191660011790553391907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8480a438808280f35b50346101b95760203660031901126101b95761093f610bbc565b6109476113b8565b6001600160a01b03811615610992576001546801000000000000000081101561097e579061052b8260016102029401600155610c19565b634e487b7160e01b83526041600452602483fd5b60405163044aa57560e41b8152600490fd5b50346101b95760203660031901126101b95760206109d2600435600052600060205260016040600020015490565b604051908152f35b50346101b95760403660031901126101b9576109f4610bbc565b60243590610a0061129f565b8115610a69576001600160a01b03168015610992578291813b15610a65578291602483926040519586938492631324279b60e31b845260048401525af18015610a5857610a4a5780f35b610a5391610b9a565b388180f35b50604051903d90823e3d90fd5b5050fd5b604051633abe877f60e11b8152600490fd5b50346101b95760603660031901126101b95760405190610a9a82610b68565b6004356001600160a01b03811681036103c55782526024356001600160a01b03811681036103c5576020830152604435906001600160a01b03821682036101b9576060610aec84846040820152610d01565b604080518251151581526020808401516001600160a01b0316908201529181015190820152f35b9050346103c55760203660031901126103c55760043563ffffffff60e01b81168091036107605760209250637965db0b60e01b8114908115610b57575b5015158152f35b6301ffc9a760e01b14905038610b50565b6060810190811067ffffffffffffffff821117610b8457604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610b8457604052565b600435906001600160a01b0382168203610bd257565b600080fd5b602435906001600160a01b0382168203610bd257565b35906001600160a01b0382168203610bd257565b67ffffffffffffffff8111610b845760051b60200190565b600154811015610c3457600160005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60405190610c5782610b68565b60006040838281528260208201520152565b8051821015610c345760209160051b010190565b67ffffffffffffffff8111610b8457601f01601f191660200190565b60005b838110610cac5750506000910152565b8181015183820152602001610c9c565b8115610cc6570490565b634e487b7160e01b600052601260045260246000fd5b90602091610cf581518092818552858086019101610c99565b601f01601f1916010190565b90610d0a610c4a565b5081516001600160a01b0316151580611289575b80611273575b1561099257600080926060604051610d3c8282610b9a565b600281526020810192601f19830136853760018060a01b03815116825115610c3457845260018060a01b03602082015116825160011015610c3457604083015273__$75df3f6366b0557754cd3ba14359105414$__60005b60015481101561118b576002546001600160a01b03166000610db583610c19565b905460405163c2909fed60e01b815260039290921b1c6001600160a01b03166004820152602081602481865afa90811561106e57600091611151575b5060098110158061112e57600182148015611144575b1561111a5750505060005b610e1b83610c19565b905460405163340f07ad60e11b815260a06004820152885160a48201819052909392849260c484019260039290921b1c6001600160a01b0316908c906000905b8082106110f557505050906000938392602484015260448301528560648301528360848301520381875af490811561106e5760009161107a575b50845160405163313ce56760e01b815290602090829060049082906001600160a01b03165afa90811561106e57600091611032575b5060ff1690604d8211610fac57610ee8889260035490600a0a610cbc565b92610f526000610ef787610c19565b905460405160039290921b1c6001600160a01b031694610f1682610b68565b815260208101968752604081019485526040519687958694859363eb5251a560e01b855260206004860152518960248601526084850190610cdc565b91516044840152516001600160a01b0316606483015203925af160009181610fc2575b50610f8557506001905b01610d94565b6020909997919901518101809111610fac57956000198114610fac57600180910198610f7f565b634e487b7160e01b600052601160045260246000fd5b9091873d891161102b575b610fd78184610b9a565b82019088838303126101b95781601f840112156101b95760405192610ffb84610b68565b83918a82019384116101b95750905b82821061101b575050509038610f75565b815181526020918201910161100a565b503d610fcd565b6020813d8211611066575b8161104a60209383610b9a565b810103126103c557519060ff821682036101b9575060ff610eca565b3d915061103d565b6040513d6000823e3d90fd5b903d8082843e61108a8184610b9a565b8201916020818403126103c55780519067ffffffffffffffff8211610760570182601f820112156103c5578051916110c183610c7d565b936110cf6040519586610b9a565b838552602084840101116101b95750906110ef9160208085019101610c99565b38610e95565b82516001600160a01b0316855287955060209485019490920191600190910190610e5b565b61112e57600203610e125750610bb8610e12565b634e487b7160e01b600052602160045260246000fd5b5050600060038214610e07565b6020813d8211611183575b8161116960209383610b9a565b810103126103c557519060098210156101b9575038610df1565b3d915061115c565b50509495939250505081156112615760406111a4610c4a565b930180516001600160a01b0316602085015260035490928282029290918115918404141715610fac576111d691610cbc565b606481029080820460641490151715610fac576040838101918252915191516350d25bcd60e01b815291602090839060049082906001600160a01b03165afa91821561106e5760009261122d575b50511415815290565b9091506020813d602011611259575b8161124960209383610b9a565b81010312610bd257519038611224565b3d915061123c565b604051631cd2ea6f60e11b8152600490fd5b5060408201516001600160a01b03161515610d24565b5060208201516001600160a01b03161515610d1e565b3360009081527f99e15419caea3598178195971cff7833eb642fd16bea7546aa6e6c7ef025eaa9602052604090205460ff16156112d857565b6113b46112e4336114dd565b61139460116113127f24347d768d4202b6bad3554ec3a76e4890897d84c50aad8a7bf8e604c25912f361161d565b9260376040519485927f416363657373436f6e74726f6c3a206163636f756e742000000000000000000060208501526113548151809260208688019101610c99565b83017001034b99036b4b9b9b4b733903937b6329607d1b83820152611383825180936020604885019101610c99565b01010301601f198101835282610b9a565b60405162461bcd60e51b8152602060048201529182916024830190610cdc565b0390fd5b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff16156113f157565b6113b46113fd336114dd565b6113946011611312600061161d565b60008181526020818152604080832033845290915290205460ff161561142f5750565b6113b4906113946011611312611444336114dd565b9361161d565b6000818152602081815260408083206001600160a01b038616845290915290205460ff16611476575050565b6000818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4565b908151811015610c34570160200190565b6000906114ea602a610c7d565b916114f86040519384610b9a565b602a8352611506602a610c7d565b6020840190601f190136823783511561160957603090538251600110156115f5576078602184015350602960005b600182116115895750506115455790565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f811660108110156115e1576f181899199a1a9b1b9c1cb0b131b232b360811b901a6115b884866114cc565b5360041c9180156115cd576000190190611534565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b634e487b7160e01b82526032600452602482fd5b60009061162a6042610c7d565b916116386040519384610b9a565b604283526116466042610c7d565b6020840190601f190136823783511561160957603090538251600110156115f5576078602184015350604160005b600182116116855750506115455790565b9091600f811660108110156115e1576f181899199a1a9b1b9c1cb0b131b232b360811b901a6116b484866114cc565b5360041c9180156115cd57600019019061167456fea264697066735822122051294dc825a81d6f7c5d7d15987d37e75e5f99f5bc7347fa8d02ebad7c1584b764736f6c634300081a00332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d99e15419caea3598178195971cff7833eb642fd16bea7546aa6e6c7ef025eaa9ad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5";

type PriceFeedUpdaterTestServiceConstructorParams =
  | [
      linkLibraryAddresses: PriceFeedUpdaterTestServiceLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceFeedUpdaterTestServiceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PriceFeedUpdaterTestService__factory extends ContractFactory {
  constructor(...args: PriceFeedUpdaterTestServiceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PriceFeedUpdaterTestService__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PriceFeedUpdaterTestServiceLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$75df3f6366b0557754cd3ba14359105414\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _updater: AddressLike,
    _dexAdapter: AddressLike,
    _routers: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _updater,
      _dexAdapter,
      _routers,
      overrides || {}
    );
  }
  override deploy(
    _updater: AddressLike,
    _dexAdapter: AddressLike,
    _routers: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _updater,
      _dexAdapter,
      _routers,
      overrides || {}
    ) as Promise<
      PriceFeedUpdaterTestService & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PriceFeedUpdaterTestService__factory {
    return super.connect(runner) as PriceFeedUpdaterTestService__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceFeedUpdaterTestServiceInterface {
    return new Interface(_abi) as PriceFeedUpdaterTestServiceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PriceFeedUpdaterTestService {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PriceFeedUpdaterTestService;
  }
}

export interface PriceFeedUpdaterTestServiceLibraryAddresses {
  ["contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"]: string;
}
