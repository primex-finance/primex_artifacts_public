/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CurveBotLens,
  CurveBotLensInterface,
} from "../../../contracts/TestnetServices/CurveBotLens";

const _abi = [
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract ICurvePool",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "uint256[3]",
        name: "_amounts",
        type: "uint256[3]",
      },
    ],
    name: "removeAndSetLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601557610b65908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c634f826c8a1461002857600080fd5b346102d05760803660031901126102d0576004356001600160a01b03811691908290036102d05736604312156102d0576040519160606100688185610a2e565b8336608411610a2a576024905b60848210610a1a575050604051637e062a3560e11b8152602081600481865afa9081156109225784916109fb575b506040516370a0823160e01b81523360048201526001600160a01b03919091169190602081602481865afa9081156109f05785916109be575b508061080b575b5050670de0b6b3a764000093835b600381106106c0575083945b6003861061038a5750908391833b1561038657604051634515cef360e01b81529061012c906004830190610ac0565b826064820152828160848183885af190811561029257839161036d575b50506040516370a0823160e01b8152306004820152602081602481855afa908115610292578391610330575b5060405163a9059cbb60e01b815233600482015260248101919091529160209183916044918391905af1801561029257610313575b50815b600381106101b9578280f35b8260405163c661065760e01b8152826004820152602081602481875afa9081156103085782916102da575b506040516370a0823160e01b81523060048201526001600160a01b039190911690602081602481855afa90811561029257839161029d575b5060405163a9059cbb60e01b815233600482015260248101919091529192906020908390818681604481015b03925af191821561029257600192610264575b500190506101ad565b6102849060203d811161028b575b61027c8183610a2e565b810190610aa8565b508561025b565b503d610272565b6040513d85823e3d90fd5b9192505060203d81116102d3575b6102b58183610a2e565b602082600092810103126102d057505184919061024861021c565b80fd5b503d6102ab565b6102fb915060203d8111610301575b6102f38183610a2e565b810190610a66565b856101e4565b503d6102e9565b6040513d84823e3d90fd5b61032b9060203d60201161028b5761027c8183610a2e565b6101aa565b9250506020823d602011610365575b8161034c60209383610a2e565b810103126103605790518391906020610175565b600080fd5b3d915061033f565b8161037791610a2e565b610382578185610149565b5080fd5b8280fd5b60405163c661065760e01b815260048101879052602081602481885afa9081156104e45786916106a2575b50604051634903b0d160e01b815260048101889052966001600160a01b039190911690602088602481895afa97881561056e57879861066d575b506040516370a0823160e01b8152306004820152602081602481865afa90811561066257889161062f575b50670de0b6b3a76400008411610579575b610443889961043d84889b9a9b610ae8565b51610a85565b61044d8387610ae8565b526104588286610ae8565b5181106104ef575b5060206104a7926104718387610ae8565b5160405163095ea7b360e01b81526001600160a01b038b16600482015260248101919091529384919082908a9082906044820190565b03925af19182156104e4576001926104c6575b500195509392936100fd565b6104dd9060203d811161028b5761027c8183610a2e565b50386104ba565b6040513d88823e3d90fd5b9160206105036105309461043d8589610ae8565b6040516323b872dd60e01b8152336004820152306024820152604481019190915293849081906064820190565b03818a855af190811561056e576104a793602092610551575b509250610460565b61056790833d811161028b5761027c8183610a2e565b5038610549565b6040513d89823e3d90fd5b6105838286610ae8565b518890851590811561060a575b50156105fb576706f05b59d3b200008101908181116105e75781106105d8578899670de0b6b3a7640000610443929a999a046105cc8589610ae8565b5299505096959661042b565b630a77254f60e01b8952600489fd5b634e487b7160e01b8a52601160045260248afd5b631550e8b760e01b8952600489fd5b868102925090508015818304871417156105e7576106288683610b0f565b1438610590565b905060203d811161065b575b6106458183610a2e565b602082600092810103126102d05750513861041a565b503d61063b565b6040513d8a823e3d90fd5b90975060203d811161069b575b6106848183610a2e565b602082600092810103126102d057505196386103ef565b503d61067a565b6106ba915060203d8111610301576102f38183610a2e565b386103b5565b604051634903b0d160e01b815260048101829052602081602481885afa9081156104e45786916107d8575b506106f68284610ae8565b518111610707575b506001016100f1565b6107118284610ae8565b51670de0b6b3a7640000820291808304670de0b6b3a764000014811517156107c457876107b057670de0b6b3a764000083040361079f576000918160011c81019283821161078b5750821061077a5761076991610b0f565b868111156106fe57955060016106fe565b630a77254f60e01b60005260046000fd5b634e487b7160e01b81526011600452602490fd5b631550e8b760e01b60005260046000fd5b634e487b7160e01b88526012600452602488fd5b634e487b7160e01b88526011600452602488fd5b905060203d8111610804575b6107ee8183610a2e565b602082600092810103126102d0575051386106eb565b503d6107e4565b6040516318160ddd60e01b8152602081600481875afa9081156104e4579082918791610985575b500361097f57600019810190811161096b57905b81156100e3576040516323b872dd60e01b81523360048201523060248201526044810183905260208160648189885af180156104e45761094e575b5060405163095ea7b360e01b81526001600160a01b03851660048201526024810183905260208160448189885af180156104e457610931575b50604051906108c98183610a2e565b368237833b1561092d576108f4906040519263ecb586a560e01b845260048401526024830190610ac0565b838160848183875af180156109225761090e575b806100e3565b8361091b91949294610a2e565b9138610908565b6040513d86823e3d90fd5b8480fd5b6109499060203d60201161028b5761027c8183610a2e565b6108ba565b6109669060203d60201161028b5761027c8183610a2e565b610881565b634e487b7160e01b85526011600452602485fd5b90610846565b9150506020813d6020116109b6575b816109a160209383610a2e565b810103126109b25781905138610832565b8580fd5b3d9150610994565b90506020813d6020116109e8575b816109d960209383610a2e565b8101031261092d5751386100dc565b3d91506109cc565b6040513d87823e3d90fd5b610a14915060203d602011610301576102f38183610a2e565b386100a3565b8135815260209182019101610075565b8380fd5b90601f8019910116810190811067ffffffffffffffff821117610a5057604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261036057516001600160a01b03811681036103605790565b91908203918211610a9257565b634e487b7160e01b600052601160045260246000fd5b90816020910312610360575180151581036103605790565b906000905b60038210610ad257505050565b6020806001928551815201930191019091610ac5565b906003811015610af95760051b0190565b634e487b7160e01b600052603260045260246000fd5b8115610b19570490565b634e487b7160e01b600052601260045260246000fdfea2646970667358221220ed6297a70e20b56f258eecc8da8cae75f2dae51eaea1f0be30fe0701ce78ae6164736f6c634300081a0033";

type CurveBotLensConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveBotLensConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurveBotLens__factory extends ContractFactory {
  constructor(...args: CurveBotLensConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CurveBotLens & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CurveBotLens__factory {
    return super.connect(runner) as CurveBotLens__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveBotLensInterface {
    return new Interface(_abi) as CurveBotLensInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CurveBotLens {
    return new Contract(address, _abi, runner) as unknown as CurveBotLens;
  }
}
