/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Treasury,
  TreasuryInterface,
} from "../../../contracts/Treasury/Treasury";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxTotalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPercentPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeBetweenTransfers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeframeDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountDuringTimeframe",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct ITreasuryStorage.SpendingLimits",
        name: "newSpendingLimits",
        type: "tuple",
      },
    ],
    name: "MaxSpendingLimitChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferFromTreasury",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "canTransferByTime",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxTotalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPercentPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeBetweenTransfers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeframeDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountDuringTimeframe",
            type: "uint256",
          },
        ],
        internalType: "struct ITreasuryStorage.SpendingLimits",
        name: "_newSpendingLimits",
        type: "tuple",
      },
    ],
    name: "decreaseLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxTotalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPercentPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeBetweenTransfers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeframeDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountDuringTimeframe",
            type: "uint256",
          },
        ],
        internalType: "struct ITreasuryStorage.SpendingLimits",
        name: "_newSpendingLimits",
        type: "tuple",
      },
    ],
    name: "setMaxSpendingLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "spenders",
    outputs: [
      {
        internalType: "bool",
        name: "isSpenderExist",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxTotalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPercentPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeBetweenTransfers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeframeDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountDuringTimeframe",
            type: "uint256",
          },
        ],
        internalType: "struct ITreasuryStorage.SpendingLimits",
        name: "limits",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "lastWithdrawalTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawnDuringTimeframe",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "transferFromTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608080604052346100c1576000549060ff8260081c1661006f575060ff80821603610034575b60405161122690816100c78239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe6080604081815260049182361015610022575b505050361561002057600080fd5b005b600092833560e01c91826301ffc9a714610e83575081633f4ba83a14610d735781635be3ca3814610b6d5781635c975abb14610b49578163697aed1a1461095b57816376aaeb20146108d95781637b103999146108b05781638456cb59146107bf578163c4d66de8146105b6578163d3b247e41461018257508063d6d14171146101645763dde343fd146100b65780610012565b34610160578060031936011261016057610120916100d2610ed6565b826100db610ef1565b9260018060a01b03809316815260c9602052209116600052602052806000209060ff8254169160a061010f60018301610f80565b60086007840154930154938051951515865281516020870152602082015181870152810151606086015260608101516080860152608081015182860152015160c084015260e0830152610100820152f35b5080fd5b503461016057816003193601126101605760209060ca549051908152f35b919050346105b25760603660031901126105b25781356101a0610ef1565b926001600160a01b03604435818116949192908581036105ae576101c26110ce565b60026065541461056b57600260655533885260209360c9855283892097169687895284528288208515158061055d575b80610542575b80610534575b15610524577399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e881490811561049a5761023047600383015490611155565b871161048a575b61024961024382611072565b42611132565b6007820190610262825461025c85611072565b90611132565b03610460576008820180546102778a8261104f565b60068501541061045057906102908a600195949361104f565b90555b429055016102a28782546110c1565b90551561037957825167ffffffffffffffff9185820191838311818410176103645782888c94938580959481958b52525af1903d1561035e573d908111610349578351906102f9601f8201601f1916870183610f48565b815288853d92013e5b1561033b5750907f5e24750571ba267ec3e6fdb479a8d6aaf9e2a6ed458a6d8b5efc63e7125a0f40915b519283523392a4600160655580f35b905163c71509d160e01b8152fd5b604183634e487b7160e01b6000525260246000fd5b50610302565b604185634e487b7160e01b6000525260246000fd5b5073__$183737d697d7aa9b5df9988cbe11bc4947$__9087823b1561044d57606492845193848092636336129b60e11b82528b868301528a60248301528960448301525af48015610443576103f3575b5050907f5e24750571ba267ec3e6fdb479a8d6aaf9e2a6ed458a6d8b5efc63e7125a0f409161032c565b67ffffffffffffffff829893981161043057508652947f5e24750571ba267ec3e6fdb479a8d6aaf9e2a6ed458a6d8b5efc63e7125a0f40386103c9565b634e487b7160e01b835260419052602482fd5b83513d8a823e3d90fd5b80fd5b8751634eb8a6e160e11b81528790fd5b6006820154881161047a5790600191886008830155610293565b8551634eb8a6e160e11b81528590fd5b8451635f8550b160e11b81528490fd5b84516370a0823160e01b8152308582015286816024818d5afa801561051a578b906104e7575b6104d09150600383015490611155565b871115610237578451633c14e2ed60e11b81528490fd5b508681813d8311610513575b6104fd8183610f48565b8101031261050f576104d090516104c0565b8a80fd5b503d6104f3565b86513d8d823e3d90fd5b8351633fe65ba960e01b81528390fd5b5060018101548611156101fe565b506105556007820154848301549061104f565b4210156101f8565b5060028101548611156101f2565b506020606492519162461bcd60e51b8352820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b8780fd5b8280fd5b919050346105b257602090816003193601126107bb576105d4610ed6565b84549360ff8560081c1615918280936107ae575b8015610797575b1561073d5760ff198681166001178855958361072c575b5083516301ffc9a760e01b8152637965db0b60e01b818401526001600160a01b039190911691908581602481865afa9081156107225788916106f5575b50156106e757506bffffffffffffffffffffffff60a01b60cb54161760cb554260ca556106a985549460ff8660081c169061067d82610fef565b61068682610fef565b600160655561069482610fef565b61069d82610fef565b60335416603355610fef565b6106b1578380f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989261ff00191684555160018152a13880808380f35b835163044aa57560e41b8152fd5b6107159150863d881161071b575b61070d8183610f48565b810190610fd7565b38610643565b503d610703565b85513d8a823e3d90fd5b61ffff191661010117875538610606565b835162461bcd60e51b8152808301869052602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156105ef5750600160ff8716146105ef565b50600160ff8716106105e8565b8380fd5b9050346105b257826003193601126105b25760cb548251632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb8382015233602482015290602090829060449082906001600160a01b03165afa9081156108a3578491610885575b5015610877575060207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916108626110ce565b600160ff19603354161760335551338152a180f35b905163036be76f60e61b8152fd5b61089d915060203d811161071b5761070d8183610f48565b3861082f565b50505051903d90823e3d90fd5b50503461016057816003193601126101605760cb5490516001600160a01b039091168152602090f35b82843461044d578160031936011261044d5781610924916108f8610ed6565b610900610ef1565b6001600160a01b03918216835260c960209081528484209290911683525220611072565b9182511561094d575080820151602092830151606001516109449161104f565b90519042118152f35b9051631d155e5b60e11b8152fd5b9050346105b25761096b36610f07565b9160018060a09693961b03938460cb541683518091632474521560e21b8252898483015233602483015281604460209485935afa908115610b3f578991610b22575b5015610b135784359283151580610b07575b80610afb575b80610ae7575b80610ada575b80610acd575b15610abd5792610aac9492600792887f1d31acb9e47221445ed64ea1c635885c920508b65e8f6d687c24d33051072ff698961698898c5260c98252858c209a16998a8c528152848b2092600160ff19855416178455600184015585013560028301558385013560038301556060850135908201556080840135600582015560a0840135600682015501805415610ab2575b50519182918291909160a08060c083019480358452602081013560208501526040810135604085015260608101356060850152608081013560808501520135910152565b0390a380f35b60ca54905538610a68565b845163c1adf75560e01b81528390fd5b50608086013515156109d7565b5060a086013515156109d1565b50670de0b6b3a764000085870135106109cb565b508486013515156109c5565b508186013515156109bf565b50825163036be76f60e61b8152fd5b610b399150823d841161071b5761070d8183610f48565b386109ad565b85513d8b823e3d90fd5b50503461016057816003193601126101605760209060ff6033541690519015158152f35b9050346105b257610b7d36610f07565b60cb548551632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d88187015233602482015292956001600160a01b039592949093602093928490829060449082908b165afa908115610b3f578991610d56575b5015610b135785169485885260c9835283882096169586885282528287209160018301610c1181610f80565b9060ff85541615610d465786359180518311159081610d35575b81610d24575b81610d10575b81610cfc575b81610ce9575b5015610cda575584013560028301558383013560038301556060808501359183018290556080808601356005850181905560a080880135600690960186905595518735815260208089013590820152604097880135978101979097529186019290925290840152908201527f1d31acb9e47221445ed64ea1c635885c920508b65e8f6d687c24d33051072ff6908060c08101610aac565b855162ef52a760e51b81528490fd5b60a09150015160a0880135111538610c43565b905060808101516080890135101590610c3d565b905060608101516060890135101590610c37565b878101518989013511159150610c31565b848101518986013511159150610c2b565b8551631d155e5b60e11b81528490fd5b610d6d9150843d861161071b5761070d8183610f48565b38610be5565b9050346105b257826003193601126105b25760cb548251632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d88382015233602482015290602090829060449082906001600160a01b03165afa9081156108a3578491610e65575b5015610877576033549060ff821615610e2b575060ff1916603355513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b610e7d915060203d811161071b5761070d8183610f48565b38610de3565b8491346105b25760203660031901126105b2573563ffffffff60e01b81168091036105b257602092506329abf30760e11b8114908115610ec5575b5015158152f35b6301ffc9a760e01b14905083610ebe565b600435906001600160a01b0382168203610eec57565b600080fd5b602435906001600160a01b0382168203610eec57565b610100600319820112610eec576001600160a01b03916004358381168103610eec57926024359081168103610eec5760c090926043190112610eec57604490565b90601f8019910116810190811067ffffffffffffffff821117610f6a57604052565b634e487b7160e01b600052604160045260246000fd5b9060405160c0810181811067ffffffffffffffff821117610f6a5760405260a06005829480548452600181015460208501526002810154604085015260038101546060850152600481015460808501520154910152565b90816020910312610eec57518015158103610eec5790565b15610ff657565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b9190820180921161105c57565b634e487b7160e01b600052601160045260246000fd5b906040516080810181811067ffffffffffffffff821117610f6a5760405260606008829460ff815416151584526110ab60018201610f80565b6020850152600781015460408501520154910152565b9190820391821161105c57565b60ff603354166110da57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b811561111c570490565b634e487b7160e01b600052601260045260246000fd5b90608060206111476111529460ca54906110c1565b920151015190611112565b90565b9060009181159182156111b5575b5050156111a3576706f05b59d3b2000081019081811161105c57811061119157670de0b6b3a7640000900490565b604051630a77254f60e01b8152600490fd5b604051631550e8b760e01b8152600490fd5b818192935002928284048214831517156111dc57506111d49083611112565b143880611163565b634e487b7160e01b81526011600452602490fdfea2646970667358221220eb80a49f6db2396e8737215d83ef6144c9974742cd3c5b60647a48909de3e13264736f6c63430008120033";

type TreasuryConstructorParams =
  | [linkLibraryAddresses: TreasuryLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Treasury__factory extends ContractFactory {
  constructor(...args: TreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Treasury__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: TreasuryLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$183737d697d7aa9b5df9988cbe11bc4947\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Treasury & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Treasury__factory {
    return super.connect(runner) as Treasury__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryInterface {
    return new Interface(_abi) as TreasuryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Treasury {
    return new Contract(address, _abi, runner) as unknown as Treasury;
  }
}

export interface TreasuryLibraryAddresses {
  ["contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"]: string;
}
