/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IKeeperRewardDistributorV4,
  IKeeperRewardDistributorV4Interface,
} from "../../../../contracts/KeeperRewardDistributor/IKeeperRewardDistributor.sol/IKeeperRewardDistributorV4";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "additionalGas",
        type: "uint256",
      },
    ],
    name: "AdditionalGasChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "keeper",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType:
          "enum IKeeperRewardDistributorStorage.KeeperCallingMethod",
        name: "callingMethod",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxRoutesLength",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseLength",
        type: "uint256",
      },
    ],
    name: "DataLengthRestrictionsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum IKeeperRewardDistributorStorage.DecreasingReason",
        name: "reason",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DecreasingGasByReasonChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "defaultMaxGasPrice",
        type: "uint256",
      },
    ],
    name: "DefaultMaxGasPriceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "keeper",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardInPmx",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardInNativeCurrency",
        type: "uint256",
      },
    ],
    name: "KeeperRewardUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum IKeeperRewardDistributorStorage.KeeperActionType",
        name: "actionType",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "baseMaxGas1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseMaxGas2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "multiplier1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "multiplier2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inflectionPoint",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType:
          "struct IKeeperRewardDistributorStorage.KeeperActionRewardConfig",
        name: "config",
        type: "tuple",
      },
    ],
    name: "MaxGasPerPositionChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newMinPositionSizeAddend",
        type: "uint256",
      },
    ],
    name: "MinPositionSizeAddendChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "nativePartInReward",
        type: "uint256",
      },
    ],
    name: "NativePartInRewardChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newOptimismGasCoefficient",
        type: "uint256",
      },
    ],
    name: "OptimisticGasCoefficientChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "oracleGasPriceTolerance",
        type: "uint256",
      },
    ],
    name: "OracleGasPriceToleranceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pmxPartInReward",
        type: "uint256",
      },
    ],
    name: "PmxPartInRewardChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "positionSizeCoefficient",
        type: "uint256",
      },
    ],
    name: "PositionSizeCoefficientChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "additionalGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pmxAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nativeAmount",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType:
          "enum IKeeperRewardDistributorStorage.KeeperCallingMethod",
        name: "",
        type: "uint8",
      },
    ],
    name: "dataLengthRestrictions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IKeeperRewardDistributorStorage.DecreasingReason",
        name: "",
        type: "uint8",
      },
    ],
    name: "decreasingGasByReason",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultMaxGasPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGasCalculationParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "enum IKeeperRewardDistributorStorage.PaymentModel",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "priceOracle",
            type: "address",
          },
          {
            internalType: "address",
            name: "registry",
            type: "address",
          },
          {
            internalType: "address",
            name: "pmx",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "address",
            name: "whiteBlackList",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pmxPartInReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nativePartInReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionSizeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "additionalGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defaultMaxGasPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oracleGasPriceTolerance",
            type: "uint256",
          },
          {
            internalType: "enum IKeeperRewardDistributorStorage.PaymentModel",
            name: "paymentModel",
            type: "uint8",
          },
          {
            components: [
              {
                internalType:
                  "enum IKeeperRewardDistributorStorage.KeeperActionType",
                name: "actionType",
                type: "uint8",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "baseMaxGas1",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "baseMaxGas2",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "multiplier1",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "multiplier2",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "inflectionPoint",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct IKeeperRewardDistributorStorage.KeeperActionRewardConfig",
                name: "config",
                type: "tuple",
              },
            ],
            internalType:
              "struct IKeeperRewardDistributorV3.MaxGasPerPositionParams[]",
            name: "maxGasPerPositionParams",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType:
                  "enum IKeeperRewardDistributorStorage.DecreasingReason",
                name: "reason",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType:
              "struct IKeeperRewardDistributorV3.DecreasingGasByReasonParams[]",
            name: "decreasingGasByReasonParams",
            type: "tuple[]",
          },
        ],
        internalType: "struct IKeeperRewardDistributorV3.InitParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "keeperBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IKeeperRewardDistributorStorage.KeeperActionType",
        name: "",
        type: "uint8",
      },
    ],
    name: "maxGasPerPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minPositionSizeAddend",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativePartInReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optimisticGasCoefficient",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleGasPriceTolerance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentModel",
    outputs: [
      {
        internalType: "enum IKeeperRewardDistributorStorage.PaymentModel",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pmx",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pmxPartInReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "positionSizeCoefficient",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "positionSizeCoefficientB",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_additionalGas",
        type: "uint256",
      },
    ],
    name: "setAdditionalGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType:
          "enum IKeeperRewardDistributorStorage.KeeperCallingMethod",
        name: "_callingMethod",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_maxRoutesLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_baseLength",
        type: "uint256",
      },
    ],
    name: "setDataLengthRestrictions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IKeeperRewardDistributorStorage.DecreasingReason",
        name: "_reason",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setDecreasingGasByReason",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_defaultMaxGasPrice",
        type: "uint256",
      },
    ],
    name: "setDefaultMaxGasPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IKeeperRewardDistributorStorage.KeeperActionType",
        name: "_actionType",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "baseMaxGas1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseMaxGas2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "multiplier1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "multiplier2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inflectionPoint",
            type: "uint256",
          },
        ],
        internalType:
          "struct IKeeperRewardDistributorStorage.KeeperActionRewardConfig",
        name: "_config",
        type: "tuple",
      },
    ],
    name: "setMaxGasPerPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minPositionSizeAddend",
        type: "uint256",
      },
    ],
    name: "setMinPositionSizeAddend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nativePartInReward",
        type: "uint256",
      },
    ],
    name: "setNativePartInReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newOptimisticGasCoefficient",
        type: "uint256",
      },
    ],
    name: "setOptimisticGasCoefficient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_oracleGasPriceTolerance",
        type: "uint256",
      },
    ],
    name: "setOracleGasPriceTolerance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pmx",
        type: "address",
      },
    ],
    name: "setPMX",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pmxPartInReward",
        type: "uint256",
      },
    ],
    name: "setPmxPartInReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_positionSizeCoefficient",
        type: "uint256",
      },
    ],
    name: "setPositionSizeCoefficient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "address",
            name: "positionAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "positionSize",
            type: "uint256",
          },
          {
            internalType:
              "enum IKeeperRewardDistributorStorage.KeeperActionType",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "numberOfActions",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasSpent",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "decreasingCounter",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "routesLength",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "nativePmxOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "positionNativeAssetOracleData",
            type: "bytes",
          },
        ],
        internalType: "struct IKeeperRewardDistributorV3.UpdateRewardParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "updateReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IKeeperRewardDistributorV4__factory {
  static readonly abi = _abi;
  static createInterface(): IKeeperRewardDistributorV4Interface {
    return new Interface(_abi) as IKeeperRewardDistributorV4Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IKeeperRewardDistributorV4 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IKeeperRewardDistributorV4;
  }
}
