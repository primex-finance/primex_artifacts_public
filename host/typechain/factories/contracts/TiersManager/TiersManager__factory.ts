/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TiersManager,
  TiersManagerInterface,
} from "../../../contracts/TiersManager/TiersManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pmx",
        type: "address",
      },
    ],
    name: "PMXchanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tiers",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_thresholds",
        type: "uint256[]",
      },
      {
        internalType: "bool",
        name: "_clearTiers",
        type: "bool",
      },
    ],
    name: "addTiers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_indexes",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_newThresholds",
        type: "uint256[]",
      },
    ],
    name: "changeThresholdForTier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "farmingNFT",
    outputs: [
      {
        internalType: "contract IPrimexNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getLenderTierForAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTiers",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getTraderTierForAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_userAddresses",
        type: "address[]",
      },
    ],
    name: "getTraderTiersForAddresses",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pmx",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lendingNFT",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tradingNFT",
        type: "address",
      },
      {
        internalType: "address",
        name: "_farmingNFT",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_tiers",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_thresholds",
        type: "uint256[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_traderBalanceVault",
        type: "address",
      },
    ],
    name: "initializeAfterUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lendingNFT",
    outputs: [
      {
        internalType: "contract IPrimexNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pmx",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pmx",
        type: "address",
      },
    ],
    name: "setPMX",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tiersThresholds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "traderBalanceVault",
    outputs: [
      {
        internalType: "contract ITraderBalanceVaultV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradingNFT",
    outputs: [
      {
        internalType: "contract IPrimexNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460bd576000549060ff8260081c16606b575060ff808216036031575b60405161192f90816100c38239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a1386022565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a714611258575080630460f0f31461122f5780630ee8c1431461120357806339b07f3e146111da5780633c5c1235146110455780635976cc8614610ef2578063609f047a14610ecf5780637b10399914610ea657806385e676fc14610e7b5780638cf5d1ae14610ba65780639968861e14610b7d578063a3ac887c146105cb578063b61fd5ed146105a2578063d4e8592a1461045b578063de1705701461042f578063df85639e146101085763f8bfd47d146100da57600080fd5b34610103576000366003190112610103576037546040516001600160a01b039091168152602090f35b600080fd5b34610103576060366003190112610103576004356001600160401b038111610103576101389036906004016112c1565b906024356001600160401b038111610103576101589036906004016112c1565b604492919235801515810361010357603354604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8600482015233602482015290602090829060449082906001600160a01b03165afa908115610423576000916103e9575b50156103d757610361575b80840361034f578315610339578135801561032757603a54806102fe575b505060018411610294575b60005b84811061020857005b610213818685611876565b3590603a54600160401b81101561027e5760019261023982856102529401603a556113c9565b90919082549060031b91821b91600019901b1916179055565b61025d818487611876565b35610269828887611876565b356000526039602052604060002055016101ff565b634e487b7160e01b600052604160045260246000fd5b60015b8481106102a457506101fc565b60001981018181116102e8576102bb908685611876565b356102c7828786611876565b3511156102d657600101610297565b6040516379fb858d60e01b8152600490fd5b634e487b7160e01b600052601160045260246000fd5b60001981019081116102e857610313906113c9565b90549060031b1c10156102d65784806101f1565b604051630512989960e51b8152600490fd5b634e487b7160e01b600052603260045260246000fd5b60405163554a08d160e11b8152600490fd5b603a546000603a5580610375575b506101d3565b603a6000527fa2999d817b6757290b50e8ecf3fa939673403dd35c97de392fdb343b4015ce9e017fa2999d817b6757290b50e8ecf3fa939673403dd35c97de392fdb343b4015ce9e5b8181106103cb575061036f565b600081556001016103be565b60405163036be76f60e61b8152600490fd5b90506020813d60201161041b575b816104046020938361132b565b81010312610103576104159061134c565b866101c8565b3d91506103f7565b6040513d6000823e3d90fd5b346101035760003660031901126101035761045761044b6116f2565b604051918291826112f1565b0390f35b34610103576040366003190112610103576004356001600160401b0381116101035761048b9036906004016112c1565b906024356001600160401b038111610103576104ab9036906004016112c1565b603354604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d86004820152336024820152929491939290602090829060449082906001600160a01b03165afa90811561042357600091610568575b50156103d75782810361034f5760005b81811061052a57005b806105386001928688611876565b3561054d610547838688611876565b356113c9565b90549060031b1c600052603960205260406000205501610521565b90506020813d60201161059a575b816105836020938361132b565b81010312610103576105949061134c565b85610511565b3d9150610576565b34610103576000366003190112610103576036546040516001600160a01b039091168152602090f35b346101035760e0366003190112610103576105e46112ab565b6024356001600160a01b03811690819003610103576044356001600160a01b03811690819003610103576064356001600160a01b0381169190829003610103576084356001600160a01b038116908190036101035760a4356001600160401b038111610103576106589036906004016112c1565b94909260c4356001600160401b0381116101035761067a9036906004016112c1565b9390956000549860ff8a60081c1615998a809b610b70575b8015610b59575b6106a290611359565b60ff1981166001176000558a610b47575b506040516301ffc9a760e01b81526336372b0760e01b60048201526001600160a01b03919091169390602081602481885afa90811561042357600091610b0d575b5080610a9a575b156109385780610a0f575b5080610984575b50806108e7575b506001600160601b0360a01b60385416176038556001600160601b0360a01b6033541617603355831580156107ed575b50505050506000549060ff8260081c16156107945761075f57005b61ff0019166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b81850361034f57610339578135801561032757603a54806108be575b50506001841161087c575b60005b848110156107445761082a818685611876565b3590603a54600160401b81101561027e5760019261023982856108509401603a556113c9565b61085b818487611876565b35610867828887611876565b35600052603960205260406000205501610817565b60015b84811061088c5750610814565b60001981018181116102e8576108a3908685611876565b356108af828786611876565b3511156102d65760010161087f565b60001981019081116102e8576108d3906113c9565b90549060031b1c10156102d6578580610809565b6040516301ffc9a760e01b81526351c19f7560e01b6004820152602081602481855afa9081156104235760009161094a575b5015610938576001600160601b0360a01b603754161760375587610714565b60405163044aa57560e41b8152600490fd5b90506020813d60201161097c575b816109656020938361132b565b81010312610103576109769061134c565b89610919565b3d9150610958565b6040516301ffc9a760e01b81526351c19f7560e01b6004820152602081602481855afa908115610423576000916109d5575b5015610938576001600160601b0360a01b60365416176036558861070d565b90506020813d602011610a07575b816109f06020938361132b565b8101031261010357610a019061134c565b8a6109b6565b3d91506109e3565b6040516301ffc9a760e01b81526351c19f7560e01b6004820152602081602481855afa90811561042357600091610a60575b5015610938576001600160601b0360a01b603554161760355589610706565b90506020813d602011610a92575b81610a7b6020938361132b565b8101031261010357610a8c9061134c565b8b610a41565b3d9150610a6e565b506040516301ffc9a760e01b8152637965db0b60e01b6004820152602081602481895afa90811561042357600091610ad3575b506106fb565b90506020813d602011610b05575b81610aee6020938361132b565b8101031261010357610aff9061134c565b8b610acd565b3d9150610ae1565b90506020813d602011610b3f575b81610b286020938361132b565b8101031261010357610b399061134c565b8b6106f4565b3d9150610b1b565b61ffff1916610101176000558a6106b3565b50303b158015610699575060ff8116600114610699565b50600160ff821610610692565b34610103576000366003190112610103576034546040516001600160a01b039091168152602090f35b34610103576020366003190112610103576004356001600160401b03811161010357610bd69036906004016112c1565b610bdf816116db565b91610bed604051938461132b565b818352601f19610bfc836116db565b01366020850137610c0b6116f2565b60365460405163946af61960e01b81526020600482015291929060009083906001600160a01b03168180610c43602482018a886117c0565b03915afa91821561042357600092610e5e575b5060375460405163946af61960e01b8152602060048201529060009082906001600160a01b03168180610c8d602482018b896117c0565b03915afa90811561042357600091610e3b575b506034546038546040805163543fcebd60e01b815260048101919091529360009285926001600160a01b0391821692849283921690610ce59060448401908d906117c0565b90602483015203915afa928315610423576000928394610dd0575b5060005b868110610d1957604051806104578a826112f1565b80610d2660019284611862565b51610da557610d358185611862565b51610d7457610d62610d5c610d4a8388611862565b51610d55848a611862565b51906113bc565b88611886565b610d6c828b611862565b525b01610d04565b7f64819635aba340cc5804b9a3603326e0a36ae48001266a863078dcd2a3f6c370610d9f828b611862565b52610d6e565b7f837c639c3c0e126ea778fe4c47c9633279529d5aa1cc4ba539e287cda6367ee1610d9f828b611862565b929093503d8082853e610de3818561132b565b830190604084830312610e345783516001600160401b038111610e375782610e0c918601611805565b936020810151916001600160401b038311610e345750610e2d929101611805565b9287610d00565b80fd5b5080fd5b610e5891503d806000833e610e50818361132b565b81019061173f565b86610ca0565b610e749192503d806000833e610e50818361132b565b9085610c56565b34610103576020366003190112610103576020610e9e610e996112ab565b611636565b604051908152f35b34610103576000366003190112610103576033546040516001600160a01b039091168152602090f35b34610103576020366003190112610103576020610e9e610eed6112ab565b6113e4565b3461010357602036600319011261010357610f0b6112ab565b603354604051632474521560e21b81526000600482015233602482015290602090829060449082906001600160a01b03165afa9081156104235760009161100b575b50156103d7576040516301ffc9a760e01b81526336372b0760e01b60048201526001600160a01b039190911690602081602481855afa90811561042357600091610fd1575b501561093857603880546001600160a01b031916821790557f904e838d0e0ea7d1f21757c4e5062aaed7a95f76bf22daa2c41066d6e466f675600080a2005b90506020813d602011611003575b81610fec6020938361132b565b8101031261010357610ffd9061134c565b82610f92565b3d9150610fdf565b90506020813d60201161103d575b816110266020938361132b565b81010312610103576110379061134c565b82610f4d565b3d9150611019565b34610103576020366003190112610103576004356001600160a01b0381169081900361010357603354604051632474521560e21b81526000600482015233602482015290602090829060449082906001600160a01b03165afa908115610423576000916111a0575b50156103d75760005460ff8160081c161580611193575b6110cd90611359565b61ffff191661010281176000556040516301ffc9a760e01b815263543fcebd60e01b6004820152602081602481865afa90811561042357600091611159575b5015610938576002916001600160601b0360a01b6034541617603455176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160028152a1005b90506020813d60201161118b575b816111746020938361132b565b81010312610103576111859061134c565b8361110c565b3d9150611167565b50600260ff8216106110c4565b90506020813d6020116111d2575b816111bb6020938361132b565b81010312610103576111cc9061134c565b826110ad565b3d91506111ae565b34610103576000366003190112610103576035546040516001600160a01b039091168152602090f35b346101035760203660031901126101035760043560005260396020526020604060002054604051908152f35b34610103576000366003190112610103576038546040516001600160a01b039091168152602090f35b34610103576020366003190112610103576004359063ffffffff60e01b821680920361010357602091637a70ca2360e01b811490811561129a575b5015158152f35b6301ffc9a760e01b14905083611293565b600435906001600160a01b038216820361010357565b9181601f84011215610103578235916001600160401b038311610103576020808501948460051b01011161010357565b602060408183019282815284518094520192019060005b8181106113155750505090565b8251845260209384019390920191600101611308565b90601f801991011681019081106001600160401b0382111761027e57604052565b5190811515820361010357565b1561136057565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b919082018092116102e857565b603a5481101561033957603a60005260206000200190600090565b6034546038546040805163c23f001f60e01b81526001600160a01b0394851660048201819052928516602482015291939192909183916044918391165afa801561042357600080916115fa575b61143b92506113bc565b906024602060018060a01b036036541660405192838092635cf5473f60e11b82528660048301525afa908115610423576000916115c0575b50603754604051635cf5473f60e11b81526004810193909352602090839060249082906001600160a01b03165afa91821561042357600092611584575b5061155e57611539578015801561152f575b611529576000906000603a54915b8282106114dd5750505090565b9091926114e9836113c9565b90549060031b1c6000526039602052604060002054821061152257506001611510836113c9565b90549060031b1c9201909291926114d0565b9250505090565b50600090565b50603a54156114c2565b507f64819635aba340cc5804b9a3603326e0a36ae48001266a863078dcd2a3f6c37090565b50507f837c639c3c0e126ea778fe4c47c9633279529d5aa1cc4ba539e287cda6367ee190565b9091506020813d6020116115b8575b816115a06020938361132b565b81010312610103576115b19061134c565b90386114b0565b3d9150611593565b90506020813d6020116115f2575b816115db6020938361132b565b81010312610103576115ec9061134c565b38611473565b3d91506115ce565b50506040813d60401161162e575b816116156040938361132b565b810103126101035780602061143b925191015190611431565b3d9150611608565b603554604051635cf5473f60e11b81526001600160a01b0392831660048201529160209183916024918391165afa908115610423576000916116a1575b5061167d57600090565b7f5e0bdf8c8515c219e88cbda025601f1613ca4e20cf180337516f5a79e67a3ca190565b90506020813d6020116116d3575b816116bc6020938361132b565b81010312610103576116cd9061134c565b38611673565b3d91506116af565b6001600160401b03811161027e5760051b60200190565b60405190603a548083528260208101603a60005260206000209260005b8181106117265750506117249250038361132b565b565b845483526001948501948794506020909301920161170f565b602081830312610103578051906001600160401b03821161010357019080601f83011215610103578151611772816116db565b92611780604051948561132b565b81845260208085019260051b82010192831161010357602001905b8282106117a85750505090565b602080916117b58461134c565b81520191019061179b565b916020908281520191906000905b8082106117db5750505090565b90919283359060018060a01b038216809203610103576020816001938293520194019201906117ce565b9080601f8301121561010357815161181c816116db565b9261182a604051948561132b565b81845260208085019260051b82010192831161010357602001905b8282106118525750505090565b8151815260209182019101611845565b80518210156103395760209160051b010190565b91908110156103395760051b0190565b916000821580156118f0575b6118e7576000905b84518210156118e0576118ad8286611862565b51600052603960205260406000205484106118d8575060016118cf8286611862565b5191019061189a565b925050915090565b9350509050565b50915050600090565b5083511561189256fea2646970667358221220d2d9ac04af4248d6ccac7b87ee8625fdf32c7df80d62ab2dd2088a66185515d164736f6c634300081a0033";

type TiersManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TiersManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TiersManager__factory extends ContractFactory {
  constructor(...args: TiersManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TiersManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TiersManager__factory {
    return super.connect(runner) as TiersManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TiersManagerInterface {
    return new Interface(_abi) as TiersManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TiersManager {
    return new Contract(address, _abi, runner) as unknown as TiersManager;
  }
}
