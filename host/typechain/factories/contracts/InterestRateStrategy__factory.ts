/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  InterestRateStrategy,
  InterestRateStrategyInterface,
} from "../../contracts/InterestRateStrategy";

const _abi = [
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "urOptimal",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "k0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "k1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "b0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "b1",
        type: "int256",
      },
    ],
    name: "BarCalculationParamsChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ur",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveRate",
        type: "uint256",
      },
    ],
    name: "calculateInterestRates",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getBarCalculationParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "urOptimal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "k0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "k1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "b0",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "b1",
            type: "int256",
          },
        ],
        internalType: "struct IInterestRateStrategy.BarCalculationParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_params",
        type: "bytes",
      },
    ],
    name: "setBarCalculationParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601557610590908161001b8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a71461024f57508063110966fa146102155780632acabb11146101075763ddce49171461004b57600080fd5b34610102576020366003190112610102576004356001600160a01b03811690819003610102576000608061007d6102a2565b8281528260208201528260408201528260608201520152600052600060205260a060406000206100ab6102a2565b81549182825260018101546020830190815260028201549060408401918252608060046003850154946060870195865201549401938452604051948552516020850152516040840152516060830152516080820152f35b600080fd5b346101025760203660031901126101025760043567ffffffffffffffff8111610102573660238201121561010257806004013567ffffffffffffffff81116101025781013660248201116101025760a0908290031261010257600090600461016d6102a2565b9160248101358352602083019260448201358452604081016064830135815260608201916084840135835260a4608082019401358452338752866020526040872090519586825551918260018301555192836002830155519384600383015551948591015560405194855260208501526040840152606083015260808201527f7bd145cdd7c4e4ed7a51e9e3e4baa3c3c1622230c4dd7b084156536b0b930c1060a03392a280f35b346101025760403660031901126101025760406001600160801b0361023e6024356004356102fb565b835191831682529091166020820152f35b34610102576020366003190112610102576004359063ffffffff60e01b821680920361010257602091633983653f60e21b8114908115610291575b5015158152f35b6301ffc9a760e01b1490508361028a565b6040519060a0820182811067ffffffffffffffff8211176102c257604052565b634e487b7160e01b600052604160045260246000fd5b919082018092116102e557565b634e487b7160e01b600052601160045260246000fd5b9190916b033b2e3c9fd0803ce800000081116104ad5780156104a457336000526000602052604060002061032d6102a2565b9082815480845260018301549360208101948552600284015480604083015260806004600387015496606085019788520154920191825260009284111560001461044f575050506103829061038a93516104bf565b9051906102d8565b905b6001600160801b03821161043d576103a490826104bf565b92806103dc575b506001600160801b0383116103ca576001600160801b03809116921690565b60405163fab766b560e01b8152600490fd5b670de0b6b3a764000093919303670de0b6b3a764000081116102e557610401916104f8565b6706f05b59d3b200008101908181116102e557811061042c57670de0b6b3a7640000900491386103ab565b630a77254f60e01b60005260046000fd5b604051635ebef97160e01b8152600490fd5b90935061045e929194506104bf565b815190928112156104935750518060000381810560001914821517156102e557821061043d5781019081116102e5579061038c565b905061049e916102d8565b9061038c565b50600091508190565b6040516356610cc760e01b8152600490fd5b906104c9916104f8565b6b019d971e4fe8401e740000008101908181116102e557811061042c576b033b2e3c9fd0803ce8000000900490565b91906000928115918215610521575b50501561051057565b631550e8b760e01b60005260046000fd5b818192939550028281048214831517156102e55780946105445704143880610507565b634e487b7160e01b600052601260045260246000fdfea264697066735822122026442263579f263f9db44b6c78c0d71657fe94be23f212360c7e87a88b4b16a664736f6c634300081a0033";

type InterestRateStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InterestRateStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InterestRateStrategy__factory extends ContractFactory {
  constructor(...args: InterestRateStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      InterestRateStrategy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): InterestRateStrategy__factory {
    return super.connect(runner) as InterestRateStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InterestRateStrategyInterface {
    return new Interface(_abi) as InterestRateStrategyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): InterestRateStrategy {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as InterestRateStrategy;
  }
}
