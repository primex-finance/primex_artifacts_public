/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  InterestRateStrategy,
  InterestRateStrategyInterface,
} from "../../contracts/InterestRateStrategy";

const _abi = [
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bucket",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "urOptimal",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "k0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "k1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "b0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "b1",
        type: "int256",
      },
    ],
    name: "BarCalculationParamsChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ur",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveRate",
        type: "uint256",
      },
    ],
    name: "calculateInterestRates",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getBarCalculationParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "urOptimal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "k0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "k1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "b0",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "b1",
            type: "int256",
          },
        ],
        internalType: "struct IInterestRateStrategy.BarCalculationParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_params",
        type: "bytes",
      },
    ],
    name: "setBarCalculationParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576105be908161001c8239f35b600080fdfe608060408181526004908136101561001657600080fd5b600092833560e01c90816301ffc9a71461024057508063110966fa146102045780632acabb11146101055763ddce49171461005057600080fd5b346101015760203660031901126101015781356001600160a01b038116908190036100fd5783829160a0956080610085610294565b82815282602082015282868201528260608201520152815280602052206100aa610294565b918154938484526001830154602085019081526080600285015492848701938452600386015495606088019687520154950194855282519586525160208601525190840152516060830152516080820152f35b8380fd5b8280fd5b50903461010157602036600319011261010157803567ffffffffffffffff80821161020057366023830112156102005781830135908111610200578101366024820111610200578160a09103126100fd5761015e610294565b602482013581526020810193604483013585528082016064840135815260608301926084850135845260a46080820195013585523388528760205282882090519687825551918260018301555193846002830155519485600383015551958691015581519586526020860152840152606083015260808201527f7bd145cdd7c4e4ed7a51e9e3e4baa3c3c1622230c4dd7b084156536b0b930c1060a03392a280f35b8480fd5b50913461023d578260031936011261023d57506102259060243590356102ed565b82516001600160801b03928316815291166020820152f35b80fd5b84908434610101576020366003190112610101573563ffffffff60e01b81168091036101015760209250633983653f60e21b8114908115610283575b5015158152f35b6301ffc9a760e01b1490508361027c565b6040519060a0820182811067ffffffffffffffff8211176102b457604052565b634e487b7160e01b600052604160045260246000fd5b919082018092116102d757565b634e487b7160e01b600052601160045260246000fd5b9190916b033b2e3c9fd0803ce80000008082116104e15781156104d55760009333855284602052604080862091610322610294565b8354808252858760018701549360208101948552600288015480888301526003890154946060830195865260806004809b0154930192835283111560001461045557505061037761037c916103859551610525565b6104f3565b049051906102ca565b935b6001600160801b0395868611610445576103776103a49187610525565b0496816103cb575b50508386116103be5750508116921690565b5163fab766b560e01b8152fd5b909196670de0b6b3a76400009283039083821161043257906103ec91610525565b6706f05b59d3b2000081019182821161041f5750811061040f57049438806103ac565b8651630a77254f60e01b81528390fd5b634e487b7160e01b815260118552602490fd5b634e487b7160e01b835260118552602483fd5b50505051635ebef97160e01b8152fd5b61037792919550610467939450610525565b049080518981126000146104c457505180890381156000198383051417156104b157821061044557810190811161049e5793610387565b634e487b7160e01b885260118452602488fd5b634e487b7160e01b8a526011865260248afd5b90506104cf916102ca565b93610387565b50509050600090600090565b6040516356610cc760e01b8152600490fd5b906b019d971e4fe8401e740000008201918281116102d757821061051357565b604051630a77254f60e01b8152600490fd5b9190600092811591821561054f575b50501561053d57565b604051631550e8b760e01b8152600490fd5b818192939550028281048214831517156102d75780946105725704143880610534565b634e487b7160e01b600052601260045260246000fdfea2646970667358221220a3d056a26ead999f0cd157e5afa2d7190af6d36ea8cf4a8bde4fac43f9c949b664736f6c63430008120033";

type InterestRateStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InterestRateStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InterestRateStrategy__factory extends ContractFactory {
  constructor(...args: InterestRateStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      InterestRateStrategy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): InterestRateStrategy__factory {
    return super.connect(runner) as InterestRateStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InterestRateStrategyInterface {
    return new Interface(_abi) as InterestRateStrategyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): InterestRateStrategy {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as InterestRateStrategy;
  }
}
