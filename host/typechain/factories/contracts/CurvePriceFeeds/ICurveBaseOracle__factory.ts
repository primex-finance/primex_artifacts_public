/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICurveBaseOracle,
  ICurveBaseOracleInterface,
} from "../../../contracts/CurvePriceFeeds/ICurveBaseOracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "RegisterLpToken",
    type: "event",
  },
  {
    inputs: [],
    name: "getAddressProvider",
    outputs: [
      {
        internalType: "contract ICurveAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "crvLp",
        type: "address",
      },
    ],
    name: "getPoolInfo",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "coins",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "virtualPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "tokensUsdOracleData",
        type: "bytes[]",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICurveAddressProvider",
        name: "_addressProvider",
        type: "address",
      },
      {
        internalType: "contract IPriceOracleV2",
        name: "_primexPriceOracle",
        type: "address",
      },
      {
        internalType: "contract IAccessControl",
        name: "_primexRegistry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "primexPriceOracle",
    outputs: [
      {
        internalType: "contract IPriceOracleV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "primexRegistry",
    outputs: [
      {
        internalType: "contract IAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ICurveBaseOracle__factory {
  static readonly abi = _abi;
  static createInterface(): ICurveBaseOracleInterface {
    return new Interface(_abi) as ICurveBaseOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ICurveBaseOracle {
    return new Contract(address, _abi, runner) as unknown as ICurveBaseOracle;
  }
}
