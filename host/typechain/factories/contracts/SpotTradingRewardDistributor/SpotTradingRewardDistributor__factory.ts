/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SpotTradingRewardDistributor,
  SpotTradingRewardDistributorInterface,
} from "../../../contracts/SpotTradingRewardDistributor/SpotTradingRewardDistributor";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PmxWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "rewardPerPeriod",
        type: "uint256",
      },
    ],
    name: "RewardPerPeriodChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "rewardPerPeriod",
        type: "uint256",
      },
    ],
    name: "RewardPerPeriodDecreased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SpotTradingClaimReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TopUpUndistributedPmxBalance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentPeriod",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardPerPeriod",
        type: "uint256",
      },
    ],
    name: "decreaseRewardPerPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dns",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getPeriodInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getPeriodsWithTraderActivity",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "periodNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getSpotTraderActivity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialPeriodTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_periodDuration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pmx",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_traderBalanceVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "periods",
    outputs: [
      {
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalActivity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pmx",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardPerPeriod",
        type: "uint256",
      },
    ],
    name: "setRewardPerPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "topUpUndistributedPmxBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "traderBalanceVault",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "undistributedPMX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "address",
        name: "positionAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "positionUsdOracleData",
        type: "bytes",
      },
    ],
    name: "updateTraderActivity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawPmx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100c1576000549060ff8260081c1661006f575060ff80821603610034575b60405161183a90816100c78239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a7146111ef575080630460f0f3146111c65780630b49839d1461119d5780631602b801146110c25780632630c12f146110995780632af2311d1461100f5780632bc5f56014610fcb57806338b41a3114610fac5780633f4ba83a14610e9d57806351a8312114610df05780635c975abb14610dcc5780635d3705d814610ccd57806361d027b314610ca45780637615060814610c855780637b10399914610c5c5780638456cb5914610b6c5780638534ef4a14610b4d5780639968861e14610b24578063a2dc2ab714610734578063a6bd678814610663578063b0c3bdb31461058b578063b470aade1461056c578063b88a802f14610314578063c6855977146101a8578063d82e3962146101755763ea4a11041461014157600080fd5b346101715760203660031901126101715791819235815260d3602052206002815491015482519182526020820152f35b8280fd5b8284346101a55760203660031901126101a5575061019961019461125e565b61167f565b82519182526020820152f35b80fd5b50903461017157602090816003193601126103105782359260018060a01b03906044848360c95416855192838092632474521560e21b82528b878301523360248301525afa9081156103065787916102e9575b50156102db5760d2548581106102cc5761025b9392859261021d888094611324565b60d255888260ce54169260d054169186519788958694859363a9059cbb60e01b8552840160209093929193604081019460018060a01b031681520152565b03925af19081156102c35750610295575b50507f1403e9f80c7b87509c72e49d77cb3dd67786b930c61dd070ee896300af8883508280a280f35b816102b492903d106102bc575b6102ac8183611274565b8101906112ac565b50388061026c565b503d6102a2565b513d86823e3d90fd5b50825163547dc75760e11b8152fd5b825163036be76f60e61b8152fd5b6103009150853d87116102bc576102ac8183611274565b386101fb565b84513d89823e3d90fd5b8380fd5b5091903461056857816003193601126105685761032f611609565b6103376115b1565b6103403361167f565b909182156105595733845260209160d483528185208251808286829454938481520190895286892092895b888282106105435750505061038292500382611274565b33865260d4845282862080549087815581610526575b505080516000198101919082116105135782916103b4916115f5565b51146104fa575b5060ce5460d154825163a9059cbb60e01b81526001600160a01b039182168882019081526020810187905291929091859183918290036040019082908a9087165af180156104f0576104d3575b508060d154169060ce5416813b156104cf57825163220eb46560e11b8152338189019081526001600160a01b0390921660208301526040820186905291869183919082908490829060600103925af180156104c557610494575b50907f05b00a60b39bf9abaaf1e5712428e02df01e84cb1edf188da81d20d3f6d0057391519283523392a26001805580f35b67ffffffffffffffff81959295116104b25784529293508338610462565b634e487b7160e01b825260418652602482fd5b82513d87823e3d90fd5b8580fd5b6104e990843d86116102bc576102ac8183611274565b5038610408565b83513d88823e3d90fd5b61050d9033865260d48452828620611382565b386103bb565b634e487b7160e01b875260118852602487fd5b8752848720908101905b8181101561039857878155600101610530565b855484526001958601958795509301920161036b565b5163093c58cd60e21b81528490fd5b5080fd5b50503461056857816003193601126105685760209060cb549051908152f35b509034610171576020366003190112610171576105ff906020833580946105b0611609565b6105bc8260d254611347565b60d25560ce5484516323b872dd60e01b8152339281019283523060208401526040830193909352919485926001600160a01b031691839189918391606090910190565b03925af190811561065a575061063c575b507fc34f0d9ce24669fd9852834519a3c9687ba0bf81d3a77e64589981ec16e7680b8280a26001805580f35b6106539060203d81116102bc576102ac8183611274565b5038610610565b513d85823e3d90fd5b50346101715760203660031901126101715760c9548251632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b638184015233602482015282359391602090829060449082906001600160a01b03165afa9081156104c5578591610716575b50156107095750508060cd557fedd7736b6c998295516e7e77bd10f032589e2d45ca106a0e883e3559a99b3eab8280a280f35b5163036be76f60e61b8152fd5b61072e915060203d81116102bc576102ac8183611274565b386106d6565b509190346105685760c03660031901126105685761075061125e565b6001600160a01b0393602492919083359060443587811690819003610b2057606435888116809103610b1c5760843591898316809303610b185760a435948a8616809603610b145789549a60ff8c60081c161597888d819a610b06575b508015610ae7575b15610a8e5760ff19808e166001178d559b9c89610a7d575b5016948b89519a6301ffc9a760e01b808d528c84637965db0b60e01b91015260209c8d8184818d5afa9384156109b557908e929194610a5e575b5083610a0f575b836109c0575b83610966575b8361090e575b505050156109005781156108f257506bffffffffffffffffffffffff60a01b948560c954161760c9554260cc5560cb558360cf54161760cf558260ce54161760ce558160d154161760d15560d054161760d0558454936108ad60ff8660081c16610889816112c4565b610892816112c4565b61089b816112c4565b600180556108a8816112c4565b6112c4565b606554166065556108bc578380f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989261ff00191684555160018152a13880808380f35b8851636f599d9d60e01b8152fd5b885163044aa57560e41b8152fd5b8c519081526329abf30760e11b858201529250908290818b5afa90811561095c578d9161093f575b50388b81610820565b61095691508b3d8d116102bc576102ac8183611274565b38610936565b8a513d8f823e3d90fd5b9250508d8b518381526336372b0760e01b858201528d8184818b5afa9182156109b557908e92610998575b509261081a565b6109af9150823d84116102bc576102ac8183611274565b38610991565b8d51903d90823e3d90fd5b9250508d8b518381526312b3ed2b60e01b858201528d8184818c5afa9182156109b557908e926109f2575b5092610814565b610a099150823d84116102bc576102ac8183611274565b386109eb565b9250508d8b518381526333ca6d2360e21b858201528d8184818a5afa9182156109b557908e92610a41575b509261080e565b610a589150823d84116102bc576102ac8183611274565b38610a3a565b610a76919450823d84116102bc576102ac8183611274565b9238610807565b61ffff1916610101178d55386107cd565b895162461bcd60e51b8152602081890152602e818d01527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158d81610af8575b506107b5565b6001915060ff16148d610af2565b6001915060ff16108d6107ad565b8980fd5b8880fd5b8780fd5b8680fd5b50503461056857816003193601126105685760d15490516001600160a01b039091168152602090f35b50503461056857816003193601126105685760209060cc549051908152f35b503461017157826003193601126101715760c9548251632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb8382015233602482015290602090829060449082906001600160a01b03165afa908115610c4f578491610c31575b5015610c23575060207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25891610c0e6115b1565b600160ff19606554161760655551338152a180f35b905163036be76f60e61b8152fd5b610c49915060203d81116102bc576102ac8183611274565b38610bdb565b50505051903d90823e3d90fd5b50503461056857816003193601126105685760c95490516001600160a01b039091168152602090f35b50503461056857816003193601126105685760209060d2549051908152f35b50503461056857816003193601126105685760d05490516001600160a01b039091168152602090f35b5091903461056857608036600319011261056857610ce961125e565b610cf1611243565b906064359467ffffffffffffffff938487116104cf57366023880112156104cf57868201359485116104cf5736602486890101116104cf5760c9548151632474521560e21b81527f5580ea9b7f9becaa48a78f506a2019ea24794b7a717ee6a4b9f62e36b94c25a68482015233602482015290602090829060449082906001600160a01b03165afa908115610dc2578791610da4575b50156107095750506024610da194950191604435916113bc565b80f35b610dbc915060203d81116102bc576102ac8183611274565b38610d87565b82513d89823e3d90fd5b50503461056857816003193601126105685760209060ff6065541690519015158152f35b8284346101a557602090816003193601126101a55782906001600160a01b03610e1761125e565b16815260d48352818120908251808584549182815201908194845286842090845b818110610e895750505081610e4e910382611274565b83519485948186019282875251809352850193925b828110610e7257505050500390f35b835185528695509381019392810192600101610e63565b825484529288019260019283019201610e38565b503461017157826003193601126101715760c9548251632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d88382015233602482015290602090829060449082906001600160a01b03165afa908115610c4f578491610f8e575b5015610c23576065549060ff821615610f54575060ff1916606555513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b610fa6915060203d81116102bc576102ac8183611274565b38610f0c565b50503461056857816003193601126105685760209060cd549051908152f35b50346101715781600319360112610171576020928291610fe9611243565b9035825260d385528282206001600160a01b039091168252600101845220549051908152f35b508290346105685760203660031901126105685761105061103460cc54809335611324565b61104b61104460cb54809361165f565b9342611324565b61165f565b81835260d360205283832092508254918215918261108f575b5050156110865750600260cd54915b015482519182526020820152f35b60029091611078565b1490508480611069565b50503461056857816003193601126105685760cf5490516001600160a01b039091168152602090f35b50346101715760203660031901126101715760c9548251632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb8184015233602482015282359391602090829060449082906001600160a01b03165afa9081156104c557859161117f575b50156107095760cd548310156111725750508060cd557fd83327ce87c5c4834b9d54a548e5b7db615bac1859c4687ecb6c50abff6531608280a280f35b5163bccabe7160e01b8152fd5b611197915060203d81116102bc576102ac8183611274565b38611135565b50503461056857816003193601126105685760ca5490516001600160a01b039091168152602090f35b50503461056857816003193601126105685760ce5490516001600160a01b039091168152602090f35b92505034610171576020366003190112610171573563ffffffff60e01b81168091036101715760209250630929583360e01b8114908115611232575b5015158152f35b6301ffc9a760e01b1490503861122b565b602435906001600160a01b038216820361125957565b600080fd5b600435906001600160a01b038216820361125957565b90601f8019910116810190811067ffffffffffffffff82111761129657604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312611259575180151581036112595790565b156112cb57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b9190820391821161133157565b634e487b7160e01b600052601160045260246000fd5b9190820180921161133157565b805482101561136c5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b805468010000000000000000811015611296576113a491600182018155611354565b819291549060031b91821b91600019901b1916179055565b93909291926113d96113d060cc5442611324565b60cb549061165f565b9360009285845260209660d38852876040968787209586541561156a575b60cf54895163735aad2560e01b81526001600160a01b039283166004820152610348602482015260448101979097528116606487015260a0608487015260a4860185905293859160c491839181908385013781810183018a9052601f01601f1916810103018173__$75df3f6366b0557754cd3ba14359105414$__5af492831561156057859361152b575b506114ae9160029116938486526001810189528686206114a3858254611347565b905501918254611347565b905580825260d48552828220805480159182156114ee575b50506114d4575b5050505050565b6114e49460d49183525220611382565b38808080806114cd565b6000198201925090821161151757859161150791611354565b90549060031b1c141538806114c6565b634e487b7160e01b84526011600452602484fd5b9092508781813d8311611559575b6115438183611274565b810103126115555751916114ae611482565b8480fd5b503d611539565b86513d87823e3d90fd5b915060cd54801580156115a6575b611599578a928161158d60c49360d254611324565b60d255885590506113f7565b5050505050505050505050565b5060d2548111611578565b60ff606554166115bd57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b805182101561136c5760209160051b010190565b60026001541461161a576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b8115611669570490565b634e487b7160e01b600052601260045260246000fd5b906000806116926113d060cc5442611324565b6001600160a01b0390941680825260d46020908152604080842081518154808252918652838620909594929391869081840190875b858282106117ee575050506116de92500386611274565b84519283156117e357600019938085019081116117c3576117008a91886115f5565b51036117d75785518481019081116117c35794939291905b84965b86881061172e5750505050505050509190565b909192939495969761174089836115f5565b51875260d3845282872080549086895260018101865284892054918281029281840414901517156117af576117849291600261177e9201549061165f565b90611347565b9785811461179b576001019695949392919061171b565b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b89526011600452602489fd5b634e487b7160e01b86526011600452602486fd5b85519493929190611718565b505050509150509190565b855484526001958601958b9550930192016116c756fea2646970667358221220cf7bab22e3b60eba4ecd2d4b9ef3a02c385cddc8790ce94e7045f28684b2a92964736f6c63430008120033";

type SpotTradingRewardDistributorConstructorParams =
  | [
      linkLibraryAddresses: SpotTradingRewardDistributorLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpotTradingRewardDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SpotTradingRewardDistributor__factory extends ContractFactory {
  constructor(...args: SpotTradingRewardDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SpotTradingRewardDistributor__factory.linkBytecode(
          linkLibraryAddresses
        ),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SpotTradingRewardDistributorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$75df3f6366b0557754cd3ba14359105414\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SpotTradingRewardDistributor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SpotTradingRewardDistributor__factory {
    return super.connect(runner) as SpotTradingRewardDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpotTradingRewardDistributorInterface {
    return new Interface(_abi) as SpotTradingRewardDistributorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SpotTradingRewardDistributor {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SpotTradingRewardDistributor;
  }
}

export interface SpotTradingRewardDistributorLibraryAddresses {
  ["contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"]: string;
}
