/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SpotTradingRewardDistributor,
  SpotTradingRewardDistributorInterface,
} from "../../../contracts/SpotTradingRewardDistributor/SpotTradingRewardDistributor";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PmxWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "rewardPerPeriod",
        type: "uint256",
      },
    ],
    name: "RewardPerPeriodChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "rewardPerPeriod",
        type: "uint256",
      },
    ],
    name: "RewardPerPeriodDecreased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SpotTradingClaimReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TopUpUndistributedPmxBalance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentPeriod",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardPerPeriod",
        type: "uint256",
      },
    ],
    name: "decreaseRewardPerPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dns",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getPeriodInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getPeriodsWithTraderActivity",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "periodNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getSpotTraderActivity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialPeriodTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_periodDuration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pmx",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_traderBalanceVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "periods",
    outputs: [
      {
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalActivity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pmx",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardPerPeriod",
        type: "uint256",
      },
    ],
    name: "setRewardPerPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "topUpUndistributedPmxBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "traderBalanceVault",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "undistributedPMX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "address",
        name: "positionAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "positionUsdOracleData",
        type: "bytes",
      },
    ],
    name: "updateTraderActivity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawPmx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460bd576000549060ff8260081c16606b575060ff808216036031575b6040516117d990816100c38239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a1386022565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816301ffc9a7146111ce575080630460f0f3146111a55780630b49839d1461117c5780631602b8011461109f5780632630c12f146110765780632af2311d14610fea5780632bc5f56014610fa357806338b41a3114610f855780633f4ba83a14610e7357806351a8312114610dbe5780635c975abb14610d9b5780635d3705d814610c9557806361d027b314610c6c5780637615060814610c4e5780637b10399914610c255780638456cb5914610b4d5780638534ef4a14610b2f5780639968861e14610b06578063a2dc2ab7146106ce578063a6bd67881461060d578063b0c3bdb314610552578063b470aade14610534578063b88a802f146102ff578063c6855977146101a5578063d82e3962146101755763ea4a11041461013f57600080fd5b346101725760203660031901126101725760408091600435815260d3602052206002815491015482519182526020820152f35b80fd5b5034610172576020366003190112610172576040610199610194611242565b61156e565b82519182526020820152f35b50346101725760203660031901126101725760c954604051632474521560e21b815260048181018490523360248301523591602090829060449082906001600160a01b03165afa9081156102b15783916102e0575b50156102ce5760d2548181106102bc5781610214916112a8565b60d25560ce5460d05460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291602091839160449183918891165af180156102b157610284575b507f1403e9f80c7b87509c72e49d77cb3dd67786b930c61dd070ee896300af8883508280a280f35b6102a59060203d6020116102aa575b61029d8183611258565b810190611290565b61025c565b503d610293565b6040513d85823e3d90fd5b60405163547dc75760e11b8152600490fd5b60405163036be76f60e61b8152600490fd5b6102f9915060203d6020116102aa5761029d8183611258565b386101fa565b5034610172578060031936011261017257610318611709565b61032061175f565b6103293361156e565b819291156105225733825260d4602052604082206040518082602082945493848152019086526020862092865b81811061050957505061036b92500382611258565b33835260d460205260408320805490848155816104eb575b505080516000198101919082116104d757829161039f9161153a565b51146104bc575b5060ce5460d15460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291602091839160449183918791165af180156104905761049f575b5060d15460ce546001600160a01b039182169116813b1561049b5760405163220eb46560e11b81523360048201526001600160a01b03919091166024820152604481018490529082908290606490829084905af1801561049057610480575b50906040519081527f05b00a60b39bf9abaaf1e5712428e02df01e84cb1edf188da81d20d3f6d0057360203392a26001805580f35b8161048a91611258565b3861044b565b6040513d84823e3d90fd5b8280fd5b6104b79060203d6020116102aa5761029d8183611258565b6103ec565b6104d19033835260d460205260408320611306565b386103a6565b634e487b7160e01b84526011600452602484fd5b845260208420908101905b81811015610383578481556001016104f6565b8454835260019485019486945060209093019201610356565b60405163093c58cd60e21b8152600490fd5b5034610172578060031936011261017257602060cb54604051908152f35b50346101725760203660031901126101725760043561056f611709565b61057b8160d2546112cb565b60d25560ce546040516323b872dd60e01b815233600482015230602482015260448101839052906020908290606490829087906001600160a01b03165af180156102b1576105f0575b507fc34f0d9ce24669fd9852834519a3c9687ba0bf81d3a77e64589981ec16e7680b8280a26001805580f35b6106089060203d6020116102aa5761029d8183611258565b6105c4565b5034610172576020366003190112610172576004356044602060018060a01b0360c9541660405192838092632474521560e21b82527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b6360048301523360248301525afa9081156102b15783916106af575b50156102ce578060cd557fedd7736b6c998295516e7e77bd10f032589e2d45ca106a0e883e3559a99b3eab8280a280f35b6106c8915060203d6020116102aa5761029d8183611258565b3861067e565b50346101725760c0366003190112610172576106e8611242565b6024356044356001600160a01b03811690819003610b02576064356001600160a01b03811690819003610afe576084356001600160a01b0381169290839003610afa5760a4356001600160a01b0381169490859003610af65786549560ff8760081c161596878098610ae9575b8015610ad2575b15610a765760ff198116600117895587610a65575b506040516301ffc9a760e01b8152637965db0b60e01b60048201526001600160a01b039190911690602081602481855afa908115610936578991610a46575b50806109ef575b80610998575b80610941575b806108df575b156108cd5781156108bb576001600160601b0360a01b60c954161760c9554260cc5560cb556001600160601b0360a01b60cf54161760cf556001600160601b0360a01b60ce54161760ce556001600160601b0360a01b60d154161760d1556001600160601b0360a01b60d054161760d05581549061087460ff8360081c16610850816116a9565b610859816116a9565b610862816116a9565b6001805561086f816116a9565b6116a9565b60ff1960655416606555610886575080f35b61ff00191681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b604051636f599d9d60e01b8152600490fd5b60405163044aa57560e41b8152600490fd5b506040516301ffc9a760e01b81526329abf30760e11b60048201526020816024818a5afa908115610936578991610917575b506107c9565b610930915060203d6020116102aa5761029d8183611258565b38610911565b6040513d8b823e3d90fd5b506040516301ffc9a760e01b81526336372b0760e01b6004820152602081602481885afa908115610936578991610979575b506107c3565b610992915060203d6020116102aa5761029d8183611258565b38610973565b506040516301ffc9a760e01b81526312b3ed2b60e01b6004820152602081602481895afa9081156109365789916109d0575b506107bd565b6109e9915060203d6020116102aa5761029d8183611258565b386109ca565b506040516301ffc9a760e01b8152639bded6bb60e01b6004820152602081602481875afa908115610936578991610a27575b506107b7565b610a40915060203d6020116102aa5761029d8183611258565b38610a21565b610a5f915060203d6020116102aa5761029d8183611258565b386107b0565b61ffff191661010117885538610771565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b15801561075c5750600160ff82161461075c565b50600160ff821610610755565b8680fd5b8580fd5b8480fd5b8380fd5b503461017257806003193601126101725760d1546040516001600160a01b039091168152602090f35b5034610172578060031936011261017257602060cc54604051908152f35b503461017257806003193601126101725760c954604051632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb600482015233602482015290602090829060449082906001600160a01b03165afa908115610490578291610c06575b50156102ce57610bcc61175f565b600160ff1960655416176065557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b610c1f915060203d6020116102aa5761029d8183611258565b38610bbe565b503461017257806003193601126101725760c9546040516001600160a01b039091168152602090f35b5034610172578060031936011261017257602060d254604051908152f35b503461017257806003193601126101725760d0546040516001600160a01b039091168152602090f35b503461017257608036600319011261017257610caf611242565b610cb7611227565b906064359167ffffffffffffffff8311610b025736602384011215610b025782600401359167ffffffffffffffff8311610afe573660248486010111610afe5760c954604051632474521560e21b81527f5580ea9b7f9becaa48a78f506a2019ea24794b7a717ee6a4b9f62e36b94c25a6600482015233602482015290602090829060449082906001600160a01b03165afa908115610d90578691610d71575b50156102ce576024610d6e94019160443591611340565b80f35b610d8a915060203d6020116102aa5761029d8183611258565b38610d57565b6040513d88823e3d90fd5b5034610172578060031936011261017257602060ff606554166040519015158152f35b5034610172576020366003190112610172576001600160a01b03610de0611242565b16815260d460205260408120604051908160208254918281520190819285526020852090855b818110610e5d5750505082610e1c910383611258565b604051928392602084019060208552518091526040840192915b818110610e44575050500390f35b8251845285945060209384019390920191600101610e36565b8254845260209093019260019283019201610e06565b503461017257806003193601126101725760c954604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8600482015233602482015290602090829060449082906001600160a01b03165afa908115610490578291610f66575b50156102ce5760655460ff811615610f2a5760ff19166065557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b610f7f915060203d6020116102aa5761029d8183611258565b38610ee4565b5034610172578060031936011261017257602060cd54604051908152f35b5034610172576040366003190112610172576040602091610fc2611227565b600435825260d384528282206001600160a01b03909116825260010183522054604051908152f35b50346101725760203660031901126101725760409060cc5461102d611011826004356112a8565b61102861102160cb54809361154e565b93426112a8565b61154e565b81835260d360205283832092508254918215918261106c575b5050156110635750600260cd54915b015482519182526020820152f35b60029091611055565b1490503880611046565b503461017257806003193601126101725760cf546040516001600160a01b039091168152602090f35b5034610172576020366003190112610172576004356044602060018060a01b0360c9541660405192838092632474521560e21b82527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb60048301523360248301525afa9081156102b157839161115d575b50156102ce5760cd5481101561114b578060cd557fd83327ce87c5c4834b9d54a548e5b7db615bac1859c4687ecb6c50abff6531608280a280f35b60405163bccabe7160e01b8152600490fd5b611176915060203d6020116102aa5761029d8183611258565b38611110565b503461017257806003193601126101725760ca546040516001600160a01b039091168152602090f35b503461017257806003193601126101725760ce546040516001600160a01b039091168152602090f35b9050346112235760203660031901126112235760043563ffffffff60e01b811680910361049b5760209250630929583360e01b8114908115611212575b5015158152f35b6301ffc9a760e01b1490503861120b565b5080fd5b602435906001600160a01b038216820361123d57565b600080fd5b600435906001600160a01b038216820361123d57565b90601f8019910116810190811067ffffffffffffffff82111761127a57604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261123d5751801515810361123d5790565b919082039182116112b557565b634e487b7160e01b600052601160045260246000fd5b919082018092116112b557565b80548210156112f05760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b80546801000000000000000081101561127a57611328916001820181556112d8565b819291549060031b91821b91600019901b1916179055565b92919361135b61135260cc54426112a8565b60cb549061154e565b948560005260d36020526040600020928354156114f4575b60cf5460405163735aad2560e01b81526001600160a01b0392831660048201526103486024820152604481019390935216606482015260a0608482015260a4810182905292602091849160c49183918190838501376000828201840152601f01601f1916810103018173__$75df3f6366b0557754cd3ba14359105414$__5af49182156114e8576000926114b3575b5060026114379160018060a01b03851660005260018101602052604060002061142c8582546112cb565b9055019182546112cb565b90556001600160a01b0316600081815260d4602052604090205490919015801561147c575b611464575050565b61147a9160005260d46020526040600020611306565b565b50600082815260d46020526040902080546000198101919082116112b55782916114a5916112d8565b90549060031b1c141561145c565b9091506020813d6020116114e0575b816114cf60209383611258565b8101031261123d5751906002611402565b3d91506114c2565b6040513d6000823e3d90fd5b60cd54908115801561152f575b611525576020938261151760c49460d2546112a8565b60d255865593509050611373565b5050505050505050565b5060d2548211611501565b80518210156112f05760209160051b010190565b8115611558570490565b634e487b7160e01b600052601260045260246000fd5b90600061158061135260cc54426112a8565b9260018060a01b03811660005260d46020526040600020906040518083602082955493848152019060005260206000209260005b8181106116905750506115c992500383611258565b815180156116865760001981019081116112b5576115e886918461153a565b510361167e57815160001981019081116112b557905b6000925b82841061161157505050509190565b9091929361161f858361153a565b5160005260d36020526040600020908154906040600060018060a01b0387168152600185016020522054918281029281840414901517156112b55761166e61167492600260019501549061154e565b906112cb565b9401929190611602565b8151906115fe565b5050505060009190565b84548352600194850194879450602090930192016115b4565b156116b057565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b60026001541461171a576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b60ff6065541661176b57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fdfea26469706673582212209694c98c0b14b86b0461499cdc9f7ff89b0c8217a400248bd74e3e1620b5285564736f6c634300081a0033";

type SpotTradingRewardDistributorConstructorParams =
  | [
      linkLibraryAddresses: SpotTradingRewardDistributorLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpotTradingRewardDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SpotTradingRewardDistributor__factory extends ContractFactory {
  constructor(...args: SpotTradingRewardDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SpotTradingRewardDistributor__factory.linkBytecode(
          linkLibraryAddresses
        ),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SpotTradingRewardDistributorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$75df3f6366b0557754cd3ba14359105414\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SpotTradingRewardDistributor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SpotTradingRewardDistributor__factory {
    return super.connect(runner) as SpotTradingRewardDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpotTradingRewardDistributorInterface {
    return new Interface(_abi) as SpotTradingRewardDistributorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SpotTradingRewardDistributor {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SpotTradingRewardDistributor;
  }
}

export interface SpotTradingRewardDistributorLibraryAddresses {
  ["contracts/libraries/PrimexPricingLibrary.sol:PrimexPricingLibrary"]: string;
}
