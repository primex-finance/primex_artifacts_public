/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TraderBalanceVault,
  TraderBalanceVaultInterface,
} from "../../../contracts/TraderBalanceVault/TraderBalanceVault";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "depositer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "availableBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockedBalance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "traders",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType:
          "struct ITraderBalanceVault.BatchTopUpAvailableBalanceParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "batchTopUpAvailableBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_trader",
        type: "address",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "increaseLockedBalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_whiteBlackList",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "topUpAvailableBalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ITraderBalanceVault.UnlockAssetParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "unlockAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "address",
            name: "depositReceiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "depositAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            internalType: "enum ITraderBalanceVault.OpenType",
            name: "openType",
            type: "uint8",
          },
        ],
        internalType: "struct ITraderBalanceVault.LockAssetParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "useTraderAssets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "fromLocked",
        type: "bool",
      },
    ],
    name: "withdrawFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608080604052346100c1576000549060ff8260081c1661006f575060ff80821603610034575b6040516119ce90816100c78239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561013a575b50361561001b57600080fd5b610023611735565b60cb54604051630723eb0360e51b81523360048201526020918290829060249082906001600160a01b03165afa90811561012e57600091610101575b506100ef5761006c611863565b341515806100e7575b156100d5573360005260ca81526040600020907399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e9182600052815260406000206100b43482546117a4565b9055600080516020611939833981519152604051913483523392a360018055005b604051633abe877f60e11b8152600490fd5b506001610075565b6040516333df015b60e01b8152600490fd5b6101219150823d8411610127575b6101198183611678565b81019061169a565b3861005f565b503d61010f565b6040513d6000823e3d90fd5b600090813560e01c90816301ffc9a714611593575080633f4ba83a14611482578063441d68ca1461137c57806347e7ef241461116e578063485cc95514610f185780635c975abb14610ef55780637b10399914610ecc5780638291732014610d735780638456cb5914610c9c578063a0fd10ad14610b9b578063b1a11ae91461090e578063c23f001f146108b8578063c268dd3114610645578063f3fef3a31461048b5763fb4ef4660361000f57346104885760a03660031901126104885760c954604051632474521560e21b815260008051602061195983398151915260048201523360248201526001600160a01b03916020908290604490829086165afa90811561047d57839161045f575b501561044d57806102576117b1565b16825260ca602052604082208161026c6117c7565b16600052602052604060002060843560038110156103c7578015801561042f575b600182036103dd5750506102a46064358254611712565b90555b806102b06117dd565b166102b9575080f35b7399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e816102d76117c7565b16146103cb5773__$183737d697d7aa9b5df9988cbe11bc4947$__90826102fc6117c7565b926103056117dd565b60643594823b156103c757604051636336129b60e11b81526001600160a01b0391821660048201529116602482015260448101859052908290829060649082905af480156103bc576103a4575b50506000805160206119798339815191529061036c6117b1565b61039e6103776117c7565b604080516001600160a01b0390921682526020820196909652919092169390918291820190565b0390a280f35b6103ad9061164e565b6103b8578238610352565b8280fd5b6040513d84823e3d90fd5b8380fd5b604051637414865560e01b8152600490fd5b156103fa57506001016103f36064358254611712565b90556102a7565b600214610408575b506102a7565b61042760016064359261041c848254611712565b8155019182546117a4565b905538610402565b8254606435111561028d575b60405163317cf4f160e01b8152600490fd5b60405163036be76f60e61b8152600490fd5b610477915060203d8111610127576101198183611678565b38610248565b6040513d85823e3d90fd5b80fd5b5034610488576040366003190112610488576104a56115e8565b6024356104b0611735565b60cb54604051630723eb0360e51b81523360048201526001600160a01b03916020908290602490829086165afa90811561063a57859161061c575b506100ef5781156100d55733845260ca60205260408420908316908160005260205260406000209081549182841161043b5761053c847399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e94611712565b90550361058d576105838161056060008051602061197983398151915293336118a7565b604080516001600160a01b03909516855260208501919091523393918291820190565b0390a26001805580f35b8273__$183737d697d7aa9b5df9988cbe11bc4947$__803b1561061857604051636336129b60e11b81526001600160a01b038516600482015233602482015260448101849052908290829060649082905af480156103bc57610604575b505061058360008051602061197983398151915291610560565b61060d9061164e565b6103b85782386105ea565b5080fd5b610634915060203d8111610127576101198183611678565b386104eb565b6040513d87823e3d90fd5b50346104885760a03660031901126104885761065f6115e8565b90610668611603565b6001600160a01b036044358181169490928584036108b457606435956084359081151582036108b0578460c95416916040518093632474521560e21b8252600080516020611959833981519152600483015233602483015281604460209687935afa9081156108a5578991610888575b501561044d571561082e578484169182885260ca815260408820828952815288600160408a2001541061043b577399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e92885260ca81526040882090828952526001604088200161073c898254611712565b90555b03610789578561076360008051602061197983398151915295969761039e936118a7565b604080516001600160a01b03909716875260208701919091529190921693918291820190565b73__$183737d697d7aa9b5df9988cbe11bc4947$__90813b1561082a57604051636336129b60e11b81526001600160a01b03868116600483015291909116602482015260448101879052908590829060649082905af4801561063a57610805575b5061039e600080516020611979833981519152939495610763565b600080516020611979833981519152939461082261039e9261164e565b9493506107ea565b8580fd5b8484169182885260ca81526040882082895281528860408920541061043b577399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e92885260ca815260408820908289525260408720610881898254611712565b905561073f565b61089f9150843d8611610127576101198183611678565b386106d8565b6040513d8b823e3d90fd5b8680fd5b8480fd5b503461048857604036600319011261048857604080916108d66115e8565b6108de611603565b9060018060a01b03809116835260ca60205283832091168252602052206001815491015482519182526020820152f35b5034610488576003196020368201126106185767ffffffffffffffff6004351161061857608090600435360301126104885760018060a01b0360c95416604051632474521560e21b8152600080516020611959833981519152600482015260208160448160249533878301525afa90811561047d578391610b7c575b501561044d57815b6064600435013581106109a3578280f35b6109c0816109ba8460043501600435600401611807565b9061183d565b356109ea575b60001981146109d757600101610992565b50634e487b7160e01b8252601160045290fd5b610a046109ff826109ba600480350180611807565b6117f3565b610a126044600435016117f3565b610a29836109ba8660043501600435600401611807565b60c954604051632474521560e21b8152600080516020611959833981519152600482015233878201529135939190602090829060449082906001600160a01b03165afa908115610b71578791610b52575b501561044d576001600160a01b038216151580610b40575b15610b2e576001600160a01b0382167399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e14610b16575b60206000805160206119398339815191529160018060a01b03169283885260ca82526040882060018060a01b0382168952825260408820610afe8682546117a4565b90556040519485526001600160a01b031693a36109c6565b8215610abc5760405163fae8279160e01b8152600490fd5b60405163044aa57560e41b8152600490fd5b506001600160a01b0381161515610a92565b610b6b915060203d602011610127576101198183611678565b38610a7a565b6040513d89823e3d90fd5b610b95915060203d602011610127576101198183611678565b3861098a565b50346104885760803660031901126104885760c954604051632474521560e21b815260008051602061195983398151915260048201523360248201526020916001600160a01b03919083908290604490829086165afa908115610c91578491610c74575b501561044d576064359181610c126117b1565b16845260ca81526040842082610c266117c7565b168552815260016040852001610c3d848254611712565b905581610c486117dd565b16845260ca81526040842091610c5c6117c7565b16845252610c6f604083209182546117a4565b905580f35b610c8b9150833d8511610127576101198183611678565b38610bff565b6040513d86823e3d90fd5b503461048857806003193601126104885760c954604051632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb600482015233602482015290602090829060449082906001600160a01b03165afa9081156103bc578291610d55575b501561044d57610d1b611863565b600160ff1960655416176065557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b610d6d915060203d8111610127576101198183611678565b38610d0d565b50610d7d36611619565b60c954604051632474521560e21b815260008051602061195983398151915260048201523360248201526001600160a01b039492936020929091908390829060449082908a165afa908115610b71578791610eaf575b501561044d578416937399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e8503610e3e575b83156100d55760008051602061193983398151915292169283865260ca825260408620858752825260016040872001610e328282546117a4565b9055604051908152a380f35b60405163313ce56760e01b81528281600481895afa908115610b715760129160ff918991610e82575b50161115610df8575b60405163b7c73c5d60e01b8152600490fd5b610ea29150853d8711610ea8575b610e9a8183611678565b81019061178b565b38610e67565b503d610e90565b610ec69150833d8511610127576101198183611678565b38610dd3565b503461048857806003193601126104885760c9546040516001600160a01b039091168152602090f35b5034610488578060031936011261048857602060ff606554166040519015158152f35b503461048857604036600319011261048857610f326115e8565b610f3a611603565b82549160ff8360081c161590818092611161575b801561114a575b156110ee5760ff19848116600117865593826110dd575b506040516301ffc9a760e01b808252637965db0b60e01b60048301526020946001600160a01b03938416939290918682602481885afa9182156108a55789926110be575b5081611062575b5015610b2e576bffffffffffffffffffffffff60a01b928360c954161760c955169060cb54161760cb5561102384549360ff8560081c1690610ff8826116b2565b611001826116b2565b60655416606555611011816116b2565b61101a816116b2565b600180556116b2565b61102b578280f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989161ff001916835560405160018152a138808280f35b604051908152633df6cef760e01b6004820152905085816024818587165afa9081156110b3578891611096575b5038610fb7565b6110ad9150863d8811610127576101198183611678565b3861108f565b6040513d8a823e3d90fd5b6110d6919250873d8911610127576101198183611678565b9038610fb0565b61ffff191661010117855538610f6c565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015610f555750600160ff851614610f55565b50600160ff851610610f4e565b506040366003190112610488576111836115e8565b60243561118e611735565b60cb54604051630723eb0360e51b81523360048201526001600160a01b039260209290919083908290602490829088165afa908115611371578691611354575b506100ef576111db611863565b80928416937399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e851460001461125e57509091503415159081611255575b50156100d55760008051602061193983398151915234915b33855260ca8152604085208486528152604085206112438482546117a4565b90556040519283523392a36001805580f35b9050153861120c565b34158061134b575b156100d55760405163313ce56760e01b81528381600481895afa908115610b715760129160ff91899161132e575b501611610e705760405163c37f7f7f60e01b81526001600160a01b039190911660048201523360248201526044810191909152818160648173__$183737d697d7aa9b5df9988cbe11bc4947$__5af4801561063a57611304575b5060008051602061193983398151915290611224565b8190813d8311611327575b6113198183611678565b810103126103c757386112ee565b503d61130f565b6113459150863d8811610ea857610e9a8183611678565b38611294565b50811515611266565b61136b9150833d8511610127576101198183611678565b386111ce565b6040513d88823e3d90fd5b5061138636611619565b60c954604051632474521560e21b815260008051602061195983398151915260048201523360248201526001600160a01b039492936020929091908390829060449082908a165afa908115610b71578791611465575b501561044d578416938415158061145a575b15610b2e577399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e8514611440575b60008051602061193983398151915292169283865260ca825260408620858752825260408620610e328282546117a4565b8334101561140f5760405163fae8279160e01b8152600490fd5b5080831615156113ee565b61147c9150833d8511610127576101198183611678565b386113dc565b503461048857806003193601126104885760c954604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8600482015233602482015290602090829060449082906001600160a01b03165afa9081156103bc578291611575575b501561044d5760655460ff8116156115395760ff19166065557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b61158d915060203d8111610127576101198183611678565b386114f3565b9050346106185760203660031901126106185760043563ffffffff60e01b81168091036103b857602092506301ffc9a760e01b81149081156115d7575b5015158152f35b6312b3ed2b60e01b149050386115d0565b600435906001600160a01b03821682036115fe57565b600080fd5b602435906001600160a01b03821682036115fe57565b60609060031901126115fe576001600160a01b039060043582811681036115fe579160243590811681036115fe579060443590565b67ffffffffffffffff811161166257604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761166257604052565b908160209103126115fe575180151581036115fe5790565b156116b957565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b9190820391821161171f57565b634e487b7160e01b600052601160045260246000fd5b600260015414611746576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b908160209103126115fe575160ff811681036115fe5790565b9190820180921161171f57565b6004356001600160a01b03811681036115fe5790565b6044356001600160a01b03811681036115fe5790565b6024356001600160a01b03811681036115fe5790565b356001600160a01b03811681036115fe5790565b903590601e19813603018212156115fe570180359067ffffffffffffffff82116115fe57602001918160051b360383136115fe57565b919081101561184d5760051b0190565b634e487b7160e01b600052603260045260246000fd5b60ff6065541661186f57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b60405167ffffffffffffffff919060208101838111828210176116625760405260008080958194828095525af1913d15611931573d91821161191d57604051916118fb601f8201601f191660200184611678565b825260203d92013e5b1561190b57565b60405163c71509d160e01b8152600490fd5b634e487b7160e01b81526041600452602490fd5b505061190456fe5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62e965846df3dd5b1dfa65f58e31477079e90140e0908b6dd31b5aead5a57cf3659b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eba2646970667358221220e2625f67d91d76882cbd867115f7ae0978319d6f3b1bb752c0b196d5c1732d0364736f6c63430008120033";

type TraderBalanceVaultConstructorParams =
  | [linkLibraryAddresses: TraderBalanceVaultLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TraderBalanceVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TraderBalanceVault__factory extends ContractFactory {
  constructor(...args: TraderBalanceVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        TraderBalanceVault__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: TraderBalanceVaultLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$183737d697d7aa9b5df9988cbe11bc4947\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TraderBalanceVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TraderBalanceVault__factory {
    return super.connect(runner) as TraderBalanceVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TraderBalanceVaultInterface {
    return new Interface(_abi) as TraderBalanceVaultInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TraderBalanceVault {
    return new Contract(address, _abi, runner) as unknown as TraderBalanceVault;
  }
}

export interface TraderBalanceVaultLibraryAddresses {
  ["contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"]: string;
}
