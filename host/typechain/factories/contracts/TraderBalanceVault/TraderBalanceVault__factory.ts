/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TraderBalanceVault,
  TraderBalanceVaultInterface,
} from "../../../contracts/TraderBalanceVault/TraderBalanceVault";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "depositer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "availableBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockedBalance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "traders",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType:
          "struct ITraderBalanceVault.BatchTopUpAvailableBalanceParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "batchTopUpAvailableBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_traders",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "getBalancesForAddresses",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_trader",
        type: "address",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "increaseLockedBalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_whiteBlackList",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "topUpAvailableBalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ITraderBalanceVault.UnlockAssetParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "unlockAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "address",
            name: "depositReceiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "depositAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            internalType: "enum ITraderBalanceVault.OpenType",
            name: "openType",
            type: "uint8",
          },
        ],
        internalType: "struct ITraderBalanceVault.LockAssetParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "useTraderAssets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "fromLocked",
        type: "bool",
      },
    ],
    name: "withdrawFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080806040523460bd576000549060ff8260081c16606b575060ff808216036031575b604051611bfa90816100c38239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a1386022565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe6080806040526004361015610150575b50361561001b57600080fd5b6100236119e9565b60cb54604051630723eb0360e51b815233600482015290602090829060249082906001600160a01b03165afa90811561014457600091610115575b506101035761006b611a3f565b341515806100fb575b156100e9573360005260ca60205260406000207399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e60005260205260406000206100b2348254611890565b90557399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e604051348152600080516020611b6583398151915260203392a360018055005b604051633abe877f60e11b8152600490fd5b506001610074565b6040516333df015b60e01b8152600490fd5b610137915060203d60201161013d575b61012f8183611840565b810190611878565b3861005e565b503d610125565b6040513d6000823e3d90fd5b600090813560e01c90816301ffc9a714611734575080633f4ba83a14611622578063441d68ca1461150857806347e7ef2414611303578063485cc9551461109d578063543fcebd14610f545780635c975abb14610f315780637b10399914610f085780638291732014610d9e5780638456cb5914610cc6578063a0fd10ad14610bae578063b1a11ae91461095f578063c23f001f14610904578063c268dd311461067c578063f3fef3a3146104b95763fb4ef4660361000f57346104b65760a03660031901126104b65760c954604051632474521560e21b8152600080516020611b85833981519152600482015233602482015290602090829060449082906001600160a01b03165afa9081156103f0578291610497575b5015610485576001600160a01b0361027e61193c565b16815260ca6020526040808220610293611952565b6001600160a01b031660009081526020919091522060843560038110156104815780158015610463575b600182036104115750506102d460643582546119a6565b90555b6001600160a01b036102e7611968565b166102ef5780f35b7399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e6001600160a01b03610314611952565b16146103ff5773__$183737d697d7aa9b5df9988cbe11bc4947$__81610338611952565b91610341611968565b60643593823b156103fb57604051636336129b60e11b81526001600160a01b0391821660048201529116602482015260448101849052908290829060649082905af480156103f0576103d7575b5050600080516020611ba58339815191526103a761193c565b916103b0611952565b604080516001600160a01b0392831681526020810193909352931692819081015b0390a280f35b816103e191611840565b6103ec57813861038e565b5080fd5b6040513d84823e3d90fd5b8380fd5b604051637414865560e01b8152600490fd5b1561042e575060010161042760643582546119a6565b90556102d7565b60021461043c575b506102d7565b61045b6001606435926104508482546119a6565b815501918254611890565b905538610436565b825460643511156102bd575b60405163317cf4f160e01b8152600490fd5b8280fd5b60405163036be76f60e61b8152600490fd5b6104b0915060203d60201161013d5761012f8183611840565b38610268565b80fd5b50346104b65760403660031901126104b6576104d36117a1565b6024356104de6119e9565b60cb54604051630723eb0360e51b815233600482015290602090829060249082906001600160a01b03165afa908115610671578491610652575b506101035780156100e95733835260ca6020526040832060018060a01b0383166000526020526040600020805480831161046f5782610556916119a6565b90556001600160a01b0382167399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e036105c6576105bc81610599600080516020611ba58339815191529333611ae3565b604080516001600160a01b03909516855260208501919091523393918291820190565b0390a26001805580f35b8273__$183737d697d7aa9b5df9988cbe11bc4947$__803b156103ec57604051636336129b60e11b81526001600160a01b038516600482015233602482015260448101849052908290829060649082905af480156103f05761063d575b50506105bc600080516020611ba583398151915291610599565b8161064791611840565b610481578238610623565b61066b915060203d60201161013d5761012f8183611840565b38610518565b6040513d86823e3d90fd5b50346104b65760a03660031901126104b6576106966117a1565b61069e6117bc565b604435916001600160a01b03831691828403610900576064359260843580151581036108fc5760c954604051632474521560e21b8152600080516020611b85833981519152600482015233602482015290602090829060449082906001600160a01b03165afa9081156108f15788916108d2575b5015610485571561086e5760018060a01b0383169081875260ca602052604087208188526020528460016040892001541061046f577399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e91875260ca60205260408720818852602052600160408820016107808682546119a6565b90555b036107c857906107a383600080516020611ba58339815191529493611ae3565b604080516001600160a01b0395861681526020810193909352931692819081016103d1565b8473__$183737d697d7aa9b5df9988cbe11bc4947$__91823b156103ec57604051636336129b60e11b81526001600160a01b0387811660048301529190911660248201526044810185905291829060649082905af480156108635761083f575b5090600080516020611ba5833981519152916107a3565b9361085b81600080516020611ba5833981519152949396611840565b939091610828565b6040513d87823e3d90fd5b60018060a01b0383169081875260ca602052604087208188526020528460408820541061046f577399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e91875260ca60205260408720818852602052604087206108cb8682546119a6565b9055610783565b6108eb915060203d60201161013d5761012f8183611840565b38610712565b6040513d8a823e3d90fd5b8680fd5b8480fd5b50346104b65760403660031901126104b657604080916109226117a1565b61092a6117bc565b9060018060a01b0316825260ca6020528282209060018060a01b03168252602052206001815491015482519182526020820152f35b50346104b65760203660031901126104b65760043567ffffffffffffffff81116103ec5780600401608060031983360301126104815760c954604051632474521560e21b8152600080516020611b85833981519152600482015233602482015290602090829060449082906001600160a01b03165afa908115610671578491610b8f575b50156104855760648201359060248301845b838110610a00578580f35b610a1481610a0e84866119b3565b90611916565b35610a22575b6001016109f5565b610a38610a3382610a0e86806119b3565b61197e565b90610a456044870161197e565b610a5382610a0e86886119b3565b60c954604051632474521560e21b8152600080516020611b8583398151915260048201523360248201529135929190602090829060449082906001600160a01b03165afa908115610b84578a91610b66575b5015610485576001600160a01b03169081151580610b54575b15610b42577399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e8214610b2a575b600080516020611b658339815191526020600195868060a01b031692838c5260ca825260408c20858d52825260408c20610b1a828254611890565b9055604051908152a39050610a1a565b8015610adf5760405163fae8279160e01b8152600490fd5b60405163044aa57560e41b8152600490fd5b506001600160a01b0384161515610abe565b610b7e915060203d811161013d5761012f8183611840565b38610aa5565b6040513d8c823e3d90fd5b610ba8915060203d60201161013d5761012f8183611840565b386109e3565b50346104b65760803660031901126104b65760c954604051632474521560e21b8152600080516020611b85833981519152600482015233602482015290602090829060449082906001600160a01b03165afa9081156103f0578291610ca7575b5015610485576064356001600160a01b03610c2761193c565b16825260ca60205260408220610c3b611952565b6001600160a01b03168352602052604082206001018054610c5d9083906119a6565b90556001600160a01b03610c6f611968565b16825260ca60205260408220610c83611952565b6001600160a01b031683526020526040822080549091610ca291611890565b905580f35b610cc0915060203d60201161013d5761012f8183611840565b38610c0e565b50346104b657806003193601126104b65760c954604051632474521560e21b81527f5c91514091af31f62f596a314af7d5be40146b2f2355969392f055e12e0982fb600482015233602482015290602090829060449082906001600160a01b03165afa9081156103f0578291610d7f575b501561048557610d45611a3f565b600160ff1960655416176065557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b610d98915060203d60201161013d5761012f8183611840565b38610d37565b50610da8366117d2565b60c954604051632474521560e21b8152600080516020611b85833981519152600482015233602482015291929190602090829060449082906001600160a01b03165afa908115610863578591610ee9575b5015610485576001600160a01b0316917399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9d198301610e75575b81156100e9576020600080516020611b658339815191529160018060a01b03169283865260ca825260408620858752825260016040872001610e69828254611890565b9055604051908152a380f35b60405163313ce56760e01b8152602081600481875afa9081156108635760129160ff918791610eba575b50161115610e26575b60405163b7c73c5d60e01b8152600490fd5b610edc915060203d602011610ee2575b610ed48183611840565b8101906118b3565b38610e9f565b503d610eca565b610f02915060203d60201161013d5761012f8183611840565b38610df9565b50346104b657806003193601126104b65760c9546040516001600160a01b039091168152602090f35b50346104b657806003193601126104b657602060ff606554166040519015158152f35b50346104b65760403660031901126104b65760043567ffffffffffffffff81116103ec57366023820112156103ec5780600401359067ffffffffffffffff8211610481576024810190602436918460051b01011161048157610fb46117bc565b91610fbe816118e4565b92610fc8826118e4565b926001600160a01b0390911690855b83811061100c57610ffa866110088760405193849360408552604085019061180c565b90838203602085015261180c565b0390f35b6001600160a01b03611022610a33838786611916565b16875260ca6020526040872083885260205260408720604051906040820182811067ffffffffffffffff8211176110895790600193929160405260208482549283855201549201918252611076838a611992565b52516110828288611992565b5201610fd7565b634e487b7160e01b8a52604160045260248afd5b50346104b65760403660031901126104b6576110b76117a1565b6110bf6117bc565b82549160ff8360081c1615928380946112f6575b80156112df575b156112835760ff198116600117855583611272575b506040516301ffc9a760e01b8152637965db0b60e01b60048201526001600160a01b039190911690602081602481855afa908115610863578591611253575b50806111f3575b15610b42576bffffffffffffffffffffffff60a01b60c954161760c95560018060a01b03166bffffffffffffffffffffffff60a01b60cb54161760cb558154906111b660ff8360081c1661118881611a83565b61119181611a83565b60ff19606554166065556111a481611a83565b6111ad81611a83565b60018055611a83565b6111be575080f35b61ff00191681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b506040516301ffc9a760e01b8152633df6cef760e01b60048201526020816024816001600160a01b0387165afa908115610863578591611234575b50611135565b61124d915060203d60201161013d5761012f8183611840565b3861122e565b61126c915060203d60201161013d5761012f8183611840565b3861112e565b61ffff1916610101178455386110ef565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156110da5750600160ff8216146110da565b50600160ff8216106110d3565b5060403660031901126104b6576113186117a1565b6024356113236119e9565b60cb54604051630723eb0360e51b815233600482015290602090829060249082906001600160a01b03165afa9081156106715784916114e9575b506101035761136a611a3f565b6001600160a01b0382169181907399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e84036113f357503415159150816113ea575b50156100e957345b33835260ca60205260408320828452602052604083206113c7828254611890565b9055604051908152600080516020611b6583398151915260203392a36001805580f35b9050153861139e565b3415806114e0575b156100e95760405163313ce56760e01b8152602081600481885afa9081156114d55760129160ff9188916114b6575b501611610ea85760405163c37f7f7f60e01b81526001600160a01b03919091166004820152336024820152604481019190915260208160648173__$183737d697d7aa9b5df9988cbe11bc4947$__5af480156106715761148b575b506113a6565b602090813d83116114af575b6114a18183611840565b810103126104815738611485565b503d611497565b6114cf915060203d602011610ee257610ed48183611840565b3861142a565b6040513d88823e3d90fd5b508115156113fb565b611502915060203d60201161013d5761012f8183611840565b3861135d565b50611512366117d2565b60c954604051632474521560e21b8152600080516020611b85833981519152600482015233602482015291929190602090829060449082906001600160a01b03165afa908115610863578591611603575b5015610485576001600160a01b031691821515806115f1575b15610b42577399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e83146115d7575b6020600080516020611b658339815191529160018060a01b03169283865260ca825260408620858752825260408620610e69828254611890565b8134101561159d5760405163fae8279160e01b8152600490fd5b506001600160a01b038116151561157c565b61161c915060203d60201161013d5761012f8183611840565b38611563565b50346104b657806003193601126104b65760c954604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d8600482015233602482015290602090829060449082906001600160a01b03165afa9081156103f0578291611715575b50156104855760655460ff8116156116d95760ff19166065557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b61172e915060203d60201161013d5761012f8183611840565b38611693565b9050346103ec5760203660031901126103ec5760043563ffffffff60e01b811680910361048157602092506301ffc9a760e01b8114908115611790575b811561177f575b5015158152f35b6312b3ed2b60e01b14905038611778565b63543fcebd60e01b81149150611771565b600435906001600160a01b03821682036117b757565b600080fd5b602435906001600160a01b03821682036117b757565b60609060031901126117b7576004356001600160a01b03811681036117b757906024356001600160a01b03811681036117b7579060443590565b906020808351928381520192019060005b81811061182a5750505090565b825184526020938401939092019160010161181d565b90601f8019910116810190811067ffffffffffffffff82111761186257604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126117b7575180151581036117b75790565b9190820180921161189d57565b634e487b7160e01b600052601160045260246000fd5b908160209103126117b7575160ff811681036117b75790565b67ffffffffffffffff81116118625760051b60200190565b906118ee826118cc565b6118fb6040519182611840565b828152809261190c601f19916118cc565b0190602036910137565b91908110156119265760051b0190565b634e487b7160e01b600052603260045260246000fd5b6004356001600160a01b03811681036117b75790565b6044356001600160a01b03811681036117b75790565b6024356001600160a01b03811681036117b75790565b356001600160a01b03811681036117b75790565b80518210156119265760209160051b010190565b9190820391821161189d57565b903590601e19813603018212156117b7570180359067ffffffffffffffff82116117b757602001918160051b360383136117b757565b6002600154146119fa576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b60ff60655416611a4b57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b15611a8a57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b6000809160209360405190611af88683611840565b83825285820191601f19870136843751925af1903d15611b5e573d9067ffffffffffffffff8211611862576040519160009190611b3e601f8201601f1916830185611840565b83523d92013e5b15611b4c57565b60405163c71509d160e01b8152600490fd5b50611b4556fe5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62e965846df3dd5b1dfa65f58e31477079e90140e0908b6dd31b5aead5a57cf3659b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eba2646970667358221220e21fb20fc022ae35fe8228cc8e43c5746eb24b8f98d35f6571c8931a7b209a0764736f6c634300081a0033";

type TraderBalanceVaultConstructorParams =
  | [linkLibraryAddresses: TraderBalanceVaultLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TraderBalanceVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TraderBalanceVault__factory extends ContractFactory {
  constructor(...args: TraderBalanceVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        TraderBalanceVault__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: TraderBalanceVaultLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$183737d697d7aa9b5df9988cbe11bc4947\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TraderBalanceVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TraderBalanceVault__factory {
    return super.connect(runner) as TraderBalanceVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TraderBalanceVaultInterface {
    return new Interface(_abi) as TraderBalanceVaultInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TraderBalanceVault {
    return new Contract(address, _abi, runner) as unknown as TraderBalanceVault;
  }
}

export interface TraderBalanceVaultLibraryAddresses {
  ["contracts/libraries/TokenTransfersLibrary.sol:TokenTransfersLibrary"]: string;
}
