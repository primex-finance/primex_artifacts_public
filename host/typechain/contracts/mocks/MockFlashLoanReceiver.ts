/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export interface MockFlashLoanReceiverInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "executeOperation"
      | "getAmountToApprove"
      | "setAmountToApprove"
      | "setFailExecutionTransfer"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic: "ExecutedWithFail" | "ExecutedWithSuccess"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "executeOperation",
    values: [
      AddressLike[],
      BigNumberish[],
      BigNumberish[],
      AddressLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getAmountToApprove",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setAmountToApprove",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setFailExecutionTransfer",
    values: [boolean]
  ): string;

  decodeFunctionResult(
    functionFragment: "executeOperation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAmountToApprove",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAmountToApprove",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFailExecutionTransfer",
    data: BytesLike
  ): Result;
}

export namespace ExecutedWithFailEvent {
  export type InputTuple = [
    _assets: AddressLike[],
    _amounts: BigNumberish[],
    _flashLoanFees: BigNumberish[]
  ];
  export type OutputTuple = [
    _assets: string[],
    _amounts: bigint[],
    _flashLoanFees: bigint[]
  ];
  export interface OutputObject {
    _assets: string[];
    _amounts: bigint[];
    _flashLoanFees: bigint[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ExecutedWithSuccessEvent {
  export type InputTuple = [
    _assets: AddressLike[],
    _amounts: BigNumberish[],
    _flashLoanFees: BigNumberish[]
  ];
  export type OutputTuple = [
    _assets: string[],
    _amounts: bigint[],
    _flashLoanFees: bigint[]
  ];
  export interface OutputObject {
    _assets: string[];
    _amounts: bigint[];
    _flashLoanFees: bigint[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface MockFlashLoanReceiver extends BaseContract {
  connect(runner?: ContractRunner | null): MockFlashLoanReceiver;
  waitForDeployment(): Promise<this>;

  interface: MockFlashLoanReceiverInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  executeOperation: TypedContractMethod<
    [
      assets: AddressLike[],
      amounts: BigNumberish[],
      flashLoanFees: BigNumberish[],
      arg3: AddressLike,
      params: BytesLike
    ],
    [boolean],
    "nonpayable"
  >;

  getAmountToApprove: TypedContractMethod<[], [bigint], "view">;

  setAmountToApprove: TypedContractMethod<
    [amountToApprove: BigNumberish],
    [void],
    "nonpayable"
  >;

  setFailExecutionTransfer: TypedContractMethod<
    [fail: boolean],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "executeOperation"
  ): TypedContractMethod<
    [
      assets: AddressLike[],
      amounts: BigNumberish[],
      flashLoanFees: BigNumberish[],
      arg3: AddressLike,
      params: BytesLike
    ],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "getAmountToApprove"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "setAmountToApprove"
  ): TypedContractMethod<[amountToApprove: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setFailExecutionTransfer"
  ): TypedContractMethod<[fail: boolean], [void], "nonpayable">;

  getEvent(
    key: "ExecutedWithFail"
  ): TypedContractEvent<
    ExecutedWithFailEvent.InputTuple,
    ExecutedWithFailEvent.OutputTuple,
    ExecutedWithFailEvent.OutputObject
  >;
  getEvent(
    key: "ExecutedWithSuccess"
  ): TypedContractEvent<
    ExecutedWithSuccessEvent.InputTuple,
    ExecutedWithSuccessEvent.OutputTuple,
    ExecutedWithSuccessEvent.OutputObject
  >;

  filters: {
    "ExecutedWithFail(address[],uint256[],uint256[])": TypedContractEvent<
      ExecutedWithFailEvent.InputTuple,
      ExecutedWithFailEvent.OutputTuple,
      ExecutedWithFailEvent.OutputObject
    >;
    ExecutedWithFail: TypedContractEvent<
      ExecutedWithFailEvent.InputTuple,
      ExecutedWithFailEvent.OutputTuple,
      ExecutedWithFailEvent.OutputObject
    >;

    "ExecutedWithSuccess(address[],uint256[],uint256[])": TypedContractEvent<
      ExecutedWithSuccessEvent.InputTuple,
      ExecutedWithSuccessEvent.OutputTuple,
      ExecutedWithSuccessEvent.OutputObject
    >;
    ExecutedWithSuccess: TypedContractEvent<
      ExecutedWithSuccessEvent.InputTuple,
      ExecutedWithSuccessEvent.OutputTuple,
      ExecutedWithSuccessEvent.OutputObject
    >;
  };
}
