/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FPISLockerUtils,
  FPISLockerUtilsInterface,
} from "../../../VestedPMX-and-Flox/FPISLocker/FPISLockerUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_FPISLocker",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MAX_BASIS_POINTS_UINT256",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VOTE_END_POWER_BASIS_POINTS_UINT256",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fpis",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128[]",
        name: "_fpisAmounts",
        type: "int128[]",
      },
      {
        internalType: "uint128[]",
        name: "_lockSecsU128",
        type: "uint128[]",
      },
    ],
    name: "getCrudeExpectedLFPISMultiLock",
    outputs: [
      {
        internalType: "uint256",
        name: "_expectedLFPIS",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "_fpisAmount",
        type: "int128",
      },
      {
        internalType: "uint128",
        name: "_lockSecsU128",
        type: "uint128",
      },
    ],
    name: "getCrudeExpectedLFPISOneLock",
    outputs: [
      {
        internalType: "uint256",
        name: "_expectedLFPIS",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getCrudeExpectedLFPISUser",
    outputs: [
      {
        internalType: "uint256",
        name: "_expectedLFPIS",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getDetailedUserLockInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "numberOfLocks",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint128",
                name: "index",
                type: "uint128",
              },
              {
                internalType: "int128",
                name: "amount",
                type: "int128",
              },
              {
                internalType: "uint128",
                name: "end",
                type: "uint128",
              },
            ],
            internalType: "struct IlFPISStructs.LockedBalanceExtended[]",
            name: "allLocks",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint128",
                name: "index",
                type: "uint128",
              },
              {
                internalType: "int128",
                name: "amount",
                type: "int128",
              },
              {
                internalType: "uint128",
                name: "end",
                type: "uint128",
              },
            ],
            internalType: "struct IlFPISStructs.LockedBalanceExtended[]",
            name: "activeLocks",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint128",
                name: "index",
                type: "uint128",
              },
              {
                internalType: "int128",
                name: "amount",
                type: "int128",
              },
              {
                internalType: "uint128",
                name: "end",
                type: "uint128",
              },
            ],
            internalType: "struct IlFPISStructs.LockedBalanceExtended[]",
            name: "expiredLocks",
            type: "tuple[]",
          },
          {
            internalType: "int128[3]",
            name: "totalFpis",
            type: "int128[3]",
          },
        ],
        internalType: "struct IlFPISStructs.DetailedUserLockInfo",
        name: "_userLockInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_users",
        type: "address[]",
      },
    ],
    name: "getDetailedUserLockInfoBulk",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "numberOfLocks",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint128",
                name: "index",
                type: "uint128",
              },
              {
                internalType: "int128",
                name: "amount",
                type: "int128",
              },
              {
                internalType: "uint128",
                name: "end",
                type: "uint128",
              },
            ],
            internalType: "struct IlFPISStructs.LockedBalanceExtended[]",
            name: "allLocks",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint128",
                name: "index",
                type: "uint128",
              },
              {
                internalType: "int128",
                name: "amount",
                type: "int128",
              },
              {
                internalType: "uint128",
                name: "end",
                type: "uint128",
              },
            ],
            internalType: "struct IlFPISStructs.LockedBalanceExtended[]",
            name: "activeLocks",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint128",
                name: "index",
                type: "uint128",
              },
              {
                internalType: "int128",
                name: "amount",
                type: "int128",
              },
              {
                internalType: "uint128",
                name: "end",
                type: "uint128",
              },
            ],
            internalType: "struct IlFPISStructs.LockedBalanceExtended[]",
            name: "expiredLocks",
            type: "tuple[]",
          },
          {
            internalType: "int128[3]",
            name: "totalFpis",
            type: "int128[3]",
          },
        ],
        internalType: "struct IlFPISStructs.DetailedUserLockInfo[]",
        name: "_userLockInfos",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getLongestLock",
    outputs: [
      {
        components: [
          {
            internalType: "int128",
            name: "amount",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "end",
            type: "uint128",
          },
        ],
        internalType: "struct IlFPISStructs.LockedBalance",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
    ],
    name: "getLongestLockBulk",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "int128",
                name: "amount",
                type: "int128",
              },
              {
                internalType: "uint128",
                name: "end",
                type: "uint128",
              },
            ],
            internalType: "struct IlFPISStructs.LockedBalance",
            name: "lock",
            type: "tuple",
          },
          {
            internalType: "uint128",
            name: "lockIndex",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
        ],
        internalType: "struct IlFPISStructs.LongestLock[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lFPIS",
    outputs: [
      {
        internalType: "contract IFPISLocker",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051612e7b380380612e7b83398181016040528101906100329190610173565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060805173ffffffffffffffffffffffffffffffffffffffff16635d4ca5946040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d79190610173565b73ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050506101a0565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061014082610115565b9050919050565b61015081610135565b811461015b57600080fd5b50565b60008151905061016d81610147565b92915050565b60006020828403121561018957610188610110565b5b60006101978482850161015e565b91505092915050565b60805160a051612c3161024a60003960006110df01526000818161028901528181610431015281816104ec0152818161057b01528181610621015281816106b00152818161073f015281816107f80152818161088701528181610a1901528181610bc601528181610c6301528181611109015281816111380152818161125401528181611355015281816114290152818161163a0152818161170901526118240152612c316000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80635d4ca594116100715780635d4ca5941461018c578063bbf79dc1146101aa578063d47ada66146101c8578063f37461ab146101e6578063f78fcccc14610217578063fb908ddd14610247576100a9565b806302dc3a33146100ae57806303802473146100de5780630e5f6d5d146100fc57806329d71cb61461012c5780633c5933121461015c575b600080fd5b6100c860048036038101906100c39190611b50565b610277565b6040516100d59190611b96565b60405180910390f35b6100e6610427565b6040516100f39190611b96565b60405180910390f35b61011660048036038101906101119190611c32565b61042d565b6040516101239190611b96565b60405180910390f35b61014660048036038101906101419190611dcb565b61094f565b604051610153919061214a565b60405180910390f35b61017660048036038101906101719190611b50565b610a0d565b6040516101839190612204565b60405180910390f35b6101946110dd565b6040516101a19190612285565b60405180910390f35b6101b2611101565b6040516101bf9190611b96565b60405180910390f35b6101d0611107565b6040516101dd91906122c1565b60405180910390f35b61020060048036038101906101fb9190611b50565b61112b565b60405161020e92919061231a565b60405180910390f35b610231600480360381019061022c91906124c9565b611424565b60405161023e9190611b96565b60405180910390f35b610261600480360381019061025c9190611dcb565b6115c1565b60405161026e9190612661565b60405180910390f35b60008061028383610a0d565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f89464856040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031691906126bb565b905060005b8260200151816fffffffffffffffffffffffffffffffff16101561041f5760008360400151826fffffffffffffffffffffffffffffffff1681518110610364576103636126e8565b5b6020026020010151905082156103a857612710610d028260400151600f0b61038c9190612746565b61039691906127b7565b856103a191906127e8565b9450610413565b6000426fffffffffffffffffffffffffffffffff1682606001516fffffffffffffffffffffffffffffffff1610156103e357600090506103f6565b4282606001516103f3919061281c565b90505b61040482604001518261042d565b8661040f91906127e8565b9550505b8160010191505061031b565b505050919050565b610d0281565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f89464856040518163ffffffff1660e01b8152600401602060405180830381865afa15801561049a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104be91906126bb565b156104e857612710610d0284600f0b6104d79190612746565b6104e191906127b7565b9050610949565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637c10d93a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610555573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105799190612875565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637c10d93a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106089190612875565b8461061391906128a2565b61061d91906128d3565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632de4fceb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561068a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ae9190612925565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637aa9b5566040518163ffffffff1660e01b8152600401602060405180830381865afa158015610719573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073d9190612925565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663fc26cf346040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cc9190612925565b83876107d89190612952565b6107e29190612952565b6107ec919061298f565b6107f6919061298f565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632de4fceb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610861573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108859190612925565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ced3c9e46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109149190612925565b8661091f9190612952565b610929919061298f565b61093391906129f9565b6fffffffffffffffffffffffffffffffff169150505b92915050565b60606000825190508067ffffffffffffffff81111561097157610970611c88565b5b6040519080825280602002602001820160405280156109aa57816020015b61099761199d565b81526020019060019003908161098f5790505b50915060005b81811015610a06576109db8482815181106109ce576109cd6126e8565b5b6020026020010151610a0d565b8382815181106109ee576109ed6126e8565b5b602002602001018190525080806001019150506109b0565b5050919050565b610a1561199d565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b9ef0830846040518263ffffffff1660e01b8152600401610a709190612a70565b602060405180830381865afa158015610a8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab19190612875565b6fffffffffffffffffffffffffffffffff16905060008183602001818152505083836000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508167ffffffffffffffff811115610b2357610b22611c88565b5b604051908082528060200260200182016040528015610b5c57816020015b610b496119ef565b815260200190600190039081610b415790505b50836040018190525060008267ffffffffffffffff811115610b8157610b80611c88565b5b604051908082528060200260200182016040528015610baf5781602001602082028036833780820191505090505b50905060005b846040015151811015610f0c5760007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166321c984e988846040518363ffffffff1660e01b8152600401610c1f929190612a8b565b6040805180830381865afa158015610c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5f9190612b09565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635f96d4e788846040518363ffffffff1660e01b8152600401610cbc929190612a8b565b602060405180830381865afa158015610cd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfd9190612b62565b86604001518381518110610d1457610d136126e8565b5b602002602001015160000181815250508186604001518381518110610d3c57610d3b6126e8565b5b6020026020010151602001906fffffffffffffffffffffffffffffffff1690816fffffffffffffffffffffffffffffffff1681525050806000015186604001518381518110610d8e57610d8d6126e8565b5b602002602001015160400190600f0b9081600f0b81525050806020015186604001518381518110610dc257610dc16126e8565b5b6020026020010151606001906fffffffffffffffffffffffffffffffff1690816fffffffffffffffffffffffffffffffff168152505080600001518660a00151600060038110610e1557610e146126e8565b5b60200201818151610e2691906129f9565b915090600f0b9081600f0b815250504281602001516fffffffffffffffffffffffffffffffff161115610ec2576001838381518110610e6857610e676126e8565b5b60200260200101901515908115158152505080600001518660a00151600160038110610e9757610e966126e8565b5b60200201818151610ea891906129f9565b915090600f0b9081600f0b81525050836001019350610f00565b80600001518660a00151600260038110610edf57610ede6126e8565b5b60200201818151610ef091906129f9565b915090600f0b9081600f0b815250505b81600101915050610bb5565b50816fffffffffffffffffffffffffffffffff1667ffffffffffffffff811115610f3957610f38611c88565b5b604051908082528060200260200182016040528015610f7257816020015b610f5f6119ef565b815260200190600190039081610f575790505b508460600181905250816fffffffffffffffffffffffffffffffff1683610f999190612b8f565b67ffffffffffffffff811115610fb257610fb1611c88565b5b604051908082528060200260200182016040528015610feb57816020015b610fd86119ef565b815260200190600190039081610fd05790505b50846080018190525060008060005b8660400151518110156110d2576000876040015182815181106110205761101f6126e8565b5b6020026020010151905084828151811061103d5761103c6126e8565b5b60200260200101511561108a57808860600151856fffffffffffffffffffffffffffffffff1681518110611074576110736126e8565b5b60200260200101819052508360010193506110c6565b808860800151846fffffffffffffffffffffffffffffffff16815181106110b4576110b36126e8565b5b60200260200101819052508260010192505b81600101915050610ffa565b505050505050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61271081565b7f000000000000000000000000000000000000000000000000000000000000000081565b611133611a3e565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b9ef0830856040518263ffffffff1660e01b815260040161118f9190612a70565b602060405180830381865afa1580156111ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d09190612875565b6fffffffffffffffffffffffffffffffff1667ffffffffffffffff8111156111fb576111fa611c88565b5b60405190808252806020026020018201604052801561123457816020015b611221611a3e565b8152602001906001900390816112195790505b50905061123f611a3e565b600080600090505b83518110156114155760007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166321c984e989846040518363ffffffff1660e01b81526004016112ad929190612a8b565b6040805180830381865afa1580156112c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ed9190612b09565b60200151905083602001516fffffffffffffffffffffffffffffffff16816fffffffffffffffffffffffffffffffff161115611407578084602001906fffffffffffffffffffffffffffffffff1690816fffffffffffffffffffffffffffffffff16815250507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166321c984e989846040518363ffffffff1660e01b81526004016113ae929190612a8b565b6040805180830381865afa1580156113ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ee9190612b09565b600001518460000190600f0b9081600f0b815250508192505b818060010192505050611247565b50818194509450505050915091565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f89464856040518163ffffffff1660e01b8152600401602060405180830381865afa158015611492573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b691906126bb565b905060005b8451816fffffffffffffffffffffffffffffffff1610156115b957811561153857612710610d0286836fffffffffffffffffffffffffffffffff1681518110611507576115066126e8565b5b6020026020010151600f0b61151c9190612746565b61152691906127b7565b8361153191906127e8565b92506115a8565b61159a85826fffffffffffffffffffffffffffffffff16815181106115605761155f6126e8565b5b602002602001015185836fffffffffffffffffffffffffffffffff168151811061158d5761158c6126e8565b5b602002602001015161042d565b836115a591906127e8565b92505b806115b290612bc3565b90506114bb565b505092915050565b60606000825167ffffffffffffffff8111156115e0576115df611c88565b5b60405190808252806020026020018201604052801561161957816020015b611606611a6d565b8152602001906001900390816115fe5790505b509050611624611a3e565b600080600090505b85518110156119915760005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b9ef0830888481518110611687576116866126e8565b5b60200260200101516040518263ffffffff1660e01b81526004016116ab9190612a70565b602060405180830381865afa1580156116c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ec9190612875565b6fffffffffffffffffffffffffffffffff168110156118fc5760007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166321c984e9898581518110611756576117556126e8565b5b6020026020010151846040518363ffffffff1660e01b815260040161177c929190612a8b565b6040805180830381865afa158015611798573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117bc9190612b09565b60200151905084602001516fffffffffffffffffffffffffffffffff16816fffffffffffffffffffffffffffffffff1611156118f0578085602001906fffffffffffffffffffffffffffffffff1690816fffffffffffffffffffffffffffffffff16815250507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166321c984e9898581518110611871576118706126e8565b5b6020026020010151846040518363ffffffff1660e01b8152600401611897929190612a8b565b6040805180830381865afa1580156118b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d79190612b09565b600001518560000190600f0b9081600f0b815250508193505b81600101915050611638565b506040518060600160405280848152602001836fffffffffffffffffffffffffffffffff168152602001878381518110611939576119386126e8565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1681525084828151811061196d5761196c6126e8565b5b6020026020010181905250611980611a3e565b92506000915080600101905061162c565b50829350505050919050565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001606081526020016119e9611abc565b81525090565b60405180608001604052806000815260200160006fffffffffffffffffffffffffffffffff1681526020016000600f0b815260200160006fffffffffffffffffffffffffffffffff1681525090565b60405180604001604052806000600f0b815260200160006fffffffffffffffffffffffffffffffff1681525090565b6040518060600160405280611a80611a3e565b815260200160006fffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518060600160405280600390602082028036833780820191505090505090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b1d82611af2565b9050919050565b611b2d81611b12565b8114611b3857600080fd5b50565b600081359050611b4a81611b24565b92915050565b600060208284031215611b6657611b65611ae8565b5b6000611b7484828501611b3b565b91505092915050565b6000819050919050565b611b9081611b7d565b82525050565b6000602082019050611bab6000830184611b87565b92915050565b600081600f0b9050919050565b611bc781611bb1565b8114611bd257600080fd5b50565b600081359050611be481611bbe565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b611c0f81611bea565b8114611c1a57600080fd5b50565b600081359050611c2c81611c06565b92915050565b60008060408385031215611c4957611c48611ae8565b5b6000611c5785828601611bd5565b9250506020611c6885828601611c1d565b9150509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611cc082611c77565b810181811067ffffffffffffffff82111715611cdf57611cde611c88565b5b80604052505050565b6000611cf2611ade565b9050611cfe8282611cb7565b919050565b600067ffffffffffffffff821115611d1e57611d1d611c88565b5b602082029050602081019050919050565b600080fd5b6000611d47611d4284611d03565b611ce8565b90508083825260208201905060208402830185811115611d6a57611d69611d2f565b5b835b81811015611d935780611d7f8882611b3b565b845260208401935050602081019050611d6c565b5050509392505050565b600082601f830112611db257611db1611c72565b5b8135611dc2848260208601611d34565b91505092915050565b600060208284031215611de157611de0611ae8565b5b600082013567ffffffffffffffff811115611dff57611dfe611aed565b5b611e0b84828501611d9d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611e4981611b12565b82525050565b611e5881611b7d565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611e9381611bea565b82525050565b611ea281611bb1565b82525050565b608082016000820151611ebe6000850182611e4f565b506020820151611ed16020850182611e8a565b506040820151611ee46040850182611e99565b506060820151611ef76060850182611e8a565b50505050565b6000611f098383611ea8565b60808301905092915050565b6000602082019050919050565b6000611f2d82611e5e565b611f378185611e69565b9350611f4283611e7a565b8060005b83811015611f73578151611f5a8882611efd565b9750611f6583611f15565b925050600181019050611f46565b5085935050505092915050565b600060039050919050565b600081905092915050565b6000819050919050565b6000611fac8383611e99565b60208301905092915050565b6000602082019050919050565b611fce81611f80565b611fd88184611f8b565b9250611fe382611f96565b8060005b83811015612014578151611ffb8782611fa0565b965061200683611fb8565b925050600181019050611fe7565b505050505050565b6000610100830160008301516120356000860182611e40565b5060208301516120486020860182611e4f565b50604083015184820360408601526120608282611f22565b9150506060830151848203606086015261207a8282611f22565b915050608083015184820360808601526120948282611f22565b91505060a08301516120a960a0860182611fc5565b508091505092915050565b60006120c0838361201c565b905092915050565b6000602082019050919050565b60006120e082611e14565b6120ea8185611e1f565b9350836020820285016120fc85611e30565b8060005b85811015612138578484038952815161211985826120b4565b9450612124836120c8565b925060208a01995050600181019050612100565b50829750879550505050505092915050565b6000602082019050818103600083015261216481846120d5565b905092915050565b6000610100830160008301516121856000860182611e40565b5060208301516121986020860182611e4f565b50604083015184820360408601526121b08282611f22565b915050606083015184820360608601526121ca8282611f22565b915050608083015184820360808601526121e48282611f22565b91505060a08301516121f960a0860182611fc5565b508091505092915050565b6000602082019050818103600083015261221e818461216c565b905092915050565b6000819050919050565b600061224b61224661224184611af2565b612226565b611af2565b9050919050565b600061225d82612230565b9050919050565b600061226f82612252565b9050919050565b61227f81612264565b82525050565b600060208201905061229a6000830184612276565b92915050565b60006122ab82612252565b9050919050565b6122bb816122a0565b82525050565b60006020820190506122d660008301846122b2565b92915050565b6040820160008201516122f26000850182611e99565b5060208201516123056020850182611e8a565b50505050565b61231481611bea565b82525050565b600060608201905061232f60008301856122dc565b61233c604083018461230b565b9392505050565b600067ffffffffffffffff82111561235e5761235d611c88565b5b602082029050602081019050919050565b600061238261237d84612343565b611ce8565b905080838252602082019050602084028301858111156123a5576123a4611d2f565b5b835b818110156123ce57806123ba8882611bd5565b8452602084019350506020810190506123a7565b5050509392505050565b600082601f8301126123ed576123ec611c72565b5b81356123fd84826020860161236f565b91505092915050565b600067ffffffffffffffff82111561242157612420611c88565b5b602082029050602081019050919050565b600061244561244084612406565b611ce8565b9050808382526020820190506020840283018581111561246857612467611d2f565b5b835b81811015612491578061247d8882611c1d565b84526020840193505060208101905061246a565b5050509392505050565b600082601f8301126124b0576124af611c72565b5b81356124c0848260208601612432565b91505092915050565b600080604083850312156124e0576124df611ae8565b5b600083013567ffffffffffffffff8111156124fe576124fd611aed565b5b61250a858286016123d8565b925050602083013567ffffffffffffffff81111561252b5761252a611aed565b5b6125378582860161249b565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6040820160008201516125836000850182611e99565b5060208201516125966020850182611e8a565b50505050565b6080820160008201516125b2600085018261256d565b5060208201516125c56040850182611e8a565b5060408201516125d86060850182611e40565b50505050565b60006125ea838361259c565b60808301905092915050565b6000602082019050919050565b600061260e82612541565b612618818561254c565b93506126238361255d565b8060005b8381101561265457815161263b88826125de565b9750612646836125f6565b925050600181019050612627565b5085935050505092915050565b6000602082019050818103600083015261267b8184612603565b905092915050565b60008115159050919050565b61269881612683565b81146126a357600080fd5b50565b6000815190506126b58161268f565b92915050565b6000602082840312156126d1576126d0611ae8565b5b60006126df848285016126a6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061275182611b7d565b915061275c83611b7d565b925082820261276a81611b7d565b9150828204841483151761278157612780612717565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006127c282611b7d565b91506127cd83611b7d565b9250826127dd576127dc612788565b5b828204905092915050565b60006127f382611b7d565b91506127fe83611b7d565b925082820190508082111561281657612815612717565b5b92915050565b600061282782611bea565b915061283283611bea565b925082820390506fffffffffffffffffffffffffffffffff81111561285a57612859612717565b5b92915050565b60008151905061286f81611c06565b92915050565b60006020828403121561288b5761288a611ae8565b5b600061289984828501612860565b91505092915050565b60006128ad82611bea565b91506128b883611bea565b9250826128c8576128c7612788565b5b828204905092915050565b60006128de82611bea565b91506128e983611bea565b92508282026128f781611bea565b915080821461290957612908612717565b5b5092915050565b60008151905061291f81611bbe565b92915050565b60006020828403121561293b5761293a611ae8565b5b600061294984828501612910565b91505092915050565b600061295d82611bb1565b915061296883611bb1565b925082820261297681611bb1565b915080821461298857612987612717565b5b5092915050565b600061299a82611bb1565b91506129a583611bb1565b9250826129b5576129b4612788565b5b600160000383147fffffffffffffffffffffffffffffffff80000000000000000000000000000000831416156129ee576129ed612717565b5b828205905092915050565b6000612a0482611bb1565b9150612a0f83611bb1565b925082820190507fffffffffffffffffffffffffffffffff8000000000000000000000000000000081126f7fffffffffffffffffffffffffffffff82131715612a5b57612a5a612717565b5b92915050565b612a6a81611b12565b82525050565b6000602082019050612a856000830184612a61565b92915050565b6000604082019050612aa06000830185612a61565b612aad602083018461230b565b9392505050565b600080fd5b600060408284031215612acf57612ace612ab4565b5b612ad96040611ce8565b90506000612ae984828501612910565b6000830152506020612afd84828501612860565b60208301525092915050565b600060408284031215612b1f57612b1e611ae8565b5b6000612b2d84828501612ab9565b91505092915050565b612b3f81611b7d565b8114612b4a57600080fd5b50565b600081519050612b5c81612b36565b92915050565b600060208284031215612b7857612b77611ae8565b5b6000612b8684828501612b4d565b91505092915050565b6000612b9a82611b7d565b9150612ba583611b7d565b9250828203905081811115612bbd57612bbc612717565b5b92915050565b6000612bce82611bea565b91506fffffffffffffffffffffffffffffffff8203612bf057612bef612717565b5b60018201905091905056fea2646970667358221220c76acd57236ef0da39f217e85ec107afe1c60cf8e6cb8da58169c158a5eeaa7a64736f6c634300081a0033";

type FPISLockerUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FPISLockerUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FPISLockerUtils__factory extends ContractFactory {
  constructor(...args: FPISLockerUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _FPISLocker: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_FPISLocker, overrides || {});
  }
  override deploy(
    _FPISLocker: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_FPISLocker, overrides || {}) as Promise<
      FPISLockerUtils & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FPISLockerUtils__factory {
    return super.connect(runner) as FPISLockerUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FPISLockerUtilsInterface {
    return new Interface(_abi) as FPISLockerUtilsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FPISLockerUtils {
    return new Contract(address, _abi, runner) as unknown as FPISLockerUtils;
  }
}
