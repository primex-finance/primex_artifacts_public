/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IL1VePMX,
  IL1VePMXInterface,
} from "../../../VestedPMX-and-Flox/interfaces/IL1VePMX";

const _abi = [
  {
    inputs: [],
    name: "LOCKED_SLOT_INDEX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "end",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "blockTimestamp",
            type: "uint64",
          },
        ],
        internalType: "struct IL1VePMX.LockedBalance[]",
        name: "_lockedBalances",
        type: "tuple[]",
      },
    ],
    name: "adminProofVePMX",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stateRootOracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "locked",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "end",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "blockTimestamp",
            type: "uint64",
          },
        ],
        internalType: "struct IL1VePMX.LockedBalance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "_accountProof",
        type: "bytes[]",
      },
      {
        internalType: "bytes[]",
        name: "_storageProof1",
        type: "bytes[]",
      },
      {
        internalType: "bytes[]",
        name: "_storageProof2",
        type: "bytes[]",
      },
    ],
    name: "proofVePMX",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vePMXAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IL1VePMX__factory {
  static readonly abi = _abi;
  static createInterface(): IL1VePMXInterface {
    return new Interface(_abi) as IL1VePMXInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IL1VePMX {
    return new Contract(address, _abi, runner) as unknown as IL1VePMX;
  }
}
