/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IStateRootOracle,
  IStateRootOracleInterface,
} from "../../../../VestedPMX-and-Flox/VestedPMX/L1VePMX.sol/IStateRootOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getBlockInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRootHash",
            type: "bytes32",
          },
          {
            internalType: "uint40",
            name: "timestamp",
            type: "uint40",
          },
        ],
        internalType: "struct IStateRootOracle.BlockInfo",
        name: "_blockInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IStateRootOracle__factory {
  static readonly abi = _abi;
  static createInterface(): IStateRootOracleInterface {
    return new Interface(_abi) as IStateRootOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IStateRootOracle {
    return new Contract(address, _abi, runner) as unknown as IStateRootOracle;
  }
}
