/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPriceSourceReceiver,
  IPriceSourceReceiverInterface,
} from "../../../../VestedPMX-and-Flox/VestedPMX/L1VePMX.sol/IPriceSourceReceiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "isBadData",
        type: "bool",
      },
      {
        internalType: "uint104",
        name: "priceLow",
        type: "uint104",
      },
      {
        internalType: "uint104",
        name: "priceHigh",
        type: "uint104",
      },
      {
        internalType: "uint40",
        name: "timestamp",
        type: "uint40",
      },
    ],
    name: "addRoundData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrices",
    outputs: [
      {
        internalType: "bool",
        name: "isBadData",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "priceLow",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceHigh",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IPriceSourceReceiver__factory {
  static readonly abi = _abi;
  static createInterface(): IPriceSourceReceiverInterface {
    return new Interface(_abi) as IPriceSourceReceiverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IPriceSourceReceiver {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IPriceSourceReceiver;
  }
}
