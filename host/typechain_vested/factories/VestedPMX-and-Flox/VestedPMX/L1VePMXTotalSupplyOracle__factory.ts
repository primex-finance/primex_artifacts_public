/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  L1VePMXTotalSupplyOracle,
  L1VePMXTotalSupplyOracleInterface,
} from "../../../VestedPMX-and-Flox/VestedPMX/L1VePMXTotalSupplyOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bot",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_initTtlSupplyStored",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "_initBlkWhenTotalSupplyRead",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_initTsWhenTtlSupplyRead",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidOwnershipAcceptance",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerCannotBeZero",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "blk",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "ts",
        type: "uint128",
      },
    ],
    name: "InfoUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "blkWhenTotalSupplyRead",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "botAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBotUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newBot",
        type: "address",
      },
    ],
    name: "setBot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupplyExtra",
    outputs: [
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "_blk",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_ts",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupplyStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tsWhenTotalSupplyRead",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "_blk",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_ts",
        type: "uint128",
      },
    ],
    name: "updateInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ed4380380610ed4833981810160405281019061003291906102ee565b84600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610099576040517f9b15e16f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60008260405161010b929190610378565b60405180910390a15083600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260028190555081600360006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555080600360106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506000816fffffffffffffffffffffffffffffffff16111561020357806fffffffffffffffffffffffffffffffff166004819055505b50505050506103a1565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061023d82610212565b9050919050565b61024d81610232565b811461025857600080fd5b50565b60008151905061026a81610244565b92915050565b6000819050919050565b61028381610270565b811461028e57600080fd5b50565b6000815190506102a08161027a565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6102cb816102a6565b81146102d657600080fd5b50565b6000815190506102e8816102c2565b92915050565b600080600080600060a0868803121561030a5761030961020d565b5b60006103188882890161025b565b95505060206103298882890161025b565b945050604061033a88828901610291565b935050606061034b888289016102d9565b925050608061035c888289016102d9565b9150509295509295909350565b61037281610232565b82525050565b600060408201905061038d6000830185610369565b61039a6020830184610369565b9392505050565b610b24806103b06000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636b5caec41161008c5780638da5cb5b116100665780638da5cb5b146101c85780638da7b32b146101e657806391e7d9e914610204578063ef1c243a14610224576100cf565b80636b5caec41461018657806376867c7f146101a257806379ba5097146101be576100cf565b80630d34b840146100d45780631627540c146100f257806318160ddd1461010e5780634bf4f4231461012c57806353a47bb71461014a5780636b1253ef14610168575b600080fd5b6100dc610242565b6040516100e9919061085d565b60405180910390f35b61010c600480360381019061010791906108db565b610264565b005b610116610364565b6040516101239190610921565b60405180910390f35b61013461036e565b604051610141919061094b565b60405180910390f35b610152610394565b60405161015f919061094b565b60405180910390f35b6101706103ba565b60405161017d919061085d565b60405180910390f35b6101a0600480360381019061019b91906108db565b6103dc565b005b6101bc60048036038101906101b791906109be565b6104a5565b005b6101c6610609565b005b6101d06107b1565b6040516101dd919061094b565b60405180910390f35b6101ee6107d5565b6040516101fb9190610921565b60405180910390f35b61020c6107db565b60405161021b93929190610a11565b60405180910390f35b61022c61082c565b6040516102399190610921565b60405180910390f35b600360009054906101000a90046fffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102e9576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce2281604051610359919061094b565b60405180910390a150565b6000600254905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360109054906101000a90046fffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610461576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061054c5750600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61058b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058290610aa5565b60405180910390fd5b8260028190555081600360006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555080600360106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610690576040517fd74b334e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610703929190610ac5565b60405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6000806000600254600360009054906101000a90046fffffffffffffffffffffffffffffffff16600360109054906101000a90046fffffffffffffffffffffffffffffffff16925092509250909192565b60025481565b60006fffffffffffffffffffffffffffffffff82169050919050565b61085781610832565b82525050565b6000602082019050610872600083018461084e565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108a88261087d565b9050919050565b6108b88161089d565b81146108c357600080fd5b50565b6000813590506108d5816108af565b92915050565b6000602082840312156108f1576108f0610878565b5b60006108ff848285016108c6565b91505092915050565b6000819050919050565b61091b81610908565b82525050565b60006020820190506109366000830184610912565b92915050565b6109458161089d565b82525050565b6000602082019050610960600083018461093c565b92915050565b61096f81610908565b811461097a57600080fd5b50565b60008135905061098c81610966565b92915050565b61099b81610832565b81146109a657600080fd5b50565b6000813590506109b881610992565b92915050565b6000806000606084860312156109d7576109d6610878565b5b60006109e58682870161097d565b93505060206109f6868287016109a9565b9250506040610a07868287016109a9565b9150509250925092565b6000606082019050610a266000830186610912565b610a33602083018561084e565b610a40604083018461084e565b949350505050565b600082825260208201905092915050565b7f596f7520617265206e6f7420746865206f776e6572206f722074686520626f74600082015250565b6000610a8f602083610a48565b9150610a9a82610a59565b602082019050919050565b60006020820190508181036000830152610abe81610a82565b9050919050565b6000604082019050610ada600083018561093c565b610ae7602083018461093c565b939250505056fea264697066735822122016960b8eb3523b4c25c51759d3af92bd437fc4cd47f3cd41e426b323b61de42964736f6c634300081a0033";

type L1VePMXTotalSupplyOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L1VePMXTotalSupplyOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L1VePMXTotalSupplyOracle__factory extends ContractFactory {
  constructor(...args: L1VePMXTotalSupplyOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    _bot: AddressLike,
    _initTtlSupplyStored: BigNumberish,
    _initBlkWhenTotalSupplyRead: BigNumberish,
    _initTsWhenTtlSupplyRead: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _owner,
      _bot,
      _initTtlSupplyStored,
      _initBlkWhenTotalSupplyRead,
      _initTsWhenTtlSupplyRead,
      overrides || {}
    );
  }
  override deploy(
    _owner: AddressLike,
    _bot: AddressLike,
    _initTtlSupplyStored: BigNumberish,
    _initBlkWhenTotalSupplyRead: BigNumberish,
    _initTsWhenTtlSupplyRead: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _owner,
      _bot,
      _initTtlSupplyStored,
      _initBlkWhenTotalSupplyRead,
      _initTsWhenTtlSupplyRead,
      overrides || {}
    ) as Promise<
      L1VePMXTotalSupplyOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): L1VePMXTotalSupplyOracle__factory {
    return super.connect(runner) as L1VePMXTotalSupplyOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L1VePMXTotalSupplyOracleInterface {
    return new Interface(_abi) as L1VePMXTotalSupplyOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): L1VePMXTotalSupplyOracle {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as L1VePMXTotalSupplyOracle;
  }
}
