/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TokenSaleRegister,
  TokenSaleRegisterInterface,
} from "../../../contracts/TokenSaleRegister.sol/TokenSaleRegister";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Buying",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "RateChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_allowedTokens",
        type: "address[]",
      },
    ],
    name: "addAllowedTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "allowedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "acceptable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_investmentAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_buyForToken",
        type: "address",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "buyers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxSaleAmount",
        type: "uint256",
      },
    ],
    name: "changeMaxSaleAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "changeSalePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_saleStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_saleEnd",
        type: "uint256",
      },
    ],
    name: "changeTimestamps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "completeTokenSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cursor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    name: "getAllBuyersWithBalances",
    outputs: [
      {
        internalType: "address[]",
        name: "_buyers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_newCursor",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBuyersLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_saleStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_saleEnd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSaleAmount",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_allowedTokens",
        type: "address[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSaleAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_removedTokens",
        type: "address[]",
      },
    ],
    name: "removeAllowedTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "retrieveToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "salePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "saleStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "tokenMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "multiplier",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "userBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506016601a565b60d7565b600054610100900460ff161560855760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161460d5576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6115fd806100e66000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063931415d6116100c3578063c5c2dc8b1161007c578063c5c2dc8b1461029c578063d95913b0146102af578063e744092e146102c2578063f2aa8218146102f5578063f2fde38b14610308578063f51f96dd1461031b57600080fd5b8063931415d61461022d5780639db963751461024f578063ab0bcc4114610257578063b2dc23c314610260578063b562089614610280578063c10b93581461029357600080fd5b8063392617671161011557806339261767146101be578063715018a6146101d15780637deb6025146101d95780638cf39d5f146101ec5780638da5cb5b146101ff5780639106d7ba1461022457600080fd5b806311226c341461015257806319a2ca441461016757806326224c64146101835780632961320c146101a357806330be0545146101b6575b600080fd5b6101656101603660046110ee565b610324565b005b61017060685481565b6040519081526020015b60405180910390f35b61017061019136600461112c565b606a6020526000908152604090205481565b6101656101b136600461114e565b61033a565b606d54610170565b6101656101cc3660046111cd565b610433565b6101656106cf565b6101656101e7366004611237565b6106e3565b6101656101fa36600461125a565b610aa1565b6033546001600160a01b03165b6040516001600160a01b03909116815260200161017a565b61017060695481565b61024061023b3660046110ee565b610b16565b60405161017a9392919061129c565b610165610ced565b61017060655481565b61017061026e36600461112c565b606c6020526000908152604090205481565b61016561028e36600461132f565b610cfc565b61017060665481565b6101656102aa36600461125a565b610d5f565b6101656102bd36600461132f565b610eb2565b6102e56102d036600461112c565b606b6020526000908152604090205460ff1681565b604051901515815260200161017a565b61020c61030336600461132f565b610ebf565b61016561031636600461112c565b610ee9565b61017060675481565b61032c610f62565b6103368282610fbc565b5050565b610342610f62565b6040516370a0823160e01b815230600482015273__$0374a552468b4533ee1eff015be16d3a4f$__9063c66c253690849084906001600160a01b038316906370a0823190602401602060405180830381865afa1580156103a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ca9190611348565b6040516001600160e01b031960e086901b1681526001600160a01b039384166004820152929091166024830152604482015260640160006040518083038186803b15801561041757600080fd5b505af415801561042b573d6000803e3d6000fd5b505050505050565b600054610100900460ff16158080156104535750600054600160ff909116105b8061046d5750303b15801561046d575060005460ff166001145b6104d55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156104f8576000805461ff0019166101001790555b600085116105185760405162461bcd60e51b81526004016104cc90611361565b6067859055606884905561052c8787610fbc565b60005b82811015610677576001606b600086868581811061054f5761054f6113a3565b9050602002016020810190610564919061112c565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905583838281811061059e5761059e6113a3565b90506020020160208101906105b3919061112c565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061491906113b9565b61061f9060126113f2565b61062a90600a6114f8565b606c6000868685818110610640576106406113a3565b9050602002016020810190610655919061112c565b6001600160a01b0316815260208101919091526040016000205560010161052f565b5061068061103d565b80156106c6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6106d7610f62565b6106e1600061106c565b565b60655442101561074f5760405162461bcd60e51b815260206004820152603160248201527f546f6b656e53616c6552656769737465723a20746f6b656e2073616c652068616044820152701cc81b9bdd081cdd185c9d1959081e595d607a1b60648201526084016104cc565b6066544211156107b95760405162461bcd60e51b815260206004820152602f60248201527f546f6b656e53616c6552656769737465723a20746f6b656e2073616c6520686160448201526e1cc8185b1c9958591e48195b991959608a1b60648201526084016104cc565b6001600160a01b0381166000908152606b602052604090205460ff166108315760405162461bcd60e51b815260206004820152602760248201527f546f6b656e53616c6552656769737465723a20746f6b656e206973206e6f7420604482015266185b1b1bddd95960ca1b60648201526084016104cc565b6001600160a01b0381166000908152606c60205260408120546108549084611507565b90506000606754670de0b6b3a76400008361086f9190611507565b610879919061151e565b90506068548160695461088c9190611540565b11156108ed5760405162461bcd60e51b815260206004820152602a60248201527f546f6b656e53616c6552656769737465723a206d61782073616c6520616d6f756044820152691b9d081c995858da195960b21b60648201526084016104cc565b600081116109485760405162461bcd60e51b815260206004820152602260248201527f546f6b656e53616c6552656769737465723a207a65726f20706d7820616d6f756044820152611b9d60f21b60648201526084016104cc565b806069600082825461095a9190611540565b9091555050336000908152606a602052604081205490036109b857606d80546001810182556000919091527f5006b838207c6a9ae9b84d68f467dd4bb5c305fbfb6b04eab8faaabeec1e18d80180546001600160a01b031916331790555b336000908152606a6020526040812080548392906109d7908490611540565b909155505060405163c37f7f7f60e01b81526001600160a01b03841660048201523360248201526044810185905273__$0374a552468b4533ee1eff015be16d3a4f$__9063c37f7f7f90606401602060405180830381865af4158015610a41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a659190611348565b5060405181815233907f840df612bc9052dfa7ac2e14fc52368ca7749154d9132b7601f59d329f787fd69060200160405180910390a250505050565b610aa9610f62565b60005b81811015610b11576000606b6000858585818110610acc57610acc6113a3565b9050602002016020810190610ae1919061112c565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600101610aac565b505050565b606080600080610b25606d5490565b9050808610610b5157505060408051600080825260208201818152828401909352909350909150610ce6565b80610b5c8688611540565b10610b7257610b6b8682611569565b9450610b7f565b610b7c8587611540565b91505b8467ffffffffffffffff811115610b9857610b98611553565b604051908082528060200260200182016040528015610bc1578160200160208202803683370190505b5093508467ffffffffffffffff811115610bdd57610bdd611553565b604051908082528060200260200182016040528015610c06578160200160208202803683370190505b50925060005b85811015610ce357606d610c208289611540565b81548110610c3057610c306113a3565b9060005260206000200160009054906101000a90046001600160a01b0316858281518110610c6057610c606113a3565b60200260200101906001600160a01b031690816001600160a01b031681525050606a6000606d8381548110610c9757610c976113a3565b60009182526020808320909101546001600160a01b031683528201929092526040019020548451859083908110610cd057610cd06113a3565b6020908102919091010152600101610c0c565b50505b9250925092565b610cf5610f62565b6000606655565b610d04610f62565b60008111610d245760405162461bcd60e51b81526004016104cc90611361565b60678190556040518181527f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109060200160405180910390a150565b610d67610f62565b60005b81811015610b11576001606b6000858585818110610d8a57610d8a6113a3565b9050602002016020810190610d9f919061112c565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055828282818110610dd957610dd96113a3565b9050602002016020810190610dee919061112c565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4f91906113b9565b610e5a9060126113f2565b610e6590600a6114f8565b606c6000858585818110610e7b57610e7b6113a3565b9050602002016020810190610e90919061112c565b6001600160a01b03168152602081019190915260400160002055600101610d6a565b610eba610f62565b606855565b606d8181548110610ecf57600080fd5b6000918252602090912001546001600160a01b0316905081565b610ef1610f62565b6001600160a01b038116610f565760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104cc565b610f5f8161106c565b50565b6033546001600160a01b031633146106e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104cc565b428210158015610fcb57508181115b6110325760405162461bcd60e51b815260206004820152603260248201527f546f6b656e53616c6552656769737465723a20696e636f727265637420746f6b604482015271656e2073616c652074696d657374616d707360701b60648201526084016104cc565b606591909155606655565b600054610100900460ff166110645760405162461bcd60e51b81526004016104cc9061157c565b6106e16110be565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166110e55760405162461bcd60e51b81526004016104cc9061157c565b6106e13361106c565b6000806040838503121561110157600080fd5b50508035926020909101359150565b80356001600160a01b038116811461112757600080fd5b919050565b60006020828403121561113e57600080fd5b61114782611110565b9392505050565b6000806040838503121561116157600080fd5b61116a83611110565b915061117860208401611110565b90509250929050565b60008083601f84011261119357600080fd5b50813567ffffffffffffffff8111156111ab57600080fd5b6020830191508360208260051b85010111156111c657600080fd5b9250929050565b60008060008060008060a087890312156111e657600080fd5b86359550602087013594506040870135935060608701359250608087013567ffffffffffffffff81111561121957600080fd5b61122589828a01611181565b979a9699509497509295939492505050565b6000806040838503121561124a57600080fd5b8235915061117860208401611110565b6000806020838503121561126d57600080fd5b823567ffffffffffffffff81111561128457600080fd5b61129085828601611181565b90969095509350505050565b6060808252845190820181905260009060208601906080840190835b818110156112df5783516001600160a01b03168352602093840193909201916001016112b8565b50508381036020808601919091528651808352918101925086019060005b8181101561131b5782518452602093840193909201916001016112fd565b505050604092909201929092529392505050565b60006020828403121561134157600080fd5b5035919050565b60006020828403121561135a57600080fd5b5051919050565b60208082526022908201527f546f6b656e53616c6552656769737465723a207a65726f2073616c6520707269604082015261636560f01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156113cb57600080fd5b815160ff8116811461114757600080fd5b634e487b7160e01b600052601160045260246000fd5b60ff828116828216039081111561140b5761140b6113dc565b92915050565b6001815b600184111561144c57808504811115611430576114306113dc565b600184161561143e57908102905b60019390931c928002611415565b935093915050565b6000826114635750600161140b565b816114705750600061140b565b81600181146114865760028114611490576114ac565b600191505061140b565b60ff8411156114a1576114a16113dc565b50506001821b61140b565b5060208310610133831016604e8410600b84101617156114cf575081810a61140b565b6114dc6000198484611411565b80600019048211156114f0576114f06113dc565b029392505050565b600061114760ff841683611454565b808202811582820484141761140b5761140b6113dc565b60008261153b57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561140b5761140b6113dc565b634e487b7160e01b600052604160045260246000fd5b8181038181111561140b5761140b6113dc565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220c7aaee84985cd646b55d1ac4c0fae8c843415f6249b6c7a6c96d70449aaa8b9b64736f6c634300081a0033";

type TokenSaleRegisterConstructorParams =
  | [linkLibraryAddresses: TokenSaleRegisterLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenSaleRegisterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TokenSaleRegister__factory extends ContractFactory {
  constructor(...args: TokenSaleRegisterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        TokenSaleRegister__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: TokenSaleRegisterLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$0374a552468b4533ee1eff015be16d3a4f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/TokenTransfersLibrary.sol:TokenTransfersLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TokenSaleRegister & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenSaleRegister__factory {
    return super.connect(runner) as TokenSaleRegister__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenSaleRegisterInterface {
    return new Interface(_abi) as TokenSaleRegisterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenSaleRegister {
    return new Contract(address, _abi, runner) as unknown as TokenSaleRegister;
  }
}

export interface TokenSaleRegisterLibraryAddresses {
  ["contracts/TokenTransfersLibrary.sol:TokenTransfersLibrary"]: string;
}
